<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__character_animation_manager_8cs_source" xml:lang="en-US">
<title>CharacterAnimationManager.cs</title>
<indexterm><primary>UI/Components/AnimationComponents/CharacterAnimationManager.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__character_animation_manager_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_system">System</link>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__character_animation_manager_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>System.Linq;
<anchor xml:id="__character_animation_manager_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__character_animation_manager_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.UI;
<anchor xml:id="__character_animation_manager_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis>static&#32;BlobertAnimationController;
<anchor xml:id="__character_animation_manager_8cs_source_1l00007"/>00007 
<anchor xml:id="__character_animation_manager_8cs_source_1l00008"/><link linkend="_class_character_animation_manager">00008</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_character_animation_manager">CharacterAnimationManager</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__character_animation_manager_8cs_source_1l00009"/>00009 {
<anchor xml:id="__character_animation_manager_8cs_source_1l00010"/><link linkend="_struct_character_animation_manager_1_1_texture_function_input">00010</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_character_animation_manager_1_1_texture_function_input">TextureFunctionInput</link>
<anchor xml:id="__character_animation_manager_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00012"/><link linkend="_struct_character_animation_manager_1_1_texture_function_input_1af65ae581a285e2d23186d6b80b3ea65e">00012</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;<link linkend="_struct_character_animation_manager_1_1_texture_function_input_1af65ae581a285e2d23186d6b80b3ea65e">Texture</link>&#32;<link linkend="_struct_character_animation_manager_1_1_texture_function_input_1af65ae581a285e2d23186d6b80b3ea65e">Texture</link>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00013"/><link linkend="_struct_character_animation_manager_1_1_texture_function_input_1a4d4dfeecc18fab75db8bed585e58a483">00013</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_struct_character_animation_manager_1_1_texture_function_input_1a4d4dfeecc18fab75db8bed585e58a483">Name</link>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00014"/><link linkend="_struct_character_animation_manager_1_1_texture_function_input_1a5053b170f4a2ca4268b65f5c961f20d6">00014</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_character_animation_manager_1_1_texture_function_input_1a5053b170f4a2ca4268b65f5c961f20d6">StartIndex</link>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00015"/><link linkend="_struct_character_animation_manager_1_1_texture_function_input_1aadc584e7562fe05d24d56f19fb66f27d">00015</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_character_animation_manager_1_1_texture_function_input_1aadc584e7562fe05d24d56f19fb66f27d">Length</link>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00016"/><link linkend="_struct_character_animation_manager_1_1_texture_function_input_1afaacabaf9985850e15fdbbaa8a686135">00016</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;List&lt;Sprite&gt;&#32;<link linkend="_struct_character_animation_manager_1_1_texture_function_input_1afaacabaf9985850e15fdbbaa8a686135">Sprites</link>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00017"/>00017 
<anchor xml:id="__character_animation_manager_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Constructor&#32;that&#32;loads&#32;and&#32;trims&#32;the&#32;list&#32;of&#32;sprites</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00019"/><link linkend="_struct_character_animation_manager_1_1_texture_function_input_1ad063be8940a5771c5610c3f6555322b4">00019</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_character_animation_manager_1_1_texture_function_input_1ad063be8940a5771c5610c3f6555322b4">TextureFunctionInput</link>(Texture&#32;texture,&#32;<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<emphasis role="keywordtype">int</emphasis>&#32;startIndex,&#32;<emphasis role="keywordtype">int</emphasis>&#32;length)
<anchor xml:id="__character_animation_manager_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Texture&#32;=&#32;texture;
<anchor xml:id="__character_animation_manager_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Name&#32;=&#32;name;
<anchor xml:id="__character_animation_manager_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.StartIndex&#32;=&#32;startIndex;
<anchor xml:id="__character_animation_manager_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Length&#32;=&#32;length;
<anchor xml:id="__character_animation_manager_8cs_source_1l00025"/>00025 
<anchor xml:id="__character_animation_manager_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;allSprites&#32;=&#32;Resources.LoadAll&lt;Sprite&gt;(name).ToList();
<anchor xml:id="__character_animation_manager_8cs_source_1l00027"/>00027 
<anchor xml:id="__character_animation_manager_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(startIndex&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;startIndex&#32;+&#32;length&#32;&lt;=&#32;allSprites.Count)
<anchor xml:id="__character_animation_manager_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sprites&#32;=&#32;allSprites.GetRange(startIndex,&#32;length);
<anchor xml:id="__character_animation_manager_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogWarning(<emphasis role="stringliteral">&quot;Requested&#32;sprite&#32;range&#32;is&#32;out&#32;of&#32;bounds.&#32;Assigning&#32;an&#32;empty&#32;list.&quot;</emphasis>);
<anchor xml:id="__character_animation_manager_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sprites&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Sprite&gt;();&#32;<emphasis role="comment">//&#32;Assign&#32;an&#32;empty&#32;list&#32;if&#32;out&#32;of&#32;bounds</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00038"/>00038 
<anchor xml:id="__character_animation_manager_8cs_source_1l00039"/><link linkend="_struct_character_animation_manager_1_1_texture_function_input_1ab35f1cb53d1223db5c9969fc96c39810">00039</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_character_animation_manager_1_1_texture_function_input_1ab35f1cb53d1223db5c9969fc96c39810">TextureFunctionInput</link>(List&lt;Sprite&gt;&#32;sprites,&#32;<emphasis role="keywordtype">int</emphasis>&#32;length)
<anchor xml:id="__character_animation_manager_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Texture&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Texture&#32;=&#32;sprites[0].texture;
<anchor xml:id="__character_animation_manager_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(Exception&#32;ex)
<anchor xml:id="__character_animation_manager_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError($<emphasis role="stringliteral">&quot;{sprites.Count}&#32;and&#32;here&#32;is&#32;the&#32;last&#32;{sprites[sprites.Count&#32;-&#32;1].name}&quot;</emphasis>);
<anchor xml:id="__character_animation_manager_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00050"/>00050 
<anchor xml:id="__character_animation_manager_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Name&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.StartIndex&#32;=&#32;0;
<anchor xml:id="__character_animation_manager_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Length&#32;=&#32;length;
<anchor xml:id="__character_animation_manager_8cs_source_1l00054"/>00054 
<anchor xml:id="__character_animation_manager_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sprites&#32;=&#32;sprites;
<anchor xml:id="__character_animation_manager_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00058"/>00058 
<anchor xml:id="__character_animation_manager_8cs_source_1l00059"/><link linkend="_class_character_animation_manager_1_1_tween_callback_system">00059</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_character_animation_manager_1_1_tween_callback_system">TweenCallbackSystem</link>
<anchor xml:id="__character_animation_manager_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00061"/><link linkend="_class_character_animation_manager_1_1_tween_callback_system_1afc567c66e081ff8eadf024df6a52e01f">00061</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_character_animation_manager_1_1_tween_callback_system_1afc567c66e081ff8eadf024df6a52e01f">frameNum</link>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00062"/><link linkend="_class_character_animation_manager_1_1_tween_callback_system_1a19a6db280619a1bbd00b98c4be31f646">00062</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&#32;<link linkend="_class_character_animation_manager_1_1_tween_callback_system_1a19a6db280619a1bbd00b98c4be31f646">functionCallback</link>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00063"/>00063 
<anchor xml:id="__character_animation_manager_8cs_source_1l00064"/><link linkend="_class_character_animation_manager_1_1_tween_callback_system_1a1b4055bc8e26d6a520e17754a65cd52a">00064</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_character_animation_manager_1_1_tween_callback_system_1a1b4055bc8e26d6a520e17754a65cd52a">TweenCallbackSystem</link>(<emphasis role="keywordtype">int</emphasis>&#32;frameNum,&#32;Action&#32;functionCallback)
<anchor xml:id="__character_animation_manager_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.frameNum&#32;=&#32;frameNum;
<anchor xml:id="__character_animation_manager_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.functionCallback&#32;=&#32;functionCallback;
<anchor xml:id="__character_animation_manager_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00070"/>00070 
<anchor xml:id="__character_animation_manager_8cs_source_1l00071"/>00071 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Settings</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00072"/>00072 
<anchor xml:id="__character_animation_manager_8cs_source_1l00073"/><link linkend="_class_character_animation_manager_1a6ca0893384207b14ac5eb79bb362db75">00073</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_character_animation_manager_1a6ca0893384207b14ac5eb79bb362db75">Speed</link>&#32;=&#32;0.08333f;
<anchor xml:id="__character_animation_manager_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_paused&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00075"/>00075 
<anchor xml:id="__character_animation_manager_8cs_source_1l00076"/>00076 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion&#32;Settings</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00077"/>00077 
<anchor xml:id="__character_animation_manager_8cs_source_1l00078"/>00078 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Objects&#32;Refs</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00079"/>00079 
<anchor xml:id="__character_animation_manager_8cs_source_1l00080"/><link linkend="_class_character_animation_manager_1af4a0dcc7a2386ab3c7ac2a3145349f5f">00080</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;GameObject&gt;&#32;<link linkend="_class_character_animation_manager_1af4a0dcc7a2386ab3c7ac2a3145349f5f">ImageObjects</link>;&#32;<emphasis role="comment">//&#32;Spawned&#32;objects&#32;where&#32;traits&#32;will&#32;be&#32;shown</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00081"/><link linkend="_class_character_animation_manager_1a1aab4a10ce8c04c2b1b8df318554763c">00081</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Image&#32;<link linkend="_class_character_animation_manager_1a1aab4a10ce8c04c2b1b8df318554763c">EffectOverlayImage</link>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00082"/><link linkend="_class_character_animation_manager_1a8984e524b7f09349495a1d29236f8522">00082</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Transform&#32;<link linkend="_class_character_animation_manager_1a8984e524b7f09349495a1d29236f8522">TraitParent</link>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00083"/>00083 
<anchor xml:id="__character_animation_manager_8cs_source_1l00084"/>00084 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion&#32;Objects&#32;Refs</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00085"/>00085 
<anchor xml:id="__character_animation_manager_8cs_source_1l00086"/>00086 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Animation&#32;Data</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00087"/>00087 
<anchor xml:id="__character_animation_manager_8cs_source_1l00088"/><link linkend="_class_character_animation_manager_1adb639faba19560dc1946a9efec4a4d4e">00088</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;TextureFunctionInput&gt;&#32;<link linkend="_class_character_animation_manager_1adb639faba19560dc1946a9efec4a4d4e">IdleTextureFunctionInput</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>();
<anchor xml:id="__character_animation_manager_8cs_source_1l00089"/><link linkend="_class_character_animation_manager_1a59d470c0711ce496ecffd6a5c90c0e29">00089</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;TextureFunctionInput&gt;&#32;<link linkend="_class_character_animation_manager_1a59d470c0711ce496ecffd6a5c90c0e29">PlayOverTextureFunctionInput</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>();
<anchor xml:id="__character_animation_manager_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_isPlayingOver&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00091"/>00091 
<anchor xml:id="__character_animation_manager_8cs_source_1l00092"/><link linkend="_class_character_animation_manager_1a428ea85e49fa33e12b1fd892b535abfa">00092</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Queue&lt;(List&lt;TextureFunctionInput&gt;&#32;textureData,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;drawOver,&#32;List&lt;TweenCallbackSystem&gt;&#32;callbackSystem)&gt;&#32;QueueOfPlayOverAnims&#32;=&#32;<emphasis role="keyword">new</emphasis>();
<anchor xml:id="__character_animation_manager_8cs_source_1l00093"/>00093 
<anchor xml:id="__character_animation_manager_8cs_source_1l00094"/>00094 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion&#32;Animation&#32;Data</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00095"/>00095 
<anchor xml:id="__character_animation_manager_8cs_source_1l00096"/>00096 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Initializing&#32;Component</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00097"/>00097 
<anchor xml:id="__character_animation_manager_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;<emphasis role="comment">//here&#32;we&#32;need&#32;a&#32;init&#32;helper</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00100"/>00100 
<anchor xml:id="__character_animation_manager_8cs_source_1l00102"/><link linkend="_class_character_animation_manager_1a0186b2b9cb62c25c7af70e065844c356">00102</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_character_animation_manager_1a0186b2b9cb62c25c7af70e065844c356">InitilizeComponentQuick</link>(<link linkend="_interface_i_nft_type">INftType</link>&#32;character,&#32;<emphasis role="keywordtype">int</emphasis>&#32;animEncode)
<anchor xml:id="__character_animation_manager_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(character.<link linkend="_interface_i_nft_type_1a38e8bce326427c4a3d7e35f69e7e7a5c">GetNftType</link>()&#32;==&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.AMMABlobs)
<anchor xml:id="__character_animation_manager_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_character_animation_manager_1a2f29ca8a16c04ce2e5da159e4d9127c0">InitializeComponent</link>(<emphasis role="keyword">new</emphasis>&#32;List&lt;CharacterAnimationManager.TextureFunctionInput&gt;()&#32;{&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1ac46bf878ba0436c64bd96df5ccc14269">GetTextureFunctionInput</link>(<link linkend="_class_a_m_m_a_blobert">AMMABlobert</link>.<link linkend="_class_a_m_m_a_blobert_1a54ed22adbc91fed044712d858cd9c32a">GetFighterIdFromCustomValue</link>(character.GetInstance&lt;ArcadeBlobert&gt;().custom_id),&#32;(<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1a5d8419d845d6afd9e99849ddeef7c454">AMMAAnimationState</link>)animEncode)&#32;},&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.AMMABlobs);
<anchor xml:id="__character_animation_manager_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_character_animation_manager_1a2f29ca8a16c04ce2e5da159e4d9127c0">InitializeComponent</link>(BlobertAnimationController.GetTextureFunctionInput(character.<link linkend="_interface_i_nft_type_1abe085c5479f08c0ab55bad8027cda365">GetTokenTrait</link>(),&#32;AnimationDataTraitBlobert.DecodeAnimationData(animEncode)),&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.ArcadeBlobs);
<anchor xml:id="__character_animation_manager_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00113"/>00113 
<anchor xml:id="__character_animation_manager_8cs_source_1l00114"/><link linkend="_class_character_animation_manager_1a2f29ca8a16c04ce2e5da159e4d9127c0">00114</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_character_animation_manager_1a2f29ca8a16c04ce2e5da159e4d9127c0">InitializeComponent</link>(List&lt;TextureFunctionInput&gt;&#32;textureInputs,&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>&#32;type)
<anchor xml:id="__character_animation_manager_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IdleTextureFunctionInput&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;TextureFunctionInput&gt;(textureInputs);
<anchor xml:id="__character_animation_manager_8cs_source_1l00117"/>00117 
<anchor xml:id="__character_animation_manager_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_isPlayingOver&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SpawnObjects(type);
<anchor xml:id="__character_animation_manager_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00121"/>00121 
<anchor xml:id="__character_animation_manager_8cs_source_1l00122"/><link linkend="_class_character_animation_manager_1ab4275153b4129db739664eb5d84711f7">00122</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_character_animation_manager_1ab4275153b4129db739664eb5d84711f7">InitializeComponent</link>(List&lt;List&lt;Sprite&gt;&gt;&#32;spritesList,&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>&#32;type)
<anchor xml:id="__character_animation_manager_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;the&#32;constructor&#32;that&#32;accepts&#32;a&#32;list&#32;of&#32;sprites</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;textureInputs&#32;=&#32;spritesList.Select(spriteList&#32;=&gt;
<anchor xml:id="__character_animation_manager_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_character_animation_manager_1_1_texture_function_input">TextureFunctionInput</link>(spriteList,&#32;spriteList.Count)&#32;<emphasis role="comment">//&#32;Create&#32;with&#32;list&#32;of&#32;sprites&#32;and&#32;count</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;).ToList();
<anchor xml:id="__character_animation_manager_8cs_source_1l00128"/>00128 
<anchor xml:id="__character_animation_manager_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_character_animation_manager_1a2f29ca8a16c04ce2e5da159e4d9127c0">InitializeComponent</link>(textureInputs,&#32;type);
<anchor xml:id="__character_animation_manager_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00131"/>00131 
<anchor xml:id="__character_animation_manager_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SpawnObjects(<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>&#32;types)
<anchor xml:id="__character_animation_manager_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(Transform&#32;child&#32;<emphasis role="keywordflow">in</emphasis>&#32;TraitParent)
<anchor xml:id="__character_animation_manager_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Destroy(child.gameObject);
<anchor xml:id="__character_animation_manager_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ImageObjects.Clear();
<anchor xml:id="__character_animation_manager_8cs_source_1l00139"/>00139 
<anchor xml:id="__character_animation_manager_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(types)
<anchor xml:id="__character_animation_manager_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.ArcadeBlobs:
<anchor xml:id="__character_animation_manager_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(var&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;BlobertAnimationController.AmountOfLayers;&#32;i++)
<anchor xml:id="__character_animation_manager_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;newObject&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GameObject(BlobertAnimationController.NameOfLayers[i]);
<anchor xml:id="__character_animation_manager_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newObject.transform.SetParent(TraitParent.transform,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__character_animation_manager_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(TraitParent.transform.childCount&#32;&gt;&#32;1)
<anchor xml:id="__character_animation_manager_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newObject.transform.SetSiblingIndex(TraitParent.transform.childCount&#32;-&#32;1);
<anchor xml:id="__character_animation_manager_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00151"/>00151 
<anchor xml:id="__character_animation_manager_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rectTransform&#32;=&#32;newObject.AddComponent&lt;RectTransform&gt;();
<anchor xml:id="__character_animation_manager_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.localScale&#32;=&#32;Vector3.one;
<anchor xml:id="__character_animation_manager_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.anchorMin&#32;=&#32;Vector2.zero;
<anchor xml:id="__character_animation_manager_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.anchorMax&#32;=&#32;Vector2.one;
<anchor xml:id="__character_animation_manager_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.offsetMin&#32;=&#32;Vector2.zero;
<anchor xml:id="__character_animation_manager_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.offsetMax&#32;=&#32;Vector2.zero;
<anchor xml:id="__character_animation_manager_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.localPosition&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(0,&#32;0,&#32;0);
<anchor xml:id="__character_animation_manager_8cs_source_1l00159"/>00159 
<anchor xml:id="__character_animation_manager_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ImageObjects.Add(newObject);
<anchor xml:id="__character_animation_manager_8cs_source_1l00161"/>00161 
<anchor xml:id="__character_animation_manager_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;imageComponent&#32;=&#32;newObject.AddComponent&lt;Image&gt;();
<anchor xml:id="__character_animation_manager_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;imageComponent.sprite&#32;=&#32;IdleTextureFunctionInput[i].Sprites[0];
<anchor xml:id="__character_animation_manager_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;imageComponent.raycastPadding&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector4(50,&#32;50,&#32;50,&#32;50);
<anchor xml:id="__character_animation_manager_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00167"/>00167 
<anchor xml:id="__character_animation_manager_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.WalletBlobs:
<anchor xml:id="__character_animation_manager_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Implement&#32;functionality&#32;if&#32;needed&#32;for&#32;WalletBlobs</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00171"/>00171 
<anchor xml:id="__character_animation_manager_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.AMMABlobs:
<anchor xml:id="__character_animation_manager_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(var&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1a17604b13c865bc945f77f09b0d9ab426">AmountOfLayers</link>;&#32;i++)
<anchor xml:id="__character_animation_manager_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;newObject&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GameObject(<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1a818a18d1a80454f574810dd1700d7636">NameOfLayers</link>[i]);
<anchor xml:id="__character_animation_manager_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newObject.transform.SetParent(TraitParent.transform);
<anchor xml:id="__character_animation_manager_8cs_source_1l00177"/>00177 
<anchor xml:id="__character_animation_manager_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rectTransform&#32;=&#32;newObject.AddComponent&lt;RectTransform&gt;();
<anchor xml:id="__character_animation_manager_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.localScale&#32;=&#32;Vector3.one;
<anchor xml:id="__character_animation_manager_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.anchorMin&#32;=&#32;Vector2.zero;
<anchor xml:id="__character_animation_manager_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.anchorMax&#32;=&#32;Vector2.one;
<anchor xml:id="__character_animation_manager_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.offsetMin&#32;=&#32;Vector2.zero;
<anchor xml:id="__character_animation_manager_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.offsetMax&#32;=&#32;Vector2.zero;
<anchor xml:id="__character_animation_manager_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.localPosition&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(0,&#32;0,&#32;0);
<anchor xml:id="__character_animation_manager_8cs_source_1l00185"/>00185 
<anchor xml:id="__character_animation_manager_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ImageObjects.Add(newObject);
<anchor xml:id="__character_animation_manager_8cs_source_1l00187"/>00187 
<anchor xml:id="__character_animation_manager_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;imageComponent&#32;=&#32;newObject.AddComponent&lt;Image&gt;();
<anchor xml:id="__character_animation_manager_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;imageComponent.sprite&#32;=&#32;IdleTextureFunctionInput[i].Sprites[0];
<anchor xml:id="__character_animation_manager_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;imageComponent.raycastPadding&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector4(50,&#32;50,&#32;50,&#32;50);
<anchor xml:id="__character_animation_manager_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00193"/>00193 
<anchor xml:id="__character_animation_manager_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__character_animation_manager_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentOutOfRangeException(nameof(types),&#32;types,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__character_animation_manager_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00198"/>00198 
<anchor xml:id="__character_animation_manager_8cs_source_1l00199"/>00199 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion&#32;Initializing&#32;Component</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00200"/>00200 
<anchor xml:id="__character_animation_manager_8cs_source_1l00201"/>00201 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Utils&#32;and&#32;Settings</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00202"/>00202 
<anchor xml:id="__character_animation_manager_8cs_source_1l00203"/><link linkend="_class_character_animation_manager_1ae80d1ab90cc520e02b8d14243aab0c3d">00203</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_character_animation_manager_1ae80d1ab90cc520e02b8d14243aab0c3d">SetSpeedAnimation</link>(<emphasis role="keywordtype">float</emphasis>&#32;speedMultiplier)&#32;=&gt;&#32;Speed&#32;=&#32;speedMultiplier;
<anchor xml:id="__character_animation_manager_8cs_source_1l00204"/>00204 
<anchor xml:id="__character_animation_manager_8cs_source_1l00205"/><link linkend="_class_character_animation_manager_1a1c35ac72686180529c6e0c2a2eec9332">00205</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;TextureFunctionInput&gt;&#32;<link linkend="_class_character_animation_manager_1a1c35ac72686180529c6e0c2a2eec9332">GetTextureDataCurrentlyPlaying</link>()&#32;=&gt;&#32;_isPlayingOver&#32;?&#32;IdleTextureFunctionInput&#32;:&#32;PlayOverTextureFunctionInput;
<anchor xml:id="__character_animation_manager_8cs_source_1l00206"/>00206 
<anchor xml:id="__character_animation_manager_8cs_source_1l00207"/><link linkend="_class_character_animation_manager_1a0287f2fa1b12da154b7452ebf37d47a0">00207</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_character_animation_manager_1a0287f2fa1b12da154b7452ebf37d47a0">PauseAnimation</link>(<emphasis role="keywordtype">bool</emphasis>&#32;pause)&#32;=&gt;&#32;_paused&#32;=&#32;pause;
<anchor xml:id="__character_animation_manager_8cs_source_1l00208"/>00208 
<anchor xml:id="__character_animation_manager_8cs_source_1l00209"/>00209 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion&#32;Utils&#32;and&#32;Settings</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00210"/>00210 
<anchor xml:id="__character_animation_manager_8cs_source_1l00211"/><link linkend="_class_character_animation_manager_1af40a8cfd9a41c11e9934e2b0bc9d5d9a">00211</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_character_animation_manager_1af40a8cfd9a41c11e9934e2b0bc9d5d9a">DrawAnimationOverlay</link>(List&lt;List&lt;Sprite&gt;&gt;&#32;sprites,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;drawOver,&#32;List&lt;TweenCallbackSystem&gt;&#32;callback&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;deleteQueue&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__character_animation_manager_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(deleteQueue)
<anchor xml:id="__character_animation_manager_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_character_animation_manager_1a428ea85e49fa33e12b1fd892b535abfa">QueueOfPlayOverAnims</link>.Clear();
<anchor xml:id="__character_animation_manager_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;the&#32;sprites&#32;constructor&#32;for&#32;TextureFunctionInput,&#32;passing&#32;each&#32;sprite&#32;list</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;textureInputs&#32;=&#32;sprites.Select(spriteList&#32;=&gt;
<anchor xml:id="__character_animation_manager_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_character_animation_manager_1_1_texture_function_input">TextureFunctionInput</link>(spriteList,&#32;spriteList.Count)&#32;<emphasis role="comment">//&#32;Create&#32;with&#32;list&#32;of&#32;sprites&#32;and&#32;count</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;).ToList();
<anchor xml:id="__character_animation_manager_8cs_source_1l00221"/>00221 
<anchor xml:id="__character_animation_manager_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_character_animation_manager_1af40a8cfd9a41c11e9934e2b0bc9d5d9a">DrawAnimationOverlay</link>(textureInputs,&#32;drawOver,&#32;callback);
<anchor xml:id="__character_animation_manager_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00224"/>00224 
<anchor xml:id="__character_animation_manager_8cs_source_1l00225"/><link linkend="_class_character_animation_manager_1a1756e6b34d3d64cf43cb31dfb4b0c26c">00225</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_character_animation_manager_1a1756e6b34d3d64cf43cb31dfb4b0c26c">DrawAnimationOverlay</link>(List&lt;TextureFunctionInput&gt;&#32;textureInputs,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;drawOver,
<anchor xml:id="__character_animation_manager_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;TweenCallbackSystem&gt;&#32;callback&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;deleteQueue&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__character_animation_manager_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(deleteQueue)
<anchor xml:id="__character_animation_manager_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_character_animation_manager_1a428ea85e49fa33e12b1fd892b535abfa">QueueOfPlayOverAnims</link>.Clear();
<anchor xml:id="__character_animation_manager_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_character_animation_manager_1a428ea85e49fa33e12b1fd892b535abfa">QueueOfPlayOverAnims</link>.Enqueue((textureInputs,&#32;drawOver,&#32;callback));
<anchor xml:id="__character_animation_manager_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00234"/>00234 
<anchor xml:id="__character_animation_manager_8cs_source_1l00235"/><link linkend="_class_character_animation_manager_1af9dd90ae74e9b88e6086942ac5ab6e92">00235</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_character_animation_manager_1af9dd90ae74e9b88e6086942ac5ab6e92">DrawAndFinish</link>(List&lt;List&lt;Sprite&gt;&gt;&#32;sprites,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;drawOver,&#32;List&lt;TweenCallbackSystem&gt;&#32;callback&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__character_animation_manager_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;the&#32;sprites&#32;constructor&#32;for&#32;TextureFunctionInput,&#32;passing&#32;each&#32;sprite&#32;list</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;textureInputs&#32;=&#32;sprites.Select(spriteList&#32;=&gt;
<anchor xml:id="__character_animation_manager_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_character_animation_manager_1_1_texture_function_input">TextureFunctionInput</link>(spriteList,&#32;spriteList.Count)&#32;<emphasis role="comment">//&#32;Create&#32;with&#32;list&#32;of&#32;sprites&#32;and&#32;count</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;).ToList();
<anchor xml:id="__character_animation_manager_8cs_source_1l00241"/>00241 
<anchor xml:id="__character_animation_manager_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_character_animation_manager_1af40a8cfd9a41c11e9934e2b0bc9d5d9a">DrawAnimationOverlay</link>(textureInputs,&#32;drawOver,&#32;callback);
<anchor xml:id="__character_animation_manager_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IdleTextureFunctionInput.Clear();
<anchor xml:id="__character_animation_manager_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00245"/>00245 
<anchor xml:id="__character_animation_manager_8cs_source_1l00246"/><link linkend="_class_character_animation_manager_1afbb8232f61328669e50d41da02b536c9">00246</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_character_animation_manager_1afbb8232f61328669e50d41da02b536c9">DrawAndFinish</link>(List&lt;TextureFunctionInput&gt;&#32;textureInputs,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;drawOver,&#32;List&lt;TweenCallbackSystem&gt;&#32;callback&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;deleteQueue&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__character_animation_manager_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(deleteQueue)
<anchor xml:id="__character_animation_manager_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_character_animation_manager_1a428ea85e49fa33e12b1fd892b535abfa">QueueOfPlayOverAnims</link>.Clear();
<anchor xml:id="__character_animation_manager_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00252"/>00252 
<anchor xml:id="__character_animation_manager_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_character_animation_manager_1a428ea85e49fa33e12b1fd892b535abfa">QueueOfPlayOverAnims</link>.Enqueue((textureInputs,&#32;drawOver,&#32;callback));
<anchor xml:id="__character_animation_manager_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IdleTextureFunctionInput.Clear();
<anchor xml:id="__character_animation_manager_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00256"/>00256 
<anchor xml:id="__character_animation_manager_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_timeSinceLastFrame&#32;=&#32;0f;
<anchor xml:id="__character_animation_manager_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_currentFrame&#32;=&#32;0;
<anchor xml:id="__character_animation_manager_8cs_source_1l00259"/>00259 
<anchor xml:id="__character_animation_manager_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;currentFrameDrawover&#32;=&#32;0;
<anchor xml:id="__character_animation_manager_8cs_source_1l00261"/>00261 
<anchor xml:id="__character_animation_manager_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()
<anchor xml:id="__character_animation_manager_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_paused)
<anchor xml:id="__character_animation_manager_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00266"/>00266 
<anchor xml:id="__character_animation_manager_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;there&apos;s&#32;an&#32;animation&#32;in&#32;the&#32;queue</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_character_animation_manager_1a428ea85e49fa33e12b1fd892b535abfa">QueueOfPlayOverAnims</link>.Count&#32;&gt;&#32;0)
<anchor xml:id="__character_animation_manager_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;(textureInputs,&#32;drawOver,&#32;callback)&#32;=&#32;<link linkend="_class_character_animation_manager_1a428ea85e49fa33e12b1fd892b535abfa">QueueOfPlayOverAnims</link>.Peek();
<anchor xml:id="__character_animation_manager_8cs_source_1l00271"/>00271 
<anchor xml:id="__character_animation_manager_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(textureInputs&#32;==&#32;null)</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Debug.Log(&quot;texture&#32;null&quot;);</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00274"/>00274 
<anchor xml:id="__character_animation_manager_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(drawOver&#32;==&#32;null)</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Debug.Log(&quot;draw&#32;null&quot;);</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00277"/>00277 
<anchor xml:id="__character_animation_manager_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(callback&#32;==&#32;null)</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Debug.Log(&quot;callback&#32;null&quot;);</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00280"/>00280 
<anchor xml:id="__character_animation_manager_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drawOver&#32;&amp;&amp;&#32;textureInputs.Count&#32;==&#32;1&#32;&amp;&amp;&#32;textureInputs[0].Sprites.Count&#32;&gt;&#32;0)
<anchor xml:id="__character_animation_manager_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Animate&#32;the&#32;overlay&#32;image&#32;with&#32;the&#32;sprites&#32;in&#32;textureInputs[0]</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_timeSinceLastFrame&#32;+=&#32;Time.deltaTime;
<anchor xml:id="__character_animation_manager_8cs_source_1l00285"/>00285 
<anchor xml:id="__character_animation_manager_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_timeSinceLastFrame&#32;&gt;=&#32;Speed)
<anchor xml:id="__character_animation_manager_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;the&#32;overlay&#32;image&#32;with&#32;the&#32;current&#32;frame</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EffectOverlayImage.sprite&#32;=&#32;textureInputs[0].Sprites[currentFrameDrawover&#32;%&#32;textureInputs[0].Sprites.Count];
<anchor xml:id="__character_animation_manager_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EffectOverlayImage.enabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00291"/>00291 
<anchor xml:id="__character_animation_manager_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;to&#32;the&#32;next&#32;frame</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentFrameDrawover++;
<anchor xml:id="__character_animation_manager_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CheckForCallback(currentFrameDrawover,&#32;callback);
<anchor xml:id="__character_animation_manager_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_timeSinceLastFrame&#32;=&#32;0f;
<anchor xml:id="__character_animation_manager_8cs_source_1l00296"/>00296 
<anchor xml:id="__character_animation_manager_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;we&#32;reached&#32;the&#32;end&#32;of&#32;the&#32;animation</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentFrameDrawover&#32;&gt;=&#32;textureInputs[0].Sprites.Count)
<anchor xml:id="__character_animation_manager_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Reset&#32;overlay&#32;and&#32;dequeue&#32;animation&#32;after&#32;it&#32;finishes</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_character_animation_manager_1a428ea85e49fa33e12b1fd892b535abfa">QueueOfPlayOverAnims</link>.Dequeue();
<anchor xml:id="__character_animation_manager_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentFrameDrawover&#32;=&#32;0;
<anchor xml:id="__character_animation_manager_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EffectOverlayImage.enabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;&#32;<emphasis role="comment">//&#32;Hide&#32;overlay&#32;after&#32;animation</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;&#32;<emphasis role="comment">//&#32;Skip&#32;idle&#32;animation&#32;while&#32;drawing&#32;overlay</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!drawOver)
<anchor xml:id="__character_animation_manager_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Stop&#32;idle&#32;animation&#32;and&#32;play&#32;queued&#32;animation&#32;on&#32;main&#32;images</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_timeSinceLastFrame&#32;+=&#32;Time.deltaTime;
<anchor xml:id="__character_animation_manager_8cs_source_1l00312"/>00312 
<anchor xml:id="__character_animation_manager_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_timeSinceLastFrame&#32;&gt;=&#32;Speed)
<anchor xml:id="__character_animation_manager_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;textureInputs.Count;&#32;i++)
<anchor xml:id="__character_animation_manager_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;imageComponent&#32;=&#32;ImageObjects[i].GetComponent&lt;Image&gt;();
<anchor xml:id="__character_animation_manager_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;imageComponent.sprite&#32;=&#32;textureInputs[i].Sprites[currentFrameDrawover&#32;%&#32;textureInputs[i].Sprites.Count];
<anchor xml:id="__character_animation_manager_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;imageComponent.SetAllDirty();
<anchor xml:id="__character_animation_manager_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00321"/>00321 
<anchor xml:id="__character_animation_manager_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentFrameDrawover++;
<anchor xml:id="__character_animation_manager_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CheckForCallback(currentFrameDrawover,&#32;callback);
<anchor xml:id="__character_animation_manager_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_timeSinceLastFrame&#32;=&#32;0f;
<anchor xml:id="__character_animation_manager_8cs_source_1l00325"/>00325 
<anchor xml:id="__character_animation_manager_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;main&#32;animation&#32;is&#32;over</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentFrameDrawover&#32;&gt;=&#32;textureInputs[0].Sprites.Count)
<anchor xml:id="__character_animation_manager_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_character_animation_manager_1a428ea85e49fa33e12b1fd892b535abfa">QueueOfPlayOverAnims</link>.Dequeue();&#32;<emphasis role="comment">//&#32;Remove&#32;current&#32;animation</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentFrameDrawover&#32;=&#32;0;&#32;<emphasis role="comment">//&#32;Reset&#32;to&#32;start&#32;idle&#32;animation</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EffectOverlayImage.enabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;&#32;<emphasis role="comment">//&#32;Hide&#32;overlay&#32;if&#32;it&#32;was&#32;active</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;&#32;<emphasis role="comment">//&#32;Skip&#32;idle&#32;animation&#32;while&#32;playing&#32;queue&#32;animation</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EffectOverlayImage.enabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;&#32;<emphasis role="comment">//&#32;Ensure&#32;overlay&#32;is&#32;hidden&#32;if&#32;no&#32;queue&#32;item</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00341"/>00341 
<anchor xml:id="__character_animation_manager_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Regular&#32;idle&#32;animation&#32;if&#32;no&#32;overlay/queue&#32;item</emphasis>
<anchor xml:id="__character_animation_manager_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(IdleTextureFunctionInput.Count&#32;==&#32;0)
<anchor xml:id="__character_animation_manager_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00345"/>00345 
<anchor xml:id="__character_animation_manager_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_timeSinceLastFrame&#32;+=&#32;Time.deltaTime;
<anchor xml:id="__character_animation_manager_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_timeSinceLastFrame&#32;&gt;=&#32;Speed)
<anchor xml:id="__character_animation_manager_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;IdleTextureFunctionInput.Count;&#32;i++)
<anchor xml:id="__character_animation_manager_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;textureInput&#32;=&#32;IdleTextureFunctionInput[i];
<anchor xml:id="__character_animation_manager_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(textureInput.Sprites.Count&#32;==&#32;0)
<anchor xml:id="__character_animation_manager_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00354"/>00354 
<anchor xml:id="__character_animation_manager_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;imageComponent&#32;=&#32;ImageObjects[i].GetComponent&lt;Image&gt;();
<anchor xml:id="__character_animation_manager_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;imageComponent.sprite&#32;=&#32;textureInput.Sprites[_currentFrame&#32;%&#32;textureInput.Sprites.Count];
<anchor xml:id="__character_animation_manager_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;imageComponent.SetAllDirty();
<anchor xml:id="__character_animation_manager_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_currentFrame++;
<anchor xml:id="__character_animation_manager_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_timeSinceLastFrame&#32;=&#32;0f;
<anchor xml:id="__character_animation_manager_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00362"/>00362 
<anchor xml:id="__character_animation_manager_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;CheckForCallback(<emphasis role="keywordtype">int</emphasis>&#32;frameNum,&#32;List&lt;TweenCallbackSystem&gt;&#32;callbackSystem)
<anchor xml:id="__character_animation_manager_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__character_animation_manager_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(callbackSystem&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__character_animation_manager_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00367"/>00367 
<anchor xml:id="__character_animation_manager_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(callbackSystem.Count&#32;==&#32;0)
<anchor xml:id="__character_animation_manager_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00370"/>00370 
<anchor xml:id="__character_animation_manager_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frameNum&#32;!=&#32;callbackSystem[0].frameNum)
<anchor xml:id="__character_animation_manager_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__character_animation_manager_8cs_source_1l00373"/>00373 
<anchor xml:id="__character_animation_manager_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;callbackSystem[0].functionCallback();
<anchor xml:id="__character_animation_manager_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;callbackSystem.RemoveAt(0);
<anchor xml:id="__character_animation_manager_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;}
<anchor xml:id="__character_animation_manager_8cs_source_1l00378"/>00378 }
</programlisting></section>
