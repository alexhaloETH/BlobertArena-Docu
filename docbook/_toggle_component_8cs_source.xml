<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__toggle_component_8cs_source" xml:lang="en-US">
<title>ToggleComponent.cs</title>
<indexterm><primary>UI/Components/Button Types/ToggleComponent.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__toggle_component_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_blobert_arena_1_1_theme_manager">BlobertArena.ThemeManager</link>;
<anchor xml:id="__toggle_component_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__toggle_component_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.Events;
<anchor xml:id="__toggle_component_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.UI;
<anchor xml:id="__toggle_component_8cs_source_1l00005"/>00005 
<anchor xml:id="__toggle_component_8cs_source_1l00006"/><link linkend="_class_toggle_component">00006</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_toggle_component">ToggleComponent</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__toggle_component_8cs_source_1l00007"/>00007 {
<anchor xml:id="__toggle_component_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isOn&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__toggle_component_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;Image&#32;targetImage;
<anchor xml:id="__toggle_component_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_blobert_arena_1_1_theme_manager_1_1_toggle_skin_component">ToggleSkinComponent</link>&#32;_toggleSkinComponent;
<anchor xml:id="__toggle_component_8cs_source_1l00011"/>00011 
<anchor xml:id="__toggle_component_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;[Space(30)]
<anchor xml:id="__toggle_component_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Default&#32;sprite&quot;</emphasis>)]
<anchor xml:id="__toggle_component_8cs_source_1l00014"/><link linkend="_class_toggle_component_1a8afc581c9a60bb6f2a48dbb1299eb956">00014</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Sprite&#32;<link linkend="_class_toggle_component_1a8afc581c9a60bb6f2a48dbb1299eb956">defaultSprite</link>;
<anchor xml:id="__toggle_component_8cs_source_1l00015"/>00015 
<anchor xml:id="__toggle_component_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;[SerializeField,&#32;Range(0.0f,&#32;1.0f)]&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;m_DefaultSpriteAlpha&#32;=&#32;1.0f;
<anchor xml:id="__toggle_component_8cs_source_1l00017"/>00017 
<anchor xml:id="__toggle_component_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Default&#32;sprite&quot;</emphasis>)]
<anchor xml:id="__toggle_component_8cs_source_1l00019"/><link linkend="_class_toggle_component_1ad6cb330d5868032b97f4d368b9661198">00019</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Sprite&#32;<link linkend="_class_toggle_component_1ad6cb330d5868032b97f4d368b9661198">clickedSprite</link>;
<anchor xml:id="__toggle_component_8cs_source_1l00020"/>00020 
<anchor xml:id="__toggle_component_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;[SerializeField,&#32;Range(0.0f,&#32;1.0f)]&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;m_ClickedSpriteAlpha&#32;=&#32;1.0f;
<anchor xml:id="__toggle_component_8cs_source_1l00022"/>00022 
<anchor xml:id="__toggle_component_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;[Space(30)]
<anchor xml:id="__toggle_component_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;UnityEvent&#32;onToggleOn;
<anchor xml:id="__toggle_component_8cs_source_1l00025"/>00025 
<anchor xml:id="__toggle_component_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;UnityEvent&#32;onToggleOff;
<anchor xml:id="__toggle_component_8cs_source_1l00027"/>00027 
<anchor xml:id="__toggle_component_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Color&#32;m_DefaultColor;
<anchor xml:id="__toggle_component_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Color&#32;m_ClickedColor;
<anchor xml:id="__toggle_component_8cs_source_1l00030"/>00030 
<anchor xml:id="__toggle_component_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()
<anchor xml:id="__toggle_component_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;{
<anchor xml:id="__toggle_component_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_DefaultColor&#32;=&#32;<emphasis role="keyword">new</emphasis>(1.0f,&#32;1.0f,&#32;1.0f,&#32;m_DefaultSpriteAlpha);
<anchor xml:id="__toggle_component_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_ClickedColor&#32;=&#32;<emphasis role="keyword">new</emphasis>(1.0f,&#32;1.0f,&#32;1.0f,&#32;m_ClickedSpriteAlpha);
<anchor xml:id="__toggle_component_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;}
<anchor xml:id="__toggle_component_8cs_source_1l00036"/>00036 
<anchor xml:id="__toggle_component_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
<anchor xml:id="__toggle_component_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;{
<anchor xml:id="__toggle_component_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_toggleSkinComponent&#32;=&#32;gameObject.GetComponent&lt;<link linkend="_class_blobert_arena_1_1_theme_manager_1_1_toggle_skin_component">ToggleSkinComponent</link>&gt;();
<anchor xml:id="__toggle_component_8cs_source_1l00040"/>00040 
<anchor xml:id="__toggle_component_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(targetImage&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__toggle_component_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetImage&#32;=&#32;GetComponent&lt;Image&gt;();
<anchor xml:id="__toggle_component_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdateToggleState();
<anchor xml:id="__toggle_component_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;}
<anchor xml:id="__toggle_component_8cs_source_1l00045"/>00045 
<anchor xml:id="__toggle_component_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable()
<anchor xml:id="__toggle_component_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;{
<anchor xml:id="__toggle_component_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_toggle_component_1a1e1bdcaa860ca6acc300ca60bcc47a82">OnSkinChange</link>();
<anchor xml:id="__toggle_component_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;}
<anchor xml:id="__toggle_component_8cs_source_1l00050"/>00050 
<anchor xml:id="__toggle_component_8cs_source_1l00051"/><link linkend="_class_toggle_component_1a8f113949d342477339bdd27336b4bbd8">00051</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_toggle_component_1a8f113949d342477339bdd27336b4bbd8">OnPointerClick</link>()
<anchor xml:id="__toggle_component_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;{
<anchor xml:id="__toggle_component_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isOn&#32;=&#32;!isOn;
<anchor xml:id="__toggle_component_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdateToggleState();
<anchor xml:id="__toggle_component_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;}
<anchor xml:id="__toggle_component_8cs_source_1l00056"/>00056 
<anchor xml:id="__toggle_component_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateToggleState()
<anchor xml:id="__toggle_component_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;{
<anchor xml:id="__toggle_component_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isOn)
<anchor xml:id="__toggle_component_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__toggle_component_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetImage.sprite&#32;=&#32;<link linkend="_class_toggle_component_1ad6cb330d5868032b97f4d368b9661198">clickedSprite</link>;
<anchor xml:id="__toggle_component_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetImage.color&#32;=&#32;m_ClickedColor;
<anchor xml:id="__toggle_component_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onToggleOn?.Invoke();
<anchor xml:id="__toggle_component_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__toggle_component_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__toggle_component_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__toggle_component_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetImage.sprite&#32;=&#32;<link linkend="_class_toggle_component_1a8afc581c9a60bb6f2a48dbb1299eb956">defaultSprite</link>;
<anchor xml:id="__toggle_component_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetImage.color&#32;=&#32;m_DefaultColor;
<anchor xml:id="__toggle_component_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onToggleOff?.Invoke();
<anchor xml:id="__toggle_component_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__toggle_component_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;}
<anchor xml:id="__toggle_component_8cs_source_1l00072"/>00072 
<anchor xml:id="__toggle_component_8cs_source_1l00073"/><link linkend="_class_toggle_component_1a3229fb93f121b7f8485f2827b9263403">00073</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_toggle_component_1a3229fb93f121b7f8485f2827b9263403">SetToggleState</link>(<emphasis role="keywordtype">bool</emphasis>&#32;state)
<anchor xml:id="__toggle_component_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;{
<anchor xml:id="__toggle_component_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isOn&#32;==&#32;state)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__toggle_component_8cs_source_1l00076"/>00076 
<anchor xml:id="__toggle_component_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isOn&#32;=&#32;state;
<anchor xml:id="__toggle_component_8cs_source_1l00078"/>00078 
<anchor xml:id="__toggle_component_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetImage.sprite&#32;=&#32;isOn&#32;?&#32;<link linkend="_class_toggle_component_1ad6cb330d5868032b97f4d368b9661198">clickedSprite</link>&#32;:&#32;<link linkend="_class_toggle_component_1a8afc581c9a60bb6f2a48dbb1299eb956">defaultSprite</link>;
<anchor xml:id="__toggle_component_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetImage.color&#32;=&#32;isOn&#32;?&#32;m_ClickedColor&#32;:&#32;m_DefaultColor;
<anchor xml:id="__toggle_component_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;}
<anchor xml:id="__toggle_component_8cs_source_1l00082"/>00082 
<anchor xml:id="__toggle_component_8cs_source_1l00083"/><link linkend="_class_toggle_component_1a1e1bdcaa860ca6acc300ca60bcc47a82">00083</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_toggle_component_1a1e1bdcaa860ca6acc300ca60bcc47a82">OnSkinChange</link>()
<anchor xml:id="__toggle_component_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;{
<anchor xml:id="__toggle_component_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_toggleSkinComponent)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__toggle_component_8cs_source_1l00086"/>00086 
<anchor xml:id="__toggle_component_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetImage.sprite&#32;=&#32;isOn&#32;?&#32;<link linkend="_class_toggle_component_1ad6cb330d5868032b97f4d368b9661198">clickedSprite</link>&#32;:&#32;<link linkend="_class_toggle_component_1a8afc581c9a60bb6f2a48dbb1299eb956">defaultSprite</link>;
<anchor xml:id="__toggle_component_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;}
<anchor xml:id="__toggle_component_8cs_source_1l00089"/>00089 }
</programlisting></section>
