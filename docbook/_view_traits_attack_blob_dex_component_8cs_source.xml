<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__view_traits_attack_blob_dex_component_8cs_source" xml:lang="en-US">
<title>ViewTraitsAttackBlobDexComponent.cs</title>
<indexterm><primary>UI/Components/BlobertData/BlobDexComponents/ViewTraitsAttackBlobDexComponent.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_blobert_arena_1_1_animations">BlobertArena.Animations</link>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>Dojo.Starknet;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_logic_layer">LogicLayer</link>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>System.Collections;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_blobert_arena_1_1_theme_manager">BlobertArena.ThemeManager</link>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_logic_layer_1_1_models">LogicLayer.Models</link>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00008"/>00008 <emphasis role="keyword">using&#32;</emphasis>TMPro;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00009"/>00009 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00010"/>00010 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.UI;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00011"/>00011 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00012"/>00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_blobert_arena_1_1_blob_dex">BlobertArena.BlobDex</link>
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00013"/>00013 {
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00014"/><link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component">00014</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component">ViewTraitsAttackBlobDexComponent</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_blob_data_manager_blob_dex_component">BlobDataManagerBlobDexComponent</link>&#32;_blobDataManagerBlobDexComponent;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00017"/>00017 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Space(20)]
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_blobert_arena_1_1_animations_1_1_character_animation_manager">CharacterAnimationManager</link>&#32;_characterTraitVisualizerComponent;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00020"/>00020 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_click_on_specific_trait_component">ClickOnSpecificTraitComponent</link>&#32;_clickOnSpecificTraitComponent;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;TMP_Text&#32;_nameOfTraitText;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00023"/>00023 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Space(20)]
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_base_button">BaseButton</link>[]&#32;_attacksBaseButton;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00026"/>00026 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;GameObject&#32;_rightArrow;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;GameObject&#32;_leftArrow;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;TMP_Text&#32;_equippedTextAction;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00030"/>00030 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Space(20)]
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;GameObject&#32;_graphSystemObject;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00033"/>00033 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_custom_polygon_graph_u_i">CustomPolygonGraphUI</link>&#32;_graphMesh;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00035"/>00035 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00036"/><link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1ac8d7bf6fde4125128e9fa15b4bb114d7">00036</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1ac8d7bf6fde4125128e9fa15b4bb114d7">_clickedOnTraitIndex</link>&#32;=&#32;-1;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;Attack&gt;&#32;_attacks;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Dictionary&lt;Attack,&#32;BaseButton&gt;&#32;_attackToButtonMap&#32;=&#32;<emphasis role="keyword">new</emphasis>();
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_interface_i_nft_type">INftType</link>&#32;_blobert;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_pageIndex&#32;=&#32;0;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00041"/>00041 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable()
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_equippedTextAction.gameObject.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_clickOnSpecificTraitComponent.ImageClicked&#32;+=&#32;EventCallTranslator;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LocalDataModel.OnBlobertAttackChanged&#32;+=&#32;HandleBlobertAttackChanged;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00048"/>00048 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDisable()
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LocalDataModel.OnBlobertAttackChanged&#32;-=&#32;HandleBlobertAttackChanged;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_clickOnSpecificTraitComponent.ImageClicked&#32;-=&#32;EventCallTranslator;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00054"/>00054 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00055"/><link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1af9cd4cd9e772a1d4bc8ef194e189527d">00055</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1af9cd4cd9e772a1d4bc8ef194e189527d">InitializeComponent</link>(<link linkend="_interface_i_nft_type">INftType</link>&#32;blobData,&#32;<emphasis role="keywordtype">string</emphasis>&#32;traitString)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;image&#32;<emphasis role="keywordflow">in</emphasis>&#32;_characterTraitVisualizerComponent.<link linkend="_class_blobert_arena_1_1_animations_1_1_character_animation_manager_1ac5a825695d879b9acdf8c29ef077a610">ImageObjects</link>)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image.GetComponent&lt;Image&gt;().color&#32;=&#32;Color.white;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00061"/>00061 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_characterTraitVisualizerComponent.gameObject.SetActive(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_graphSystemObject.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00064"/>00064 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_blobert&#32;=&#32;blobData;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00066"/>00066 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_blobert.<link linkend="_interface_i_nft_type_1a38e8bce326427c4a3d7e35f69e7e7a5c">GetNftType</link>()&#32;==&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.AMMABlobs)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_characterTraitVisualizerComponent.<link linkend="_class_blobert_arena_1_1_animations_1_1_character_animation_manager_1aa670a425fb51e4c9b28f0fffe6cf4e5a">InitializeComponent</link>(<emphasis role="keyword">new</emphasis>&#32;List&lt;CharacterAnimationManager.TextureFunctionInput&gt;()&#32;{&#32;<link linkend="_class_blobert_arena_1_1_animations_1_1_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_blobert_arena_1_1_animations_1_1_amma_animation_controller_1a9412d8d6cc457701e5ff8995f3ab2d25">GetTextureFunctionInput</link>(<link linkend="_class_a_m_m_a_blobert">AMMABlobert</link>.<link linkend="_class_a_m_m_a_blobert_1a54ed22adbc91fed044712d858cd9c32a">GetFighterIdFromCustomValue</link>(blobData.GetInstance&lt;ArcadeBlobert&gt;().custom_id),&#32;<link linkend="_class_blobert_arena_1_1_animations_1_1_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_blobert_arena_1_1_animations_1_1_amma_animation_controller_1a8fc4c7f72ace9ff050379fe422633323">AMMAAnimationState</link>.IdleNFR)&#32;},&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.AMMABlobs);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_characterTraitVisualizerComponent.<link linkend="_class_blobert_arena_1_1_animations_1_1_character_animation_manager_1aa670a425fb51e4c9b28f0fffe6cf4e5a">InitializeComponent</link>(BlobertAnimationController.GetTextureFunctionInput(_blobert.<link linkend="_interface_i_nft_type_1abe085c5479f08c0ab55bad8027cda365">GetTokenTrait</link>(),&#32;<emphasis role="keyword">new</emphasis>&#32;BlobertAnimationController.AnimationDataTraitBlobert(BlobertAnimationController.AnimationDirection.Front,&#32;BlobertAnimationController.AnimationFace.Right,&#32;BlobertAnimationController.AnimationState.Idle1,&#32;BlobertAnimationController.BehaviourState.Happy)),&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.ArcadeBlobs);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00075"/>00075 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1abd9eea6716ad1bfc1afd5f1f792ee65e">PopulateAttacksArray</link>(GetTraitIndex(traitString));
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00078"/>00078 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00079"/><link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1abd9eea6716ad1bfc1afd5f1f792ee65e">00079</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1abd9eea6716ad1bfc1afd5f1f792ee65e">PopulateAttacksArray</link>(<emphasis role="keywordtype">int</emphasis>&#32;traitIndex)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pageIndex&#32;=&#32;0;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00082"/>00082 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(traitIndex&#32;&gt;&#32;_characterTraitVisualizerComponent.<link linkend="_class_blobert_arena_1_1_animations_1_1_character_animation_manager_1ac5a825695d879b9acdf8c29ef077a610">ImageObjects</link>.Count)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;image&#32;<emphasis role="keywordflow">in</emphasis>&#32;_characterTraitVisualizerComponent.<link linkend="_class_blobert_arena_1_1_animations_1_1_character_animation_manager_1ac5a825695d879b9acdf8c29ef077a610">ImageObjects</link>)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image.GetComponent&lt;Image&gt;().color&#32;=&#32;Color.white;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00091"/>00091 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1ac8d7bf6fde4125128e9fa15b4bb114d7">_clickedOnTraitIndex</link>&#32;==&#32;traitIndex)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;image&#32;<emphasis role="keywordflow">in</emphasis>&#32;_characterTraitVisualizerComponent.<link linkend="_class_blobert_arena_1_1_animations_1_1_character_animation_manager_1ac5a825695d879b9acdf8c29ef077a610">ImageObjects</link>)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image.GetComponent&lt;Image&gt;().color&#32;=&#32;Color.white;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00098"/>00098 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1ac8d7bf6fde4125128e9fa15b4bb114d7">_clickedOnTraitIndex</link>&#32;=&#32;-1;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_nameOfTraitText.text&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00101"/>00101 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;button&#32;<emphasis role="keywordflow">in</emphasis>&#32;_attacksBaseButton)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;button.gameObject.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00106"/>00106 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_blobDataManagerBlobDexComponent.<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_blob_data_manager_blob_dex_component_1afffc8bac874bdc6797e80deaa36bda41">OnClickOfTraitToggle</link>(<emphasis role="stringliteral">&quot;&quot;</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;image&#32;<emphasis role="keywordflow">in</emphasis>&#32;_characterTraitVisualizerComponent.<link linkend="_class_blobert_arena_1_1_animations_1_1_character_animation_manager_1ac5a825695d879b9acdf8c29ef077a610">ImageObjects</link>)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image.GetComponent&lt;Image&gt;().color&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(1,&#32;1,&#32;1,&#32;0.3f);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00115"/>00115 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_characterTraitVisualizerComponent.<link linkend="_class_blobert_arena_1_1_animations_1_1_character_animation_manager_1ac5a825695d879b9acdf8c29ef077a610">ImageObjects</link>[traitIndex].GetComponent&lt;Image&gt;().color&#32;=&#32;Color.white;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1ac8d7bf6fde4125128e9fa15b4bb114d7">_clickedOnTraitIndex</link>&#32;=&#32;traitIndex;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00118"/>00118 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_attackToButtonMap.Clear();
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_attacks&#32;=&#32;_blobert.<link linkend="_interface_i_nft_type_1aea8d4c717f7660add2e3d5c3920fd41a">GetAttackMapToTrait</link>()[_characterTraitVisualizerComponent.<link linkend="_class_blobert_arena_1_1_animations_1_1_character_animation_manager_1ac5a825695d879b9acdf8c29ef077a610">ImageObjects</link>[traitIndex].name];
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00121"/>00121 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetTextName(traitIndex);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PopulateButtons();
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00125"/>00125 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetTextName(<emphasis role="keywordtype">int</emphasis>&#32;traitIndex)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;nameTrait&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;traits&#32;=&#32;_blobert.<link linkend="_interface_i_nft_type_1abe085c5479f08c0ab55bad8027cda365">GetTokenTrait</link>();
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(traits&#32;is&#32;TokenTrait.Regular&#32;regularTrait)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1ac8d7bf6fde4125128e9fa15b4bb114d7">_clickedOnTraitIndex</link>)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nameTrait&#32;=&#32;<link linkend="_namespace_starknet_utils">StarknetUtils</link>.<link linkend="_class_starknet_utils_1_1_starknet_address_utils">StarknetAddressUtils</link>.TakeOutUnderScore(<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a70e507e009c112857f37f9715506b167">TraitMaskToFileName</link>((<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1aeea23bb373668a46486ca06150c26e1b">Mask</link>)regularTrait.value.mask),&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00137"/>00137 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nameTrait&#32;=&#32;<link linkend="_namespace_starknet_utils">StarknetUtils</link>.<link linkend="_class_starknet_utils_1_1_starknet_address_utils">StarknetAddressUtils</link>.TakeOutUnderScore(<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a5a8889d6efcb62c2e9dabde12edb95dc">TraitArmourToFileName</link>((<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a03b7cd7a2659573da9e83b66e72c20cd">Armour</link>)regularTrait.value.armour),&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00141"/>00141 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nameTrait&#32;=&#32;<link linkend="_namespace_starknet_utils">StarknetUtils</link>.<link linkend="_class_starknet_utils_1_1_starknet_address_utils">StarknetAddressUtils</link>.TakeOutUnderScore(<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a87dec33205aa0a2cb0e2f241bcc18f47">TraitJewelryToFileName</link>((<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a0950cf1ecfdf20879a2fd45033ce4bd3">Jewelry</link>)regularTrait.value.jewelry),&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00145"/>00145 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;3:
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nameTrait&#32;=&#32;<link linkend="_namespace_starknet_utils">StarknetUtils</link>.<link linkend="_class_starknet_utils_1_1_starknet_address_utils">StarknetAddressUtils</link>.TakeOutUnderScore(<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6b04d76bedcec4fe47abc2f81aed5f1f">TraitWeaponToFileName</link>((<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a15aa64e16cdddbefd7720e3caf0b0b76">Weapon</link>)regularTrait.value.weapon),&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nameTrait&#32;=&#32;<emphasis role="stringliteral">&quot;Custom&quot;</emphasis>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00155"/>00155 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_nameOfTraitText.text&#32;=&#32;$<emphasis role="stringliteral">&quot;{_characterTraitVisualizerComponent.ImageObjects[traitIndex].name}:&#32;{nameTrait}&quot;</emphasis>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00159"/>00159 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetTraitIndex(<emphasis role="keywordtype">string</emphasis>&#32;traitName)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;_characterTraitVisualizerComponent.<link linkend="_class_blobert_arena_1_1_animations_1_1_character_animation_manager_1ac5a825695d879b9acdf8c29ef077a610">ImageObjects</link>.Count;&#32;i++)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_characterTraitVisualizerComponent.<link linkend="_class_blobert_arena_1_1_animations_1_1_character_animation_manager_1ac5a825695d879b9acdf8c29ef077a610">ImageObjects</link>[i].name&#32;==&#32;traitName)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00169"/>00169 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00172"/>00172 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;EventCallTranslator(<emphasis role="keywordtype">string</emphasis>&#32;traitName)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(<emphasis role="stringliteral">&quot;&#32;trait&#32;name&#32;&quot;</emphasis>&#32;+&#32;traitName);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(<emphasis role="stringliteral">&quot;&#32;trait&#32;index&#32;&quot;</emphasis>&#32;+&#32;GetTraitIndex(traitName));
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1abd9eea6716ad1bfc1afd5f1f792ee65e">PopulateAttacksArray</link>(GetTraitIndex(traitName));
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00179"/>00179 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00180"/>00180 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Button&#32;Settings</emphasis>
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00181"/>00181 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;PopulateButtons()
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_attackToButtonMap.Clear();
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00185"/>00185 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_pageIndex&#32;&gt;&#32;0)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_leftArrow.SetActive(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_leftArrow.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00190"/>00190 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_attacks.Count&#32;&gt;&#32;4&#32;*&#32;(_pageIndex&#32;+&#32;1))
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_rightArrow.SetActive(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_rightArrow.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00195"/>00195 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(var&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;_attacksBaseButton.Length;&#32;i++)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;button&#32;=&#32;_attacksBaseButton[i];
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00199"/>00199 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;+&#32;(4&#32;*&#32;_pageIndex)&#32;&lt;&#32;_attacks.Count)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attack&#32;=&#32;_attacks[i&#32;+&#32;(4&#32;*&#32;_pageIndex)];
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;button.gameObject.SetActive(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00204"/>00204 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;button.GetText().text&#32;=&#32;attack.dojoName;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00206"/>00206 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_attackToButtonMap.Add(attack,&#32;button);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00208"/>00208 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(LocalDataModel.DoesBlobertHaveAttack(_blobert.<link linkend="_interface_i_nft_type_1ad85fb13e00c2fed0e17d74131e957924">GetTokenId</link>(),&#32;LocalDataModel.CurrentAccount.Address,&#32;attack))
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;button.SetNewSprites(<link linkend="_class_blobert_arena_1_1_theme_manager_1_1_base_button_skin_listener">BaseButtonSkinListener</link>.<link linkend="_class_blobert_arena_1_1_theme_manager_1_1_base_button_skin_listener_1ab3331b5edaaf3577b80fbbb5e89bb955">ButtonColor</link>.Green);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;button.SetNewSprites(<link linkend="_class_blobert_arena_1_1_theme_manager_1_1_base_button_skin_listener">BaseButtonSkinListener</link>.<link linkend="_class_blobert_arena_1_1_theme_manager_1_1_base_button_skin_listener_1ab3331b5edaaf3577b80fbbb5e89bb955">ButtonColor</link>.Red);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;button.gameObject.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00224"/>00224 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00225"/><link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1a60abedee5123b98335cf449fa261bbcf">00225</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1a60abedee5123b98335cf449fa261bbcf">SetPagination</link>(<emphasis role="keywordtype">int</emphasis>&#32;direction)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_pageIndex&#32;+&#32;direction&#32;&lt;&#32;0)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00229"/>00229 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_attacks.Count&#32;&lt;=&#32;4&#32;*&#32;(_pageIndex&#32;+&#32;direction))
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00232"/>00232 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pageIndex&#32;+=&#32;direction;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PopulateButtons();
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00236"/>00236 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00237"/>00237 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion&#32;Button&#32;Settings</emphasis>
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00238"/>00238 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00239"/>00239 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Graphing&#32;System&#32;Interaction</emphasis>
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00240"/>00240 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00241"/><link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1ae301010bec0e11076f2d860abaf5fefa">00241</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1ae301010bec0e11076f2d860abaf5fefa">SetAttackGraph</link>(<emphasis role="keywordtype">int</emphasis>&#32;attackIndex)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_characterTraitVisualizerComponent.gameObject.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_graphSystemObject.SetActive(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00245"/>00245 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attack&#32;=&#32;_attacks[attackIndex&#32;+&#32;(4&#32;*&#32;_pageIndex)];
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00247"/>00247 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;stats&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;(int,&#32;int)&gt;&#32;{&#32;((int)attack.accuracy,&#32;100),&#32;((<emphasis role="keywordtype">int</emphasis>)100,&#32;100),&#32;((int)attack.speed,&#32;100),&#32;((<emphasis role="keywordtype">int</emphasis>)100,&#32;100),&#32;((int)100,&#32;100),&#32;((<emphasis role="keywordtype">int</emphasis>)attack.cooldown,&#32;6)&#32;};
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_graphMesh.<link linkend="_class_custom_polygon_graph_u_i_1ad1889f69b173ecd364c10b7158974526">InitializeComponent</link>(stats);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00251"/>00251 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00252"/><link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1a0ed5ea8d32955665de159c90f5833088">00252</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1a0ed5ea8d32955665de159c90f5833088">CloseAttackGraph</link>()
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_characterTraitVisualizerComponent.gameObject.SetActive(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_graphSystemObject.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00257"/>00257 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00258"/>00258 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion&#32;Graphing&#32;System&#32;Interaction</emphasis>
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00259"/>00259 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00260"/>00260 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Blobert&#32;Attack&#32;Handling</emphasis>
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00261"/>00261 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HandleBlobertAttackChanged(<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;blobId,&#32;Attack&#32;attack,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;added)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(blobId.Hex()&#32;!=&#32;_blobert.<link linkend="_interface_i_nft_type_1ad85fb13e00c2fed0e17d74131e957924">GetTokenId</link>().Hex())
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00266"/>00266 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(added)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_attackToButtonMap[attack].SetNewSprites(<link linkend="_class_blobert_arena_1_1_theme_manager_1_1_base_button_skin_listener">BaseButtonSkinListener</link>.<link linkend="_class_blobert_arena_1_1_theme_manager_1_1_base_button_skin_listener_1ab3331b5edaaf3577b80fbbb5e89bb955">ButtonColor</link>.Green);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_attackToButtonMap[attack].SetNewSprites(<link linkend="_class_blobert_arena_1_1_theme_manager_1_1_base_button_skin_listener">BaseButtonSkinListener</link>.<link linkend="_class_blobert_arena_1_1_theme_manager_1_1_base_button_skin_listener_1ab3331b5edaaf3577b80fbbb5e89bb955">ButtonColor</link>.Red);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00276"/>00276 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00277"/><link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1a3a8ea4649e120d1f1ea28edc9ab3ec56">00277</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1a3a8ea4649e120d1f1ea28edc9ab3ec56">DisplayTemporaryMessage</link>(<emphasis role="keywordtype">string</emphasis>&#32;message,&#32;Color&#32;color)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_equippedTextAction.text&#32;=&#32;message;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_equippedTextAction.color&#32;=&#32;color;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00281"/>00281 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StopCoroutine(<emphasis role="stringliteral">&quot;HideMessageCoroutine&quot;</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(<emphasis role="stringliteral">&quot;HideMessageCoroutine&quot;</emphasis>);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00285"/>00285 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;HideMessageCoroutine()
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(3f);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00289"/>00289 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;fadeDuration&#32;=&#32;1f;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;elapsedTime&#32;=&#32;0f;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;originalColor&#32;=&#32;_equippedTextAction.color;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00293"/>00293 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(elapsedTime&#32;&lt;&#32;fadeDuration)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;elapsedTime&#32;+=&#32;Time.deltaTime;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;alpha&#32;=&#32;Mathf.Lerp(1f,&#32;0f,&#32;elapsedTime&#32;/&#32;fadeDuration);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_equippedTextAction.color&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(originalColor.r,&#32;originalColor.g,&#32;originalColor.b,&#32;alpha);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00301"/>00301 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_equippedTextAction.text&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_equippedTextAction.color&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(originalColor.r,&#32;originalColor.g,&#32;originalColor.b,&#32;1f);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00305"/>00305 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00306"/><link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1a904bcc0dfe0b4eaaf1832d428a25eb57">00306</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1a904bcc0dfe0b4eaaf1832d428a25eb57">AmendAttack</link>(<emphasis role="keywordtype">int</emphasis>&#32;attackIndex)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attack&#32;=&#32;_attacks[attackIndex];
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00309"/>00309 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(LocalDataModel.DoesBlobertHaveAttack(_blobert.<link linkend="_interface_i_nft_type_1ad85fb13e00c2fed0e17d74131e957924">GetTokenId</link>(),&#32;LocalDataModel.CurrentAccount.Address,&#32;attack))
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LocalDataModel.RemoveAttackFromBlobert(_blobert.<link linkend="_interface_i_nft_type_1ad85fb13e00c2fed0e17d74131e957924">GetTokenId</link>(),&#32;LocalDataModel.CurrentAccount.Address,&#32;attack);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1a3a8ea4649e120d1f1ea28edc9ab3ec56">DisplayTemporaryMessage</link>(<emphasis role="stringliteral">&quot;Attack&#32;removed&quot;</emphasis>,&#32;Color.red);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00316"/>00316 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;count&#32;=&#32;LocalDataModel.GetBlobertAttackCount(_blobert.<link linkend="_interface_i_nft_type_1ad85fb13e00c2fed0e17d74131e957924">GetTokenId</link>(),&#32;LocalDataModel.CurrentAccount.Address);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00318"/>00318 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(count&#32;&gt;=&#32;4)
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1a3a8ea4649e120d1f1ea28edc9ab3ec56">DisplayTemporaryMessage</link>(<emphasis role="stringliteral">&quot;Max&#32;attacks&#32;selected&quot;</emphasis>,&#32;Color.yellow);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00324"/>00324 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LocalDataModel.AddAttackToBlobert(_blobert.<link linkend="_interface_i_nft_type_1ad85fb13e00c2fed0e17d74131e957924">GetTokenId</link>(),&#32;LocalDataModel.CurrentAccount.Address,&#32;attack);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_view_traits_attack_blob_dex_component_1a3a8ea4649e120d1f1ea28edc9ab3ec56">DisplayTemporaryMessage</link>(<emphasis role="stringliteral">&quot;Attack&#32;added&quot;</emphasis>,&#32;Color.green);
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00328"/>00328 
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00329"/>00329 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion&#32;Blobert&#32;Attack&#32;Handling</emphasis>
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;}
<anchor xml:id="__view_traits_attack_blob_dex_component_8cs_source_1l00331"/>00331 }
</programlisting></section>
