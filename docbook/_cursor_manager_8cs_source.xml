<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__cursor_manager_8cs_source" xml:lang="en-US">
<title>CursorManager.cs</title>
<indexterm><primary>Managers/Singletons/CursorManager.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__cursor_manager_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;Created&#32;by&#32;Norbert</emphasis>
<anchor xml:id="__cursor_manager_8cs_source_1l00002"/>00002 
<anchor xml:id="__cursor_manager_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__cursor_manager_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_logic_layer">LogicLayer</link>;
<anchor xml:id="__cursor_manager_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_logic_layer_1_1_models">LogicLayer.Models</link>;
<anchor xml:id="__cursor_manager_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__cursor_manager_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.EventSystems;
<anchor xml:id="__cursor_manager_8cs_source_1l00008"/>00008 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.UI;
<anchor xml:id="__cursor_manager_8cs_source_1l00009"/>00009 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.InputSystem;
<anchor xml:id="__cursor_manager_8cs_source_1l00010"/>00010 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.InputSystem.LowLevel;
<anchor xml:id="__cursor_manager_8cs_source_1l00011"/>00011 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.InputSystem.Users;
<anchor xml:id="__cursor_manager_8cs_source_1l00012"/>00012 
<anchor xml:id="__cursor_manager_8cs_source_1l00016"/><link linkend="_class_cursor_manager">00016</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_cursor_manager">CursorManager</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__cursor_manager_8cs_source_1l00017"/>00017 {
<anchor xml:id="__cursor_manager_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;Texture2D[]&#32;m_Cursors;
<anchor xml:id="__cursor_manager_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;Texture2D&#32;m_BlankMouseCursor;
<anchor xml:id="__cursor_manager_8cs_source_1l00020"/>00020 
<anchor xml:id="__cursor_manager_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_MobileUI&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cursor_manager_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_UseVirtualMouse&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cursor_manager_8cs_source_1l00023"/>00023 
<anchor xml:id="__cursor_manager_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_cursor_manager">CursorManager</link>&#32;m_Instance;
<anchor xml:id="__cursor_manager_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_IsHovering&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cursor_manager_8cs_source_1l00026"/>00026 
<anchor xml:id="__cursor_manager_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Virtual&#32;Mouse&quot;</emphasis>)]
<anchor xml:id="__cursor_manager_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;RectTransform&#32;m_CanvasTransform;
<anchor xml:id="__cursor_manager_8cs_source_1l00029"/>00029 
<anchor xml:id="__cursor_manager_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;[SerializeField,&#32;Range(200.0f,&#32;400.0f)]&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;m_KeyboardControlSensitivity&#32;=&#32;300f;
<anchor xml:id="__cursor_manager_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;RectTransform&#32;m_VirtualMouseTransform;
<anchor xml:id="__cursor_manager_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;PlayerInput&#32;m_PlayerInput;
<anchor xml:id="__cursor_manager_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;Sprite[]&#32;m_VirtualCursorSprites;
<anchor xml:id="__cursor_manager_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Image&#32;m_VirtualCursorImage;
<anchor xml:id="__cursor_manager_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Mouse&#32;m_VirtualMouse;
<anchor xml:id="__cursor_manager_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Camera&#32;m_MainCamera;
<anchor xml:id="__cursor_manager_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;GraphicRaycaster&#32;m_GraphicRaycaster;
<anchor xml:id="__cursor_manager_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_profile_panel">ProfilePanel</link>&#32;m_ProfilePanel;
<anchor xml:id="__cursor_manager_8cs_source_1l00039"/>00039 
<anchor xml:id="__cursor_manager_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;InputAction&#32;m_MoveAction;
<anchor xml:id="__cursor_manager_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;InputAction&#32;m_ClickAction;
<anchor xml:id="__cursor_manager_8cs_source_1l00042"/>00042 
<anchor xml:id="__cursor_manager_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()
<anchor xml:id="__cursor_manager_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_MobileUI&#32;=&#32;!<link linkend="_class_ui_reference_manager">UiReferenceManager</link>.<link linkend="_class_ui_reference_manager_1ae0737a66851615458ae55130ccbc71ba">IsDevelopmentWebsite</link>();
<anchor xml:id="__cursor_manager_8cs_source_1l00046"/>00046 
<anchor xml:id="__cursor_manager_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_Instance&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__cursor_manager_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError(<emphasis role="stringliteral">&quot;CursorManager&#32;already&#32;initialized&quot;</emphasis>);
<anchor xml:id="__cursor_manager_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Destroy(gameObject);
<anchor xml:id="__cursor_manager_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__cursor_manager_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00053"/>00053 
<anchor xml:id="__cursor_manager_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Instance&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__cursor_manager_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//m_MobileUI&#32;=&#32;!LocalDataModel.IsDesktopUi();</emphasis>
<anchor xml:id="__cursor_manager_8cs_source_1l00056"/>00056 
<anchor xml:id="__cursor_manager_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_MobileUI)
<anchor xml:id="__cursor_manager_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;In&#32;case&#32;of&#32;mobile&#32;UI,&#32;apply&#32;a&#32;transparent&#32;image&#32;on&#32;the&#32;cursor&#32;and&#32;return</emphasis>
<anchor xml:id="__cursor_manager_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cursor.SetCursor(m_BlankMouseCursor,&#32;Vector2.zero,&#32;CursorMode.ForceSoftware);
<anchor xml:id="__cursor_manager_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__cursor_manager_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_ClickAction&#32;=&#32;m_PlayerInput.actions[<emphasis role="stringliteral">&quot;Fire&quot;</emphasis>];
<anchor xml:id="__cursor_manager_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_ClickAction.started&#32;+=&#32;CheckProfilePanel;
<anchor xml:id="__cursor_manager_8cs_source_1l00065"/>00065 
<anchor xml:id="__cursor_manager_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LocalDataModel.OnGameEventChanged&#32;+=&#32;(LocalDataModel.GameEvent&#32;gameEvent)&#32;=&gt;&#32;UpdateCursorIcon();
<anchor xml:id="__cursor_manager_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00068"/>00068 
<anchor xml:id="__cursor_manager_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
<anchor xml:id="__cursor_manager_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_MobileUI)
<anchor xml:id="__cursor_manager_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;In&#32;case&#32;of&#32;mobile&#32;UI,&#32;hide&#32;the&#32;cursor&#32;and&#32;return</emphasis>
<anchor xml:id="__cursor_manager_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cursor.visible&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cursor_manager_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__cursor_manager_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00077"/>00077 
<anchor xml:id="__cursor_manager_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_GraphicRaycaster&#32;=&#32;m_CanvasTransform.gameObject.GetComponent&lt;GraphicRaycaster&gt;();
<anchor xml:id="__cursor_manager_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_ProfilePanel&#32;=&#32;FindObjectOfType&lt;ProfilePanel&gt;(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__cursor_manager_8cs_source_1l00080"/>00080 
<anchor xml:id="__cursor_manager_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!m_UseVirtualMouse)
<anchor xml:id="__cursor_manager_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;not&#32;using&#32;the&#32;virtual&#32;mouse,&#32;disable&#32;its&#32;game&#32;object&#32;and&#32;return.</emphasis>
<anchor xml:id="__cursor_manager_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_VirtualMouseTransform?.gameObject.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__cursor_manager_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdateCursorIcon();
<anchor xml:id="__cursor_manager_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__cursor_manager_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00088"/>00088 
<anchor xml:id="__cursor_manager_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Enable&#32;the&#32;virtual&#32;mouse&#32;object&#32;and&#32;hide&#32;the&#32;default&#32;cursor</emphasis>
<anchor xml:id="__cursor_manager_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_VirtualMouseTransform.gameObject.SetActive(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__cursor_manager_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cursor.visible&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cursor_manager_8cs_source_1l00092"/>00092 
<anchor xml:id="__cursor_manager_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_MainCamera&#32;=&#32;Camera.main;
<anchor xml:id="__cursor_manager_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_MoveAction&#32;=&#32;m_PlayerInput.actions[<emphasis role="stringliteral">&quot;Move&quot;</emphasis>];
<anchor xml:id="__cursor_manager_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_VirtualCursorImage&#32;=&#32;m_VirtualMouseTransform.gameObject.GetComponent&lt;Image&gt;();
<anchor xml:id="__cursor_manager_8cs_source_1l00096"/>00096 
<anchor xml:id="__cursor_manager_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_VirtualMouse&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__cursor_manager_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;there&#32;is&#32;no&#32;virtual&#32;mouse&#32;device&#32;present,&#32;add&#32;one...</emphasis>
<anchor xml:id="__cursor_manager_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_VirtualMouse&#32;=&#32;InputSystem.AddDevice&lt;Mouse&gt;(<emphasis role="stringliteral">&quot;VirtualMouse&quot;</emphasis>);
<anchor xml:id="__cursor_manager_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!m_VirtualMouse.added)
<anchor xml:id="__cursor_manager_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//...&#32;or&#32;add&#32;it,&#32;if&#32;the&#32;device&#32;is&#32;already&#32;present.</emphasis>
<anchor xml:id="__cursor_manager_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InputSystem.AddDevice(m_VirtualMouse);
<anchor xml:id="__cursor_manager_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00107"/>00107 
<anchor xml:id="__cursor_manager_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Pair&#32;the&#32;virtual&#32;device&#32;with&#32;the&#32;user&#32;input&#32;mapping.</emphasis>
<anchor xml:id="__cursor_manager_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InputUser.PerformPairingWithDevice(m_VirtualMouse,&#32;m_PlayerInput.user);
<anchor xml:id="__cursor_manager_8cs_source_1l00110"/>00110 
<anchor xml:id="__cursor_manager_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_VirtualMouseTransform&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__cursor_manager_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Reposition&#32;the&#32;virtual&#32;mouse&#32;object&#32;to&#32;the&#32;middle&#32;of&#32;the&#32;screen</emphasis>
<anchor xml:id="__cursor_manager_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;pos&#32;=&#32;<emphasis role="keyword">new</emphasis>(m_CanvasTransform.rect.width&#32;*&#32;0.5f,&#32;m_CanvasTransform.rect.height&#32;*&#32;0.5f);
<anchor xml:id="__cursor_manager_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InputState.Change(m_VirtualMouse.position,&#32;pos);
<anchor xml:id="__cursor_manager_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00117"/>00117 
<anchor xml:id="__cursor_manager_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Subscribe&#32;to&#32;the&#32;update&#32;cycle&#32;and&#32;update&#32;the&#32;cursor&#32;graphics</emphasis>
<anchor xml:id="__cursor_manager_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InputSystem.onAfterUpdate&#32;+=&#32;UpdateVirtualMouse;
<anchor xml:id="__cursor_manager_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdateCursorIcon();
<anchor xml:id="__cursor_manager_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00122"/>00122 
<anchor xml:id="__cursor_manager_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDisable()
<anchor xml:id="__cursor_manager_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_MobileUI)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00126"/>00126 
<anchor xml:id="__cursor_manager_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;When&#32;the&#32;manager&#32;is&#32;disabled,&#32;unsubscribe&#32;from&#32;the&#32;input&#32;update&#32;cycle&#32;and&#32;remove&#32;the&#32;virtual&#32;device.</emphasis>
<anchor xml:id="__cursor_manager_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_VirtualMouse&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;m_VirtualMouse.added)
<anchor xml:id="__cursor_manager_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InputSystem.RemoveDevice(m_VirtualMouse);
<anchor xml:id="__cursor_manager_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InputSystem.onAfterUpdate&#32;-=&#32;UpdateVirtualMouse;
<anchor xml:id="__cursor_manager_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00134"/>00134 
<anchor xml:id="__cursor_manager_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateVirtualMouse()
<anchor xml:id="__cursor_manager_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_VirtualMouse&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;m_MobileUI)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00138"/>00138 
<anchor xml:id="__cursor_manager_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;deltaPos&#32;=&#32;m_MoveAction.ReadValue&lt;Vector2&gt;().normalized;
<anchor xml:id="__cursor_manager_8cs_source_1l00140"/>00140 
<anchor xml:id="__cursor_manager_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;deltaPos&#32;*=&#32;(m_KeyboardControlSensitivity&#32;*&#32;Time.deltaTime);
<anchor xml:id="__cursor_manager_8cs_source_1l00142"/>00142 
<anchor xml:id="__cursor_manager_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;currentMousePos&#32;=&#32;m_VirtualMouse.position.ReadValue();
<anchor xml:id="__cursor_manager_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;newMousePos&#32;=&#32;currentMousePos&#32;+&#32;deltaPos;
<anchor xml:id="__cursor_manager_8cs_source_1l00145"/>00145 
<anchor xml:id="__cursor_manager_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newMousePos.x&#32;=&#32;Mathf.Clamp(newMousePos.x,&#32;0,&#32;m_CanvasTransform.rect.width);
<anchor xml:id="__cursor_manager_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newMousePos.y&#32;=&#32;Mathf.Clamp(newMousePos.y,&#32;0,&#32;m_CanvasTransform.rect.height);
<anchor xml:id="__cursor_manager_8cs_source_1l00148"/>00148 
<anchor xml:id="__cursor_manager_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InputState.Change(m_VirtualMouse.delta,&#32;deltaPos);
<anchor xml:id="__cursor_manager_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InputState.Change(m_VirtualMouse.position,&#32;newMousePos);
<anchor xml:id="__cursor_manager_8cs_source_1l00151"/>00151 
<anchor xml:id="__cursor_manager_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransformUtility.ScreenPointToLocalPointInRectangle(
<anchor xml:id="__cursor_manager_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_CanvasTransform,
<anchor xml:id="__cursor_manager_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newMousePos,
<anchor xml:id="__cursor_manager_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_MainCamera,
<anchor xml:id="__cursor_manager_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;Vector2&#32;localAnchoredPoint);
<anchor xml:id="__cursor_manager_8cs_source_1l00157"/>00157 
<anchor xml:id="__cursor_manager_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_VirtualMouseTransform.anchoredPosition&#32;=&#32;localAnchoredPoint;
<anchor xml:id="__cursor_manager_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00160"/>00160 
<anchor xml:id="__cursor_manager_8cs_source_1l00161"/><link linkend="_class_cursor_manager_1a826cd0a9bd914d2bb46a6bcd74e5cb2b">00161</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_cursor_manager_1a826cd0a9bd914d2bb46a6bcd74e5cb2b">OnCursorHover</link>(<emphasis role="keywordtype">bool</emphasis>&#32;hovering)
<anchor xml:id="__cursor_manager_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_Instance.m_MobileUI)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00164"/>00164 
<anchor xml:id="__cursor_manager_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Instance.m_IsHovering&#32;=&#32;hovering;
<anchor xml:id="__cursor_manager_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Instance.UpdateCursorIcon();
<anchor xml:id="__cursor_manager_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00168"/>00168 
<anchor xml:id="__cursor_manager_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateCursorIcon()
<anchor xml:id="__cursor_manager_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_MobileUI)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00172"/>00172 
<anchor xml:id="__cursor_manager_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cursorIndex&#32;=&#32;(LocalDataModel.GameTheme&#32;==&#32;LocalDataModel.GameEvent.Normal&#32;?&#32;0&#32;:&#32;2)&#32;+&#32;(m_Instance.m_IsHovering&#32;?&#32;1&#32;:&#32;0);
<anchor xml:id="__cursor_manager_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_UseVirtualMouse)
<anchor xml:id="__cursor_manager_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_VirtualCursorImage.sprite&#32;=&#32;m_VirtualCursorSprites[cursorIndex];
<anchor xml:id="__cursor_manager_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__cursor_manager_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cursor.SetCursor(m_Instance.m_Cursors[cursorIndex],&#32;Vector2.zero,&#32;CursorMode.ForceSoftware);
<anchor xml:id="__cursor_manager_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00181"/>00181 
<anchor xml:id="__cursor_manager_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CheckProfilePanel(InputAction.CallbackContext&#32;context)
<anchor xml:id="__cursor_manager_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!m_ProfilePanel.<link linkend="_class_profile_panel_1a8ea77ebde73dca65ee68dde458d9c698">IsOpen</link>)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00185"/>00185 
<anchor xml:id="__cursor_manager_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PointerEventData&#32;ped&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;PointerEventData(EventSystem.current);
<anchor xml:id="__cursor_manager_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ped.position&#32;=&#32;Mouse.current.position.ReadValue();
<anchor xml:id="__cursor_manager_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;RaycastResult&gt;&#32;results&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;RaycastResult&gt;();
<anchor xml:id="__cursor_manager_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_GraphicRaycaster.Raycast(ped,&#32;results);
<anchor xml:id="__cursor_manager_8cs_source_1l00190"/>00190 
<anchor xml:id="__cursor_manager_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isProfilePanelClicked&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cursor_manager_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(RaycastResult&#32;r&#32;<emphasis role="keywordflow">in</emphasis>&#32;results)
<anchor xml:id="__cursor_manager_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(r.gameObject.CompareTag(<emphasis role="stringliteral">&quot;ProfilePanel&quot;</emphasis>))
<anchor xml:id="__cursor_manager_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cursor_manager_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isProfilePanelClicked&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cursor_manager_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isProfilePanelClicked)&#32;{&#32;m_ProfilePanel.<link linkend="_class_profile_panel_1a5ae31afc4be4544a1ed4f3a6db691de2">OnClosePanelClicked</link>();&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cursor_manager_8cs_source_1l00201"/>00201 }
</programlisting></section>
