<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__starknet_hash_operations_utils_8cs_source" xml:lang="en-US">
<title>StarknetHashOperationsUtils.cs</title>
<indexterm><primary>Managers/Statics/StarknetHashOperationsUtils.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_system">System</link>;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Collections;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>System.Linq;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis>System.Numerics;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis>System.Security.Cryptography;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis>Dojo.Starknet;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00008"/>00008 <emphasis role="keyword">using&#32;</emphasis>StarkSharp.StarkCurve.Extensions;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00009"/>00009 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00010"/>00010 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00011"/>00011 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_starknet_utils">StarknetUtils</link>
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00012"/>00012 {
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>StarknetHashOperationsUtils
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;emptyFieldElement&#32;=&#32;<emphasis role="stringliteral">&quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;</emphasis>;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00016"/>00016 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;BigIntToHex(BigInteger&#32;bigInt)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;0x&quot;</emphasis>&#32;+&#32;bigInt.ToString(<emphasis role="stringliteral">&quot;X&quot;</emphasis>).ToLower();
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00021"/>00021 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;BigInteger&#32;NumberToBigint(<emphasis role="keywordtype">int</emphasis>&#32;number,&#32;<emphasis role="keywordtype">int</emphasis>&#32;decimalLength&#32;=&#32;18)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BigInteger&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;BigInteger(number)&#32;*&#32;BigInteger.Pow(10,&#32;decimalLength);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00033"/>00033 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;decimal&#32;BigIntToDecimal(BigInteger&#32;bigInt,&#32;<emphasis role="keywordtype">int</emphasis>&#32;decimalPlaces&#32;=&#32;2)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;decimal&#32;result&#32;=&#32;(decimal)(bigInt&#32;/&#32;BigInteger.Pow(10,&#32;18));
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;Math.Round(result,&#32;decimalPlaces);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(Exception&#32;ex)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Console.WriteLine($<emphasis role="stringliteral">&quot;An&#32;error&#32;occurred:&#32;{ex.Message}&quot;</emphasis>);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00054"/>00054 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//pretyy&#32;sure&#32;this&#32;is&#32;broken</emphasis>
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;BigInteger&#32;HexToBigInteger(<emphasis role="keywordtype">string</emphasis>&#32;hexString)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hexString.StartsWith(<emphasis role="stringliteral">&quot;0x&quot;</emphasis>,&#32;StringComparison.OrdinalIgnoreCase))
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hexString&#32;=&#32;hexString.Substring(2);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00067"/>00067 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hexString&#32;=&#32;hexString.TrimStart(<emphasis role="charliteral">&apos;0&apos;</emphasis>);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[hexString.Length&#32;/&#32;2&#32;+&#32;hexString.Length&#32;%&#32;2];
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;0;&#32;index&#32;&lt;&#32;bytes.Length;&#32;index++)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;byteValue&#32;=&#32;hexString.Length&#32;%&#32;2&#32;!=&#32;0&#32;&amp;&amp;&#32;index&#32;==&#32;0
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;hexString.Substring(0,&#32;1)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;hexString.Substring(index&#32;*&#32;2&#32;-&#32;(hexString.Length&#32;%&#32;2&#32;==&#32;0&#32;?&#32;0&#32;:&#32;1),&#32;2);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00075"/>00075 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytes[bytes.Length&#32;-&#32;index&#32;-&#32;1]&#32;=&#32;Convert.ToByte(byteValue,&#32;16);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00078"/>00078 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;BigInteger(bytes.Concat(<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;{&#32;0&#32;}).ToArray());
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00081"/>00081 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;BigInteger&#32;HexToBigInt(<emphasis role="keywordtype">string</emphasis>&#32;hexValue)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hexValue.StartsWith(<emphasis role="stringliteral">&quot;0x&quot;</emphasis>))
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hexValue&#32;=&#32;hexValue.Substring(2);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00086"/>00086 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BigInteger.Parse(hexValue,&#32;<link linkend="_namespace_system">System</link>.Globalization.NumberStyles.HexNumber);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00089"/>00089 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>&#32;firstHalf,&#32;<emphasis role="keywordtype">string</emphasis>&#32;lastHalf)&#32;GetFirstAndLastU128(<emphasis role="keywordtype">string</emphasis>&#32;hex)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hex&#32;=&#32;hex.PadLeft(64,&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00098"/>00098 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;firstHalf&#32;=&#32;<emphasis role="stringliteral">&quot;0x&quot;</emphasis>&#32;+&#32;hex.Substring(0,&#32;32).TrimStart(<emphasis role="charliteral">&apos;0&apos;</emphasis>);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00100"/>00100 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;lastHalf&#32;=&#32;<emphasis role="stringliteral">&quot;0x&quot;</emphasis>&#32;+&#32;hex.Substring(hex.Length&#32;-&#32;32).TrimStart(<emphasis role="charliteral">&apos;0&apos;</emphasis>);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00102"/>00102 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(firstHalf,&#32;lastHalf);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00105"/>00105 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;ConvertTo256BitHex(<emphasis role="keywordtype">string</emphasis>&#32;input)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Remove&#32;the&#32;&quot;0x&quot;&#32;prefix&#32;if&#32;it&#32;exists</emphasis>
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(input.StartsWith(<emphasis role="stringliteral">&quot;0x&quot;</emphasis>))
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input&#32;=&#32;input.Substring(2);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00118"/>00118 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Convert&#32;the&#32;hex&#32;string&#32;to&#32;a&#32;byte&#32;array</emphasis>
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes&#32;=&#32;Enumerable.Range(0,&#32;input.Length&#32;/&#32;2)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Select(x&#32;=&gt;&#32;Convert.ToByte(input.Substring(x&#32;*&#32;2,&#32;2),&#32;16))
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.ToArray();
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00123"/>00123 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Ensure&#32;the&#32;byte&#32;array&#32;is&#32;32&#32;bytes&#32;(256&#32;bits)&#32;long</emphasis>
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;paddedBytes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[32];
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Buffer.BlockCopy(bytes,&#32;0,&#32;paddedBytes,&#32;32&#32;-&#32;bytes.Length,&#32;bytes.Length);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00127"/>00127 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Convert&#32;back&#32;to&#32;hex&#32;string</emphasis>
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;result&#32;=&#32;<emphasis role="stringliteral">&quot;0x&quot;</emphasis>&#32;+&#32;BitConverter.ToString(paddedBytes).Replace(<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>).ToLower();
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00130"/>00130 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00133"/>00133 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;(<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;high,&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;low)&#32;SplitU256ToU128(<emphasis role="keywordtype">string</emphasis>&#32;hexValue)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hexValue.StartsWith(<emphasis role="stringliteral">&quot;0x&quot;</emphasis>))
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hexValue&#32;=&#32;hexValue.Substring(2);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00140"/>00140 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hexValue.Length&#32;!=&#32;64)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentException(<emphasis role="stringliteral">&quot;Hex&#32;value&#32;must&#32;be&#32;exactly&#32;64&#32;characters&#32;(32&#32;bytes)&#32;long.&quot;</emphasis>);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00145"/>00145 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;highHex&#32;=&#32;hexValue.Substring(0,&#32;32);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;lowHex&#32;=&#32;hexValue.Substring(32,&#32;32);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00148"/>00148 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;high&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>(<emphasis role="stringliteral">&quot;0x&quot;</emphasis>&#32;+&#32;highHex);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;low&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>(<emphasis role="stringliteral">&quot;0x&quot;</emphasis>&#32;+&#32;lowHex);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(high,&#32;low);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00153"/>00153 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;JoinU128ToU252(<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;high,&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;low)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;highHex&#32;=&#32;high.Hex().Replace(<emphasis role="stringliteral">&quot;0x&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>).Substring(32,&#32;32);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;lowHex&#32;=&#32;low.Hex().Replace(<emphasis role="stringliteral">&quot;0x&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>).Substring(32,&#32;32);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00158"/>00158 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Concatenate&#32;high&#32;and&#32;low&#32;hex&#32;parts.</emphasis>
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;combinedHex&#32;=&#32;highHex&#32;+&#32;lowHex;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>(<emphasis role="stringliteral">&quot;0x&quot;</emphasis>&#32;+&#32;combinedHex);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00163"/>00163 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetRandomFeltInHex()
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;randomBytes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[28];
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(var&#32;rng&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;RNGCryptoServiceProvider())
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rng.GetBytes(randomBytes);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00171"/>00171 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;randomBytes[0]&#32;&amp;=&#32;0x0F;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00173"/>00173 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BigInteger&#32;felt&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;BigInteger(randomBytes,&#32;isUnsigned:&#32;<emphasis role="keyword">true</emphasis>,&#32;isBigEndian:&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00175"/>00175 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;0x&quot;</emphasis>&#32;+&#32;felt.ToString(<emphasis role="stringliteral">&quot;X&quot;</emphasis>);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00178"/>00178 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;ConvertToTwosComplement(BigInteger&#32;number)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(number&#32;&gt;=&#32;0)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BigIntToHex(number);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00185"/>00185 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BigInteger&#32;positiveNumber&#32;=&#32;BigInteger.Abs(number);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00187"/>00187 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitLength&#32;=&#32;(int)Math.Ceiling(positiveNumber.GetBitLength()&#32;/&#32;8.0)&#32;*&#32;8;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00189"/>00189 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BigInteger&#32;twoComplement&#32;=&#32;(BigInteger.One&#32;&lt;&lt;&#32;bitLength)&#32;-&#32;positiveNumber;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00191"/>00191 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;0x&quot;</emphasis>&#32;+&#32;twoComplement.ToString(<emphasis role="stringliteral">&quot;x&quot;</emphasis>).Substring(1);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00194"/>00194 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;unsafe&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;PoseidonHash(<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>[]&#32;array)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(array&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;array.Length&#32;==&#32;0)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentException(<emphasis role="stringliteral">&quot;Input&#32;array&#32;cannot&#32;be&#32;null&#32;or&#32;empty&quot;</emphasis>);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00201"/>00201 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dojo_bindings.dojo.FieldElement[]&#32;dojoArray&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;dojo_bindings.dojo.FieldElement[array.Length];
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;array.Length;&#32;i++)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dojoArray[i]&#32;=&#32;array[i].Inner;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00207"/>00207 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UIntPtr&#32;length&#32;=&#32;(UIntPtr)dojoArray.Length;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00209"/>00209 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(dojo_bindings.dojo.FieldElement*&#32;arrayPtr&#32;=&#32;dojoArray)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dojo_bindings.dojo.FieldElement&#32;result&#32;=&#32;dojo_bindings.dojo.poseidon_hash(arrayPtr,&#32;length);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00213"/>00213 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>(result);
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00217"/>00217 
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;FieldElementToSpan(<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;fieldElement)
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;last16Bytes&#32;=&#32;fieldElement.Inner.data.Slice(16,&#32;16).ToArray();
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;last16Bytes;
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_hash_operations_utils_8cs_source_1l00224"/>00224 }
</programlisting></section>
