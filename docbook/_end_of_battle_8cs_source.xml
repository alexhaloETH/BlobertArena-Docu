<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__end_of_battle_8cs_source" xml:lang="en-US">
<title>EndOfBattle.cs</title>
<indexterm><primary>UI/Pages/BattlePage/EndOfBattle.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__end_of_battle_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;Created&#32;by&#32;Norbert</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00002"/>00002 
<anchor xml:id="__end_of_battle_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>Dojo.Starknet;
<anchor xml:id="__end_of_battle_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_logic_layer">LogicLayer</link>;
<anchor xml:id="__end_of_battle_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_system">System</link>;
<anchor xml:id="__end_of_battle_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis>System.Collections;
<anchor xml:id="__end_of_battle_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__end_of_battle_8cs_source_1l00008"/>00008 <emphasis role="keyword">using&#32;</emphasis>System.Text;
<anchor xml:id="__end_of_battle_8cs_source_1l00009"/>00009 <emphasis role="keyword">using&#32;</emphasis>System.Threading.Tasks;
<anchor xml:id="__end_of_battle_8cs_source_1l00010"/>00010 <emphasis role="keyword">using&#32;</emphasis>TMPro;
<anchor xml:id="__end_of_battle_8cs_source_1l00011"/>00011 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__end_of_battle_8cs_source_1l00012"/>00012 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.UI;
<anchor xml:id="__end_of_battle_8cs_source_1l00013"/>00013 
<anchor xml:id="__end_of_battle_8cs_source_1l00014"/>00014 <emphasis role="comment">//&#32;NOTES:</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00015"/>00015 <emphasis role="comment">//&#32;Currently&#32;the&#32;XP&#32;bar&#32;animation&#32;part&#32;has&#32;some&#32;magic&#32;numbers&#32;in&#32;them,&#32;those&#32;data&#32;will</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00016"/>00016 <emphasis role="comment">//&#32;need&#32;to&#32;come&#32;from&#32;the&#32;backend</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00017"/>00017 
<anchor xml:id="__end_of_battle_8cs_source_1l00018"/>00018 <emphasis role="comment">//&#32;TODO:&#32;Once&#32;the&#32;XP&#32;feature&#32;is&#32;implemented,&#32;the&#32;XP&#32;bar&#32;features&#32;need&#32;to&#32;be&#32;re-enabled</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00019"/>00019 
<anchor xml:id="__end_of_battle_8cs_source_1l00023"/><link linkend="_class_end_of_battle">00023</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_end_of_battle">EndOfBattle</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__end_of_battle_8cs_source_1l00024"/>00024 {
<anchor xml:id="__end_of_battle_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;AnimStates
<anchor xml:id="__end_of_battle_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Start&#32;=&#32;0,
<anchor xml:id="__end_of_battle_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OutcomeExplenation&#32;=&#32;1,
<anchor xml:id="__end_of_battle_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sliders&#32;=&#32;2,
<anchor xml:id="__end_of_battle_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VictoryText&#32;=&#32;3,
<anchor xml:id="__end_of_battle_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XP_Bar&#32;=&#32;4,
<anchor xml:id="__end_of_battle_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Complete&#32;=&#32;5
<anchor xml:id="__end_of_battle_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00034"/>00034 
<anchor xml:id="__end_of_battle_8cs_source_1l00035"/><link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">00035</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>
<anchor xml:id="__end_of_battle_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014aa85b95017d0792ca611434d181515722">PlayerWon</link>&#32;=&#32;0,
<anchor xml:id="__end_of_battle_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014ad659ddf649677b51ffdef64377a75575">PlayerLost</link>&#32;=&#32;1,
<anchor xml:id="__end_of_battle_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014a6adf97f83acf6453d4a6a4b1070f3754">None</link>&#32;=&#32;2&#32;<emphasis role="comment">//&#32;The&#32;battle&#32;is&#32;still&#32;on&#32;most&#32;likely...&#32;otherwise&#32;there&#32;is&#32;an&#32;error...</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00041"/>00041 
<anchor xml:id="__end_of_battle_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="comment">//this&#32;is&#32;where&#32;we&#32;do&#32;a&#32;courutine&#32;connected&#32;to&#32;the&#32;slider,&#32;we&#32;have&#32;the&#32;winner,&#32;we&#32;have&#32;the&#32;index&#32;of&#32;the&#32;winner&#32;too</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="comment">//add&#32;a&#32;coutine&#32;to&#32;the</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00044"/>00044 
<anchor xml:id="__end_of_battle_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Object&#32;references&quot;</emphasis>)]
<anchor xml:id="__end_of_battle_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;RectTransform&#32;m_LeftSlidingPanel;
<anchor xml:id="__end_of_battle_8cs_source_1l00047"/>00047 
<anchor xml:id="__end_of_battle_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;RectTransform&#32;m_RightSlidingPanel;
<anchor xml:id="__end_of_battle_8cs_source_1l00049"/>00049 
<anchor xml:id="__end_of_battle_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="comment">//[SerializeField]&#32;private&#32;RectTransform&#32;m_XpBar;</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;RectTransform&#32;m_PlayerBlobert;
<anchor xml:id="__end_of_battle_8cs_source_1l00052"/>00052 
<anchor xml:id="__end_of_battle_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;RectTransform&#32;m_EnemyBlobert;
<anchor xml:id="__end_of_battle_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;BattlePageFullLengthComponent&#32;m_BattlePageFullLengthComponent;
<anchor xml:id="__end_of_battle_8cs_source_1l00055"/>00055 
<anchor xml:id="__end_of_battle_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Buttons&quot;</emphasis>)]
<anchor xml:id="__end_of_battle_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="comment">//[SerializeField]&#32;private&#32;GameObject&#32;m_RematchButton;</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00058"/>00058 
<anchor xml:id="__end_of_battle_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;GameObject&#32;m_BackButton;
<anchor xml:id="__end_of_battle_8cs_source_1l00060"/>00060 
<anchor xml:id="__end_of_battle_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Text&#32;elements&quot;</emphasis>)]
<anchor xml:id="__end_of_battle_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;TMP_Text&#32;m_VictoryText;
<anchor xml:id="__end_of_battle_8cs_source_1l00063"/>00063 
<anchor xml:id="__end_of_battle_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="comment">//[SerializeField]&#32;private&#32;TMP_Text&#32;m_StatsText;</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="comment">//[SerializeField]&#32;private&#32;TMP_Text&#32;m_LevelText;</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;TMP_Text&#32;m_ShareText;
<anchor xml:id="__end_of_battle_8cs_source_1l00067"/>00067 
<anchor xml:id="__end_of_battle_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Left&#32;Panel&#32;Colours&quot;</emphasis>)]
<anchor xml:id="__end_of_battle_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;Color&#32;m_PlayerWin;
<anchor xml:id="__end_of_battle_8cs_source_1l00070"/>00070 
<anchor xml:id="__end_of_battle_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;Color&#32;m_PlayerLost;
<anchor xml:id="__end_of_battle_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;Color&#32;m_AmmaPlayerWin;
<anchor xml:id="__end_of_battle_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;Color&#32;m_AmmaPlayerLost;
<anchor xml:id="__end_of_battle_8cs_source_1l00074"/>00074 
<anchor xml:id="__end_of_battle_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Text&#32;Materials&quot;</emphasis>)]
<anchor xml:id="__end_of_battle_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;Material&#32;m_WinTextMaterial;
<anchor xml:id="__end_of_battle_8cs_source_1l00077"/>00077 
<anchor xml:id="__end_of_battle_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;Material&#32;m_LoseTextMaterial;
<anchor xml:id="__end_of_battle_8cs_source_1l00079"/>00079 
<anchor xml:id="__end_of_battle_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;DEBUG&quot;</emphasis>)]
<anchor xml:id="__end_of_battle_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;AnimStates&#32;m_AnimationState&#32;=&#32;AnimStates.Start;
<anchor xml:id="__end_of_battle_8cs_source_1l00082"/>00082 
<anchor xml:id="__end_of_battle_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>&#32;m_Outcome&#32;=&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>.None;
<anchor xml:id="__end_of_battle_8cs_source_1l00084"/>00084 
<anchor xml:id="__end_of_battle_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;private&#32;XpBar&#32;m_XpBarScript;</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00086"/>00086 
<anchor xml:id="__end_of_battle_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Color&#32;m_BlueColour&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(0.16f,&#32;0.32f,&#32;0.6f,&#32;0.65f);
<anchor xml:id="__end_of_battle_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Color&#32;m_RedColour&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(0.6f,&#32;0.16f,&#32;0.17f,&#32;0.65f);
<anchor xml:id="__end_of_battle_8cs_source_1l00089"/>00089 
<anchor xml:id="__end_of_battle_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3&#32;m_LeftPanelOriginPos;
<anchor xml:id="__end_of_battle_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3&#32;m_RightPanelOriginPos;
<anchor xml:id="__end_of_battle_8cs_source_1l00092"/>00092 
<anchor xml:id="__end_of_battle_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3&#32;m_rightPanelDest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(-325.0f,&#32;-261.0f,&#32;0.0f);
<anchor xml:id="__end_of_battle_8cs_source_1l00094"/>00094 
<anchor xml:id="__end_of_battle_8cs_source_1l00095"/><link linkend="_class_end_of_battle_1a619d50ffaac4d3ad86cd1b08fe75b089">00095</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&lt;bool&gt;&#32;<link linkend="_class_end_of_battle_1a619d50ffaac4d3ad86cd1b08fe75b089">OnXpBarDone</link>;
<anchor xml:id="__end_of_battle_8cs_source_1l00096"/>00096 
<anchor xml:id="__end_of_battle_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_IsDesktopUi&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__end_of_battle_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_IsBlobArenaTheme&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__end_of_battle_8cs_source_1l00099"/>00099 
<anchor xml:id="__end_of_battle_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_battle_page_controller">BattlePageController</link>&#32;m_BattlePageController;
<anchor xml:id="__end_of_battle_8cs_source_1l00101"/>00101 
<anchor xml:id="__end_of_battle_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()
<anchor xml:id="__end_of_battle_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_LeftPanelOriginPos&#32;=&#32;m_LeftSlidingPanel.localPosition;
<anchor xml:id="__end_of_battle_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_RightPanelOriginPos&#32;=&#32;m_RightSlidingPanel.localPosition;
<anchor xml:id="__end_of_battle_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//m_XpBarScript&#32;=&#32;GetComponentInChildren&lt;XpBar&gt;(true);</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_end_of_battle_1a619d50ffaac4d3ad86cd1b08fe75b089">OnXpBarDone</link>&#32;+=&#32;OnXpBarFinished;
<anchor xml:id="__end_of_battle_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_IsDesktopUi&#32;=&#32;LocalDataModel.IsDesktopUi();
<anchor xml:id="__end_of_battle_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_IsBlobArenaTheme&#32;=&#32;(LocalDataModel.GameTheme&#32;==&#32;LocalDataModel.GameEvent.Normal);
<anchor xml:id="__end_of_battle_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00111"/>00111 
<anchor xml:id="__end_of_battle_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable()
<anchor xml:id="__end_of_battle_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_IsBlobArenaTheme&#32;=&#32;(LocalDataModel.GameTheme&#32;==&#32;LocalDataModel.GameEvent.Normal);
<anchor xml:id="__end_of_battle_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_BattlePageController.OnBattleStateChanged&#32;+=&#32;OnEndOfBattle;
<anchor xml:id="__end_of_battle_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00117"/>00117 
<anchor xml:id="__end_of_battle_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDisable()
<anchor xml:id="__end_of_battle_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StopAllCoroutines();
<anchor xml:id="__end_of_battle_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ResetAnimation();
<anchor xml:id="__end_of_battle_8cs_source_1l00122"/>00122 
<anchor xml:id="__end_of_battle_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_BattlePageController.OnBattleStateChanged&#32;-=&#32;OnEndOfBattle;
<anchor xml:id="__end_of_battle_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00125"/>00125 
<anchor xml:id="__end_of_battle_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEndOfBattle(<link linkend="_class_battle_page_controller">BattlePageController</link>.<link linkend="_class_battle_page_controller_1a695ddcf171d92e7a5d18473aa9bb4b5a">BattleState</link>&#32;state)
<anchor xml:id="__end_of_battle_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(state&#32;==&#32;<link linkend="_class_battle_page_controller">BattlePageController</link>.<link linkend="_class_battle_page_controller_1a695ddcf171d92e7a5d18473aa9bb4b5a">BattleState</link>.EndOfBattle)
<anchor xml:id="__end_of_battle_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ToggleTopButtons(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00131"/>00131 
<anchor xml:id="__end_of_battle_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;winner&#32;=&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1a67e2cd0fe1c646eae908ddf93a739691">GetBattleOutcome</link>();
<anchor xml:id="__end_of_battle_8cs_source_1l00133"/>00133 
<anchor xml:id="__end_of_battle_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(winner&#32;!=&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>.None)
<anchor xml:id="__end_of_battle_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Outcome&#32;=&#32;winner;
<anchor xml:id="__end_of_battle_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Outcome&#32;=&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>.PlayerWon;
<anchor xml:id="__end_of_battle_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00142"/>00142 
<anchor xml:id="__end_of_battle_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BeginEndOfBattleSequence();
<anchor xml:id="__end_of_battle_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00146"/>00146 
<anchor xml:id="__end_of_battle_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;BeginEndOfBattleSequence()
<anchor xml:id="__end_of_battle_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.SetSiblingIndex(1&#32;-&#32;(<emphasis role="keywordtype">int</emphasis>)m_Outcome);
<anchor xml:id="__end_of_battle_8cs_source_1l00150"/>00150 
<anchor xml:id="__end_of_battle_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_Outcome&#32;==&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>.PlayerLost)
<anchor xml:id="__end_of_battle_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_LeftSlidingPanel.gameObject.GetComponent&lt;Image&gt;().color&#32;=&#32;m_IsBlobArenaTheme&#32;?&#32;m_PlayerLost&#32;:&#32;m_AmmaPlayerLost;
<anchor xml:id="__end_of_battle_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_RightSlidingPanel.gameObject.GetComponent&lt;Image&gt;().color&#32;=&#32;m_IsBlobArenaTheme&#32;?&#32;m_RedColour&#32;:&#32;m_BlueColour;
<anchor xml:id="__end_of_battle_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_VictoryText.fontSharedMaterial&#32;=&#32;m_LoseTextMaterial;
<anchor xml:id="__end_of_battle_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_Outcome&#32;==&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>.PlayerWon)
<anchor xml:id="__end_of_battle_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_LeftSlidingPanel.gameObject.GetComponent&lt;Image&gt;().color&#32;=&#32;m_IsBlobArenaTheme&#32;?&#32;m_PlayerWin&#32;:&#32;m_AmmaPlayerWin;
<anchor xml:id="__end_of_battle_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00161"/>00161 
<anchor xml:id="__end_of_battle_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_VictoryText.SetText((m_Outcome&#32;==&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>.PlayerWon)&#32;?&#32;<emphasis role="stringliteral">&quot;LFG&#32;BLOB!&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;OH&#32;BLOB!&quot;</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00163"/>00163 
<anchor xml:id="__end_of_battle_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(PlayAnimation());
<anchor xml:id="__end_of_battle_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00166"/>00166 
<anchor xml:id="__end_of_battle_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnXpBarFinished(<emphasis role="keywordtype">bool</emphasis>&#32;levelUp)
<anchor xml:id="__end_of_battle_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//m_AnimationState&#32;=&#32;AnimStates.XP_Bar;</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00170"/>00170 
<anchor xml:id="__end_of_battle_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(levelUp)</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;currentLevel&#32;=&#32;int.Parse(m_LevelText.text[4..]);</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;m_LevelText.SetText($&quot;Lv.&#32;{currentLevel&#32;+&#32;1}&quot;);</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00177"/>00177 
<anchor xml:id="__end_of_battle_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SliderAnimations()
<anchor xml:id="__end_of_battle_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LeanTween.move(m_LeftSlidingPanel,&#32;Vector3.zero,&#32;1.0f)
<anchor xml:id="__end_of_battle_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.setEaseOutSine()
<anchor xml:id="__end_of_battle_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.setOnComplete(()&#32;=&gt;&#32;m_AnimationState&#32;=&#32;AnimStates.Sliders);
<anchor xml:id="__end_of_battle_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LeanTween.move(m_RightSlidingPanel,&#32;m_rightPanelDest,&#32;1.0f);
<anchor xml:id="__end_of_battle_8cs_source_1l00184"/>00184 
<anchor xml:id="__end_of_battle_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_Outcome&#32;==&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>.PlayerWon)
<anchor xml:id="__end_of_battle_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LeanTween.alpha(m_EnemyBlobert,&#32;0.6f,&#32;1.0f);
<anchor xml:id="__end_of_battle_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LeanTween.alpha(m_PlayerBlobert,&#32;0.6f,&#32;1.0f);
<anchor xml:id="__end_of_battle_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00194"/>00194 
<anchor xml:id="__end_of_battle_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SlideLeft()
<anchor xml:id="__end_of_battle_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;deltaMove&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(-430.0f,&#32;0.0f,&#32;0.0f);
<anchor xml:id="__end_of_battle_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LeanTween.move(m_LeftSlidingPanel,&#32;deltaMove,&#32;1.5f)
<anchor xml:id="__end_of_battle_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.setEaseOutSine()
<anchor xml:id="__end_of_battle_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.setOnComplete(()&#32;=&gt;&#32;m_AnimationState&#32;=&#32;AnimStates.VictoryText);
<anchor xml:id="__end_of_battle_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LeanTween.move(m_PlayerBlobert,&#32;m_PlayerBlobert.localPosition&#32;+&#32;deltaMove,&#32;1.5f)
<anchor xml:id="__end_of_battle_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.setEaseOutSine();
<anchor xml:id="__end_of_battle_8cs_source_1l00203"/>00203 
<anchor xml:id="__end_of_battle_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LeanTween.move(m_EnemyBlobert,&#32;m_EnemyBlobert.localPosition&#32;-&#32;deltaMove&#32;*&#32;(!m_IsDesktopUi&#32;?&#32;1.0f&#32;:&#32;0.1f),&#32;1.5f);
<anchor xml:id="__end_of_battle_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00206"/>00206 
<anchor xml:id="__end_of_battle_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;PlayAnimation()
<anchor xml:id="__end_of_battle_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WaitForSeconds&#32;waitQuarterSecond&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(0.25f);
<anchor xml:id="__end_of_battle_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WaitForSeconds&#32;waitLong&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(1.5f);
<anchor xml:id="__end_of_battle_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;waitLong;
<anchor xml:id="__end_of_battle_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(OutcomeExplanation());
<anchor xml:id="__end_of_battle_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitUntil(()&#32;=&gt;&#32;m_AnimationState&#32;==&#32;AnimStates.OutcomeExplenation);
<anchor xml:id="__end_of_battle_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1a634b7a86a2182c86a19c0fe577a30cad">ToggleBattleUi</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SliderAnimations();
<anchor xml:id="__end_of_battle_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitUntil(()&#32;=&gt;&#32;m_AnimationState&#32;==&#32;AnimStates.Sliders);
<anchor xml:id="__end_of_battle_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetAnimation(m_Outcome);
<anchor xml:id="__end_of_battle_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(0.5f);
<anchor xml:id="__end_of_battle_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_VictoryText.gameObject.SetActive(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;waitLong;
<anchor xml:id="__end_of_battle_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SlideLeft();
<anchor xml:id="__end_of_battle_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitUntil(()&#32;=&gt;&#32;m_AnimationState&#32;==&#32;AnimStates.VictoryText);
<anchor xml:id="__end_of_battle_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_VictoryText.gameObject.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;waitQuarterSecond;
<anchor xml:id="__end_of_battle_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;waitQuarterSecond;
<anchor xml:id="__end_of_battle_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//m_StatsText.gameObject.SetActive(true);</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//yield&#32;return&#32;waitQuarterSecond;</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//m_LevelText.gameObject.SetActive(true);</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//yield&#32;return&#32;waitQuarterSecond;</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//m_XpBar.gameObject.SetActive(true);</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//m_XpBarScript.SetXpBar(50,&#32;10,&#32;100,&#32;OnXpBarDone);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;HAS&#32;SOME&#32;MAGIC&#32;NUMBERS!!!</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//yield&#32;return&#32;new&#32;WaitUntil(()&#32;=&gt;&#32;m_AnimationState&#32;==&#32;AnimStates.XP_Bar);</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//m_RematchButton.SetActive(true);</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_BackButton.SetActive(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_ShareText.gameObject.SetActive(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_AnimationState&#32;=&#32;AnimStates.Complete;
<anchor xml:id="__end_of_battle_8cs_source_1l00237"/>00237 
<anchor xml:id="__end_of_battle_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//yield&#32;return&#32;new&#32;WaitForSeconds(1.5f);</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//ResetAnimation();</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00241"/>00241 
<anchor xml:id="__end_of_battle_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;async&#32;Task&lt;string&gt;&#32;EndOfBattleOutcomeString()
<anchor xml:id="__end_of_battle_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;healthOfPlayer&#32;=&#32;await&#32;CombatantDataModel.ManualQueryCombatantState(m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[0].<link linkend="_class_battle_page_card_stats_component_1a461dd820074d8b43db410c8c577c05d2">combatantId</link>);
<anchor xml:id="__end_of_battle_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;healthOfEnemy&#32;=&#32;await&#32;CombatantDataModel.ManualQueryCombatantState(m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[1].<link linkend="_class_battle_page_card_stats_component_1a461dd820074d8b43db410c8c577c05d2">combatantId</link>);
<anchor xml:id="__end_of_battle_8cs_source_1l00246"/>00246 
<anchor xml:id="__end_of_battle_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(healthOfEnemy.health&#32;&gt;&#32;0&#32;&amp;&amp;&#32;healthOfPlayer.health&#32;&gt;&#32;0)
<anchor xml:id="__end_of_battle_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_Outcome&#32;==&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>.PlayerWon)
<anchor xml:id="__end_of_battle_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;ENEMY&#32;FORFEIT&quot;</emphasis>;
<anchor xml:id="__end_of_battle_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00254"/>00254 
<anchor xml:id="__end_of_battle_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;PLAYER&#32;FORFEIT&quot;</emphasis>;
<anchor xml:id="__end_of_battle_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00257"/>00257 
<anchor xml:id="__end_of_battle_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;the&#32;appropriate&#32;combatant&#32;ID&#32;based&#32;on&#32;the&#32;outcome</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;combatantId&#32;=&#32;m_Outcome&#32;==&#32;Outcomes.PlayerLost
<anchor xml:id="__end_of_battle_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[1].<link linkend="_class_battle_page_card_stats_component_1a461dd820074d8b43db410c8c577c05d2">combatantId</link>
<anchor xml:id="__end_of_battle_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[0].<link linkend="_class_battle_page_card_stats_component_1a461dd820074d8b43db410c8c577c05d2">combatantId</link>;
<anchor xml:id="__end_of_battle_8cs_source_1l00264"/>00264 
<anchor xml:id="__end_of_battle_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Query&#32;the&#32;round&#32;number</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;roundNumberAwait&#32;=&#32;await&#32;AttackResult.GetAttackAndDamageResults(combatantId,&#32;(<emphasis role="keywordtype">int</emphasis>)m_BattlePageController.<link linkend="_class_battle_page_controller_1a8e563b2a3fce55c2f687257cab728544">RoundNumber</link>);
<anchor xml:id="__end_of_battle_8cs_source_1l00267"/>00267 
<anchor xml:id="__end_of_battle_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;the&#32;outcome&#32;string</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StringBuilder&#32;resultString&#32;=&#32;<emphasis role="keyword">new</emphasis>();
<anchor xml:id="__end_of_battle_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resultString.Append($<emphasis role="stringliteral">&quot;LAST&#32;ATTACK&#32;WAS&#32;{WorldDataModel.AllAttacksDict[new&#32;FieldElement(roundNumberAwait.ItemId).Hex()].dojoName}&quot;</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resultString.Append($<emphasis role="stringliteral">&quot;&#32;DEALING&#32;{roundNumberAwait.Damage}&#32;DAMAGE.&quot;</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resultString.Append(m_Outcome&#32;==&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>.PlayerWon&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;YOUR&#32;OPPONENT&#32;HAS&#32;BEEN&#32;DEFEATED!&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&#32;YOU&#32;HAVE&#32;BEEN&#32;DEFEATED!&quot;</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;resultString.ToString().ToUpper();
<anchor xml:id="__end_of_battle_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(Exception&#32;ex)
<anchor xml:id="__end_of_battle_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Log&#32;the&#32;error&#32;or&#32;handle&#32;it&#32;as&#32;necessary</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Console.WriteLine($<emphasis role="stringliteral">&quot;Error&#32;while&#32;calculating&#32;battle&#32;outcome:&#32;{ex.Message}&quot;</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Error&quot;</emphasis>;&#32;<emphasis role="comment">//&#32;Return&#32;&quot;Error&quot;&#32;in&#32;case&#32;of&#32;any&#32;exceptions</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00282"/>00282 
<anchor xml:id="__end_of_battle_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;OutcomeExplanation()
<anchor xml:id="__end_of_battle_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_slider_animator_component">SliderAnimatorComponent</link>&#32;slider&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__end_of_battle_8cs_source_1l00286"/>00286 
<anchor xml:id="__end_of_battle_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;task&#32;=&#32;EndOfBattleOutcomeString();
<anchor xml:id="__end_of_battle_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!task.IsCompleted)
<anchor xml:id="__end_of_battle_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__end_of_battle_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00292"/>00292 
<anchor xml:id="__end_of_battle_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;resultEndOfBattle&#32;=&#32;task.Result;&#32;<emphasis role="comment">//&#32;Use&#32;the&#32;result&#32;as&#32;needed</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00294"/>00294 
<anchor xml:id="__end_of_battle_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;it&#32;to&#32;wait//get&#32;the&#32;name&#32;of&#32;the&#32;attack</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_BattlePageFullLengthComponent.GetTypewriter().SetTextToType(resultEndOfBattle,
<anchor xml:id="__end_of_battle_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;&#32;m_BattlePageFullLengthComponent.GetTypewriter().StartWaitingTextAnimation());
<anchor xml:id="__end_of_battle_8cs_source_1l00298"/>00298 
<anchor xml:id="__end_of_battle_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitUntil(()&#32;=&gt;&#32;m_BattlePageFullLengthComponent.GetTypewriter().IsTyping()&#32;==&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(4f);
<anchor xml:id="__end_of_battle_8cs_source_1l00301"/>00301 
<anchor xml:id="__end_of_battle_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_Outcome&#32;==&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>.PlayerWon)
<anchor xml:id="__end_of_battle_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[1].<link linkend="_class_battle_page_card_stats_component_1a077e6d1acd2f7124c89f6bd2d7b93d8d">HealthSlider</link>.<link linkend="_class_slider_animator_component_1af0b24bfb95a19af7b49f56371c02fef6">SetValue</link>(0,&#32;1f);&#32;<emphasis role="comment">//&#32;Starting&#32;the&#32;animation</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slider&#32;=&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[1].<link linkend="_class_battle_page_card_stats_component_1a077e6d1acd2f7124c89f6bd2d7b93d8d">HealthSlider</link>;
<anchor xml:id="__end_of_battle_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[0].<link linkend="_class_battle_page_card_stats_component_1a077e6d1acd2f7124c89f6bd2d7b93d8d">HealthSlider</link>.<link linkend="_class_slider_animator_component_1af0b24bfb95a19af7b49f56371c02fef6">SetValue</link>(0,&#32;1f);&#32;<emphasis role="comment">//&#32;Starting&#32;the&#32;animation</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slider&#32;=&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[0].<link linkend="_class_battle_page_card_stats_component_1a077e6d1acd2f7124c89f6bd2d7b93d8d">HealthSlider</link>;
<anchor xml:id="__end_of_battle_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00312"/>00312 
<anchor xml:id="__end_of_battle_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitUntil(()&#32;=&gt;&#32;slider.<link linkend="_class_slider_animator_component_1a69a43ca0cbd7b2e5512aac7091b3382a">isAnimating</link>&#32;==&#32;<emphasis role="keyword">false</emphasis>);&#32;<emphasis role="comment">//&#32;Once&#32;it&#32;has&#32;finished&#32;animation,&#32;show&#32;the&#32;outcome</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00314"/>00314 
<anchor xml:id="__end_of_battle_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(0.5f);
<anchor xml:id="__end_of_battle_8cs_source_1l00316"/>00316 
<anchor xml:id="__end_of_battle_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_AnimationState&#32;=&#32;AnimStates.OutcomeExplenation;
<anchor xml:id="__end_of_battle_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00319"/>00319 
<anchor xml:id="__end_of_battle_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ResetAnimation()
<anchor xml:id="__end_of_battle_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_LeftSlidingPanel.localPosition&#32;=&#32;m_LeftPanelOriginPos;
<anchor xml:id="__end_of_battle_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_RightSlidingPanel.localPosition&#32;=&#32;m_RightPanelOriginPos;
<anchor xml:id="__end_of_battle_8cs_source_1l00324"/>00324 
<anchor xml:id="__end_of_battle_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ToggleTopButtons(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//m_XpBar.gameObject.SetActive(false);</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//m_RematchButton.SetActive(false);</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_BackButton.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_VictoryText.gameObject.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//m_StatsText.gameObject.SetActive(false);</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//m_LevelText.gameObject.SetActive(false);</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_ShareText.gameObject.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_AnimationState&#32;=&#32;AnimStates.Start;
<anchor xml:id="__end_of_battle_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Outcome&#32;=&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>.None;
<anchor xml:id="__end_of_battle_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00336"/>00336 
<anchor xml:id="__end_of_battle_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ToggleTopButtons(<emphasis role="keywordtype">bool</emphasis>&#32;state)
<anchor xml:id="__end_of_battle_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_top_bar_button_component">TopBarButtonComponent</link>.<link linkend="_class_top_bar_button_component_1a094e6d6ccc05451ef6d34432957d83e7">Instance</link>.gameObject.SetActive(state);
<anchor xml:id="__end_of_battle_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00341"/>00341 
<anchor xml:id="__end_of_battle_8cs_source_1l00342"/><link linkend="_class_end_of_battle_1a92cc1551ce8ee898383db5ec4c8cf1b4">00342</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;async&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_end_of_battle_1a92cc1551ce8ee898383db5ec4c8cf1b4">CreateInvitation</link>()
<anchor xml:id="__end_of_battle_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;blobertToken&#32;=&#32;await&#32;CombatantDataModel.ManualQueryTokenIdFromCombatant(m_BattlePageController.<link linkend="_class_battle_page_controller_1a9d9a259166d59ea2df8d8514d3ac24b4">CombatantIds</link>[1]);
<anchor xml:id="__end_of_battle_8cs_source_1l00345"/>00345 
<anchor xml:id="__end_of_battle_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;inviteStruct&#32;=&#32;PvpActionsContract.SendInvite(
<anchor xml:id="__end_of_battle_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WorldDataModel.AllPlayableCharactersInTheGame[blobertToken.Hex()].GetOwner(),
<anchor xml:id="__end_of_battle_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DojoEntitiesStorage.worldManagerData.arcadeBlobertActions,
<anchor xml:id="__end_of_battle_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>(LocalDataModel.ChoosenBlobert),
<anchor xml:id="__end_of_battle_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WorldDataModel.GenerateAttackStructFromCharacter(<emphasis role="keyword">new</emphasis>&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>(LocalDataModel.ChoosenBlobert)),
<anchor xml:id="__end_of_battle_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;60,
<anchor xml:id="__end_of_battle_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DojoEntitiesStorage.worldManagerData.pvpActions
<anchor xml:id="__end_of_battle_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__end_of_battle_8cs_source_1l00354"/>00354 
<anchor xml:id="__end_of_battle_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DojoContractCommunication.AddToCallsList(inviteStruct,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00356"/>00356 
<anchor xml:id="__end_of_battle_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;transaction&#32;=&#32;await&#32;DojoContractCommunication.InvokeContract(gameObject.name,&#32;<emphasis role="stringliteral">&quot;OnChainCallbackSendInvite&quot;</emphasis>,&#32;account:&#32;LocalDataModel.CurrentAccount);
<anchor xml:id="__end_of_battle_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00359"/>00359 
<anchor xml:id="__end_of_battle_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetAnimation(<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>&#32;outcome)
<anchor xml:id="__end_of_battle_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!m_IsBlobArenaTheme)
<anchor xml:id="__end_of_battle_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(outcome&#32;==&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>.PlayerLost)
<anchor xml:id="__end_of_battle_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[0].<link linkend="_class_battle_page_card_stats_component_1a2cb9c16750b08f4188a8db149bcef152">GetTraitVisualizer</link>().<link linkend="_class_character_animation_manager_1af9dd90ae74e9b88e6086942ac5ab6e92">DrawAndFinish</link>(<emphasis role="keyword">new</emphasis>&#32;List&lt;CharacterAnimationManager.TextureFunctionInput&gt;()
<anchor xml:id="__end_of_battle_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1ac46bf878ba0436c64bd96df5ccc14269">GetTextureFunctionInput</link>(
<anchor xml:id="__end_of_battle_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_a_m_m_a_blobert">AMMABlobert</link>.<link linkend="_class_a_m_m_a_blobert_1a54ed22adbc91fed044712d858cd9c32a">GetFighterIdFromCustomValue</link>(&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[0].<link linkend="_class_battle_page_card_stats_component_1ae3343a707e4521d379c1f40c829d0f66">BlobData</link>.GetInstance&lt;ArcadeBlobert&gt;().custom_id),&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1a5d8419d845d6afd9e99849ddeef7c454">AMMAAnimationState</link>.LoosingRWB)
<anchor xml:id="__end_of_battle_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[1].<link linkend="_class_battle_page_card_stats_component_1a2cb9c16750b08f4188a8db149bcef152">GetTraitVisualizer</link>().<link linkend="_class_character_animation_manager_1af9dd90ae74e9b88e6086942ac5ab6e92">DrawAndFinish</link>(<emphasis role="keyword">new</emphasis>&#32;List&lt;CharacterAnimationManager.TextureFunctionInput&gt;()
<anchor xml:id="__end_of_battle_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1ac46bf878ba0436c64bd96df5ccc14269">GetTextureFunctionInput</link>(
<anchor xml:id="__end_of_battle_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_a_m_m_a_blobert">AMMABlobert</link>.<link linkend="_class_a_m_m_a_blobert_1a54ed22adbc91fed044712d858cd9c32a">GetFighterIdFromCustomValue</link>(&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[1].<link linkend="_class_battle_page_card_stats_component_1ae3343a707e4521d379c1f40c829d0f66">BlobData</link>.GetInstance&lt;ArcadeBlobert&gt;().custom_id),&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1a5d8419d845d6afd9e99849ddeef7c454">AMMAAnimationState</link>.WinningL)
<anchor xml:id="__end_of_battle_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[0].<link linkend="_class_battle_page_card_stats_component_1a2cb9c16750b08f4188a8db149bcef152">GetTraitVisualizer</link>().<link linkend="_class_character_animation_manager_1af9dd90ae74e9b88e6086942ac5ab6e92">DrawAndFinish</link>(<emphasis role="keyword">new</emphasis>&#32;List&lt;CharacterAnimationManager.TextureFunctionInput&gt;()
<anchor xml:id="__end_of_battle_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1ac46bf878ba0436c64bd96df5ccc14269">GetTextureFunctionInput</link>(
<anchor xml:id="__end_of_battle_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_a_m_m_a_blobert">AMMABlobert</link>.<link linkend="_class_a_m_m_a_blobert_1a54ed22adbc91fed044712d858cd9c32a">GetFighterIdFromCustomValue</link>(&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[0].<link linkend="_class_battle_page_card_stats_component_1ae3343a707e4521d379c1f40c829d0f66">BlobData</link>.GetInstance&lt;ArcadeBlobert&gt;().custom_id),&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1a5d8419d845d6afd9e99849ddeef7c454">AMMAAnimationState</link>.WinningR)
<anchor xml:id="__end_of_battle_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[1].<link linkend="_class_battle_page_card_stats_component_1a2cb9c16750b08f4188a8db149bcef152">GetTraitVisualizer</link>().<link linkend="_class_character_animation_manager_1af9dd90ae74e9b88e6086942ac5ab6e92">DrawAndFinish</link>(<emphasis role="keyword">new</emphasis>&#32;List&lt;CharacterAnimationManager.TextureFunctionInput&gt;()
<anchor xml:id="__end_of_battle_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1ac46bf878ba0436c64bd96df5ccc14269">GetTextureFunctionInput</link>(
<anchor xml:id="__end_of_battle_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_a_m_m_a_blobert">AMMABlobert</link>.<link linkend="_class_a_m_m_a_blobert_1a54ed22adbc91fed044712d858cd9c32a">GetFighterIdFromCustomValue</link>(&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[1].<link linkend="_class_battle_page_card_stats_component_1ae3343a707e4521d379c1f40c829d0f66">BlobData</link>.GetInstance&lt;ArcadeBlobert&gt;().custom_id),&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1a5d8419d845d6afd9e99849ddeef7c454">AMMAAnimationState</link>.LoosingLWB)
<anchor xml:id="__end_of_battle_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(outcome&#32;==&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>.PlayerLost)
<anchor xml:id="__end_of_battle_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[0].<link linkend="_class_battle_page_card_stats_component_1a2cb9c16750b08f4188a8db149bcef152">GetTraitVisualizer</link>().<link linkend="_class_character_animation_manager_1af9dd90ae74e9b88e6086942ac5ab6e92">DrawAndFinish</link>(
<anchor xml:id="__end_of_battle_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BlobertAnimationController.GetTextureFunctionInput(m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[0].<link linkend="_class_battle_page_card_stats_component_1ae3343a707e4521d379c1f40c829d0f66">BlobData</link>.<link linkend="_interface_i_nft_type_1abe085c5479f08c0ab55bad8027cda365">GetTokenTrait</link>(),
<anchor xml:id="__end_of_battle_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;BlobertAnimationController.AnimationDataTraitBlobert(BlobertAnimationController.AnimationDirection.Front,
<anchor xml:id="__end_of_battle_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BlobertAnimationController.AnimationFace.Right,&#32;BlobertAnimationController.AnimationState.Idle1,&#32;BlobertAnimationController.BehaviourState.Mad)),&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00399"/>00399 
<anchor xml:id="__end_of_battle_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[1].<link linkend="_class_battle_page_card_stats_component_1a2cb9c16750b08f4188a8db149bcef152">GetTraitVisualizer</link>().<link linkend="_class_character_animation_manager_1af9dd90ae74e9b88e6086942ac5ab6e92">DrawAndFinish</link>(BlobertAnimationController.GetTextureFunctionInput(m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[1].<link linkend="_class_battle_page_card_stats_component_1ae3343a707e4521d379c1f40c829d0f66">BlobData</link>.<link linkend="_interface_i_nft_type_1abe085c5479f08c0ab55bad8027cda365">GetTokenTrait</link>(),&#32;<emphasis role="keyword">new</emphasis>&#32;BlobertAnimationController.AnimationDataTraitBlobert(BlobertAnimationController.AnimationDirection.Front,&#32;BlobertAnimationController.AnimationFace.Left,&#32;BlobertAnimationController.AnimationState.Idle1,&#32;BlobertAnimationController.BehaviourState.Happy)),&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[0].<link linkend="_class_battle_page_card_stats_component_1a2cb9c16750b08f4188a8db149bcef152">GetTraitVisualizer</link>().<link linkend="_class_character_animation_manager_1af9dd90ae74e9b88e6086942ac5ab6e92">DrawAndFinish</link>(BlobertAnimationController.GetTextureFunctionInput(m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[0].<link linkend="_class_battle_page_card_stats_component_1ae3343a707e4521d379c1f40c829d0f66">BlobData</link>.<link linkend="_interface_i_nft_type_1abe085c5479f08c0ab55bad8027cda365">GetTokenTrait</link>(),
<anchor xml:id="__end_of_battle_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;BlobertAnimationController.AnimationDataTraitBlobert(BlobertAnimationController.AnimationDirection.Front,&#32;BlobertAnimationController.AnimationFace.Right,&#32;BlobertAnimationController.AnimationState.Idle1,&#32;BlobertAnimationController.BehaviourState.Happy)),
<anchor xml:id="__end_of_battle_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00407"/>00407 
<anchor xml:id="__end_of_battle_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[1].<link linkend="_class_battle_page_card_stats_component_1a2cb9c16750b08f4188a8db149bcef152">GetTraitVisualizer</link>().<link linkend="_class_character_animation_manager_1af9dd90ae74e9b88e6086942ac5ab6e92">DrawAndFinish</link>(BlobertAnimationController.GetTextureFunctionInput(m_BattlePageController.<link linkend="_class_battle_page_controller_1ab6dec8d771a45995831b49793788c67a">StatsComponents</link>[1].<link linkend="_class_battle_page_card_stats_component_1ae3343a707e4521d379c1f40c829d0f66">BlobData</link>.<link linkend="_interface_i_nft_type_1abe085c5479f08c0ab55bad8027cda365">GetTokenTrait</link>(),
<anchor xml:id="__end_of_battle_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;BlobertAnimationController.AnimationDataTraitBlobert(BlobertAnimationController.AnimationDirection.Front,&#32;BlobertAnimationController.AnimationFace.Left,&#32;BlobertAnimationController.AnimationState.Idle1,&#32;BlobertAnimationController.BehaviourState.Mad)),
<anchor xml:id="__end_of_battle_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__end_of_battle_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00414"/>00414 
<anchor xml:id="__end_of_battle_8cs_source_1l00415"/><link linkend="_class_end_of_battle_1ae2edfd53803669825a74230a45ae9ffe">00415</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_end_of_battle_1ae2edfd53803669825a74230a45ae9ffe">OnChainCallbackSendInvite</link>(<emphasis role="keywordtype">string</emphasis>&#32;transactionHash)
<anchor xml:id="__end_of_battle_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(transactionHash&#32;==&#32;<emphasis role="stringliteral">&quot;User&#32;abort&quot;</emphasis>&#32;||&#32;transactionHash&#32;==&#32;<emphasis role="stringliteral">&quot;Execute&#32;failed&quot;</emphasis>)
<anchor xml:id="__end_of_battle_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__end_of_battle_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00422"/>00422 
<anchor xml:id="__end_of_battle_8cs_source_1l00423"/><link linkend="_class_end_of_battle_1a27355845ea769716816ef1df151869b7">00423</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_end_of_battle_1a27355845ea769716816ef1df151869b7">MakeTweet</link>()
<anchor xml:id="__end_of_battle_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_Outcome&#32;==&#32;<link linkend="_class_end_of_battle_1a167a2da36a29a75fd86d917af1cc7014">Outcomes</link>.PlayerWon)
<anchor xml:id="__end_of_battle_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;tweetUrl&#32;=&#32;$<emphasis role="stringliteral">&quot;https://twitter.com/intent/tweet?text={Uri.EscapeDataString(&quot;</emphasis>just&#32;won&#32;my&#32;amazing&#32;fight&#32;on&#32;Blob&#32;arena,&#32;come&#32;join&#32;me&#32;on&#32;https:<emphasis role="comment">//blobarena.xyz/&quot;)}&quot;;</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Application.OpenURL(tweetUrl);
<anchor xml:id="__end_of_battle_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__end_of_battle_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;tweetUrl&#32;=&#32;$<emphasis role="stringliteral">&quot;https://twitter.com/intent/tweet?text={Uri.EscapeDataString(&quot;</emphasis>Damn&#32;i&#32;got&#32;destroyed&#32;on&#32;https:<emphasis role="comment">//blobarena.xyz/&#32;come&#32;join&#32;me&quot;)}&quot;;</emphasis>
<anchor xml:id="__end_of_battle_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Application.OpenURL(tweetUrl);
<anchor xml:id="__end_of_battle_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;}
<anchor xml:id="__end_of_battle_8cs_source_1l00436"/>00436 }
</programlisting></section>
