<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__custom_mesh_polygon_u_i_8cs_source" xml:lang="en-US">
<title>CustomMeshPolygonUI.cs</title>
<indexterm><primary>UI/Components/BlobertData/BlobDexComponents/CustomMeshPolygonUI.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00003"/>00003 
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00004"/>00004 [RequireComponent(typeof(CanvasRenderer),&#32;typeof(RectTransform))]
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00005"/><link linkend="_class_custom_polygon_graph_u_i">00005</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_custom_polygon_graph_u_i">CustomPolygonGraphUI</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00006"/>00006 {
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00007"/><link linkend="_class_custom_polygon_graph_u_i_1ab238aec04604fea32aaba0af6fe03756">00007</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Material&#32;<link linkend="_class_custom_polygon_graph_u_i_1ab238aec04604fea32aaba0af6fe03756">polygonMaterial</link>;
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00008"/><link linkend="_class_custom_polygon_graph_u_i_1a08c7ea1ce7b3006b4f0bc391e8b81582">00008</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_custom_polygon_graph_u_i_1a08c7ea1ce7b3006b4f0bc391e8b81582">radius</link>&#32;=&#32;50f;
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00009"/>00009 
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00010"/><link linkend="_class_custom_polygon_graph_u_i_1ad1889f69b173ecd364c10b7158974526">00010</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_custom_polygon_graph_u_i_1ad1889f69b173ecd364c10b7158974526">InitializeComponent</link>(List&lt;(<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;<emphasis role="keywordtype">int</emphasis>&#32;max)&gt;&#32;stats)
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;{
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stats.Count&#32;&lt;=&#32;3)
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError(<emphasis role="stringliteral">&quot;Polygon&#32;graph&#32;requires&#32;at&#32;least&#32;3&#32;stats&#32;to&#32;display&#32;properly.&quot;</emphasis>);
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00017"/>00017 
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;numberOfSides&#32;=&#32;stats.Count;
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00019"/>00019 
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Mesh&#32;mesh&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Mesh();
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00021"/>00021 
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>[]&#32;normalizedStats&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[numberOfSides];
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;numberOfSides;&#32;i++)
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalizedStats[i]&#32;=&#32;Mathf.Clamp01((<emphasis role="keywordtype">float</emphasis>)stats[i].value&#32;/&#32;stats[i].max);
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00027"/>00027 
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3[]&#32;vertices&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3[numberOfSides&#32;+&#32;1];
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vertices[0]&#32;=&#32;Vector3.zero;
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00030"/>00030 
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;initialAngle&#32;=&#32;Mathf.Deg2Rad&#32;*&#32;90f;
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00032"/>00032 
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;numberOfSides;&#32;i++)
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle&#32;=&#32;initialAngle&#32;-&#32;(Mathf.Deg2Rad&#32;*&#32;(360f&#32;/&#32;numberOfSides&#32;*&#32;i));
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;currentRadius&#32;=&#32;normalizedStats[i]&#32;*&#32;<link linkend="_class_custom_polygon_graph_u_i_1a08c7ea1ce7b3006b4f0bc391e8b81582">radius</link>;
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vertices[i&#32;+&#32;1]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(Mathf.Cos(angle)&#32;*&#32;currentRadius,&#32;Mathf.Sin(angle)&#32;*&#32;currentRadius,&#32;0);
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00039"/>00039 
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;triangles&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[numberOfSides&#32;*&#32;3];
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;numberOfSides;&#32;i++)
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;triangles[i&#32;*&#32;3]&#32;=&#32;0;
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;triangles[i&#32;*&#32;3&#32;+&#32;1]&#32;=&#32;i&#32;+&#32;1;
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;triangles[i&#32;*&#32;3&#32;+&#32;2]&#32;=&#32;(i&#32;+&#32;1)&#32;%&#32;numberOfSides&#32;+&#32;1;
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00047"/>00047 
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mesh.vertices&#32;=&#32;vertices;
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mesh.triangles&#32;=&#32;triangles;
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mesh.RecalculateBounds();
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mesh.RecalculateNormals();
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00052"/>00052 
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2[]&#32;uv&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2[vertices.Length];
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;vertices.Length;&#32;i++)
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uv[i]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(vertices[i].x&#32;/&#32;<link linkend="_class_custom_polygon_graph_u_i_1a08c7ea1ce7b3006b4f0bc391e8b81582">radius</link>&#32;+&#32;0.5f,&#32;vertices[i].y&#32;/&#32;<link linkend="_class_custom_polygon_graph_u_i_1a08c7ea1ce7b3006b4f0bc391e8b81582">radius</link>&#32;+&#32;0.5f);
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mesh.uv&#32;=&#32;uv;
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00059"/>00059 
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CanvasRenderer&#32;canvasRenderer&#32;=&#32;GetComponent&lt;CanvasRenderer&gt;();
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;canvasRenderer.SetMesh(mesh);
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_custom_polygon_graph_u_i_1ab238aec04604fea32aaba0af6fe03756">polygonMaterial</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;canvasRenderer.SetMaterial(<link linkend="_class_custom_polygon_graph_u_i_1ab238aec04604fea32aaba0af6fe03756">polygonMaterial</link>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;}
<anchor xml:id="__custom_mesh_polygon_u_i_8cs_source_1l00067"/>00067 }
</programlisting></section>
