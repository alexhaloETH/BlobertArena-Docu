<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__counter_8cs_source" xml:lang="en-US">
<title>Counter.cs</title>
<indexterm><primary>UI/Components/Counter.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__counter_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;Created&#32;by&#32;Norbert</emphasis>
<anchor xml:id="__counter_8cs_source_1l00002"/>00002 
<anchor xml:id="__counter_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>System.Text;
<anchor xml:id="__counter_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>TMPro;
<anchor xml:id="__counter_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__counter_8cs_source_1l00006"/>00006 
<anchor xml:id="__counter_8cs_source_1l00010"/><link linkend="_class_counter">00010</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_counter">Counter</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__counter_8cs_source_1l00011"/>00011 {
<anchor xml:id="__counter_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;TMP_Text&#32;m_CounterText;
<anchor xml:id="__counter_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;m_PostFix&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__counter_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;m_StartingValue&#32;=&#32;0;
<anchor xml:id="__counter_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector2Int&#32;m_MinMaxValues&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;(0,64);
<anchor xml:id="__counter_8cs_source_1l00016"/>00016 
<anchor xml:id="__counter_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;m_counter;
<anchor xml:id="__counter_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MIN_SLIDER_VALUE&#32;=&#32;0;
<anchor xml:id="__counter_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MAX_SLIDER_VALUE&#32;=&#32;99;
<anchor xml:id="__counter_8cs_source_1l00020"/>00020 
<anchor xml:id="__counter_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()
<anchor xml:id="__counter_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;{
<anchor xml:id="__counter_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_counter&#32;=&#32;ClampValue(m_StartingValue);
<anchor xml:id="__counter_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdateText();
<anchor xml:id="__counter_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;}
<anchor xml:id="__counter_8cs_source_1l00026"/>00026 
<anchor xml:id="__counter_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateText()
<anchor xml:id="__counter_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;{
<anchor xml:id="__counter_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StringBuilder&#32;sb&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StringBuilder();
<anchor xml:id="__counter_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append(m_counter.ToString());
<anchor xml:id="__counter_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_PostFix&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__counter_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__counter_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;m_PostFix);
<anchor xml:id="__counter_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__counter_8cs_source_1l00035"/>00035 
<anchor xml:id="__counter_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_CounterText.SetText(sb);
<anchor xml:id="__counter_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;}
<anchor xml:id="__counter_8cs_source_1l00038"/>00038 
<anchor xml:id="__counter_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;ClampValue(<emphasis role="keywordtype">int</emphasis>&#32;value)
<anchor xml:id="__counter_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;{
<anchor xml:id="__counter_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Mathf.Clamp(value,&#32;m_MinMaxValues.x,&#32;m_MinMaxValues.y);
<anchor xml:id="__counter_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;}
<anchor xml:id="__counter_8cs_source_1l00043"/>00043 
<anchor xml:id="__counter_8cs_source_1l00044"/><link linkend="_class_counter_1a426e89971a6cb4e98284d38b67bdf4b8">00044</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_counter_1a426e89971a6cb4e98284d38b67bdf4b8">OnMinusButtonClicked</link>()
<anchor xml:id="__counter_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;{
<anchor xml:id="__counter_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_counter&#32;=&#32;ClampValue(m_counter&#32;-&#32;1);
<anchor xml:id="__counter_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdateText();
<anchor xml:id="__counter_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;}
<anchor xml:id="__counter_8cs_source_1l00049"/>00049 
<anchor xml:id="__counter_8cs_source_1l00050"/><link linkend="_class_counter_1a4a40ee860a57bf4800efd1e152d78946">00050</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_counter_1a4a40ee860a57bf4800efd1e152d78946">OnPlusButtonClicked</link>()
<anchor xml:id="__counter_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;{
<anchor xml:id="__counter_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_counter&#32;=&#32;ClampValue(m_counter&#32;+&#32;1);
<anchor xml:id="__counter_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdateText();
<anchor xml:id="__counter_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}
<anchor xml:id="__counter_8cs_source_1l00055"/>00055 
<anchor xml:id="__counter_8cs_source_1l00056"/><link linkend="_class_counter_1a1d9298c008e0921983ad1a378f0b8708">00056</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_counter_1a1d9298c008e0921983ad1a378f0b8708">SetMinMaxValues</link>(<emphasis role="keywordtype">int</emphasis>&#32;min,&#32;<emphasis role="keywordtype">int</emphasis>&#32;max)
<anchor xml:id="__counter_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;{
<anchor xml:id="__counter_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;newMin&#32;=&#32;Mathf.Clamp(min,&#32;MIN_SLIDER_VALUE,&#32;MAX_SLIDER_VALUE);
<anchor xml:id="__counter_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;newMax&#32;=&#32;Mathf.Clamp(max,&#32;MIN_SLIDER_VALUE,&#32;MAX_SLIDER_VALUE);
<anchor xml:id="__counter_8cs_source_1l00060"/>00060 
<anchor xml:id="__counter_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(min&#32;&gt;=&#32;max)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;}
<anchor xml:id="__counter_8cs_source_1l00062"/>00062 
<anchor xml:id="__counter_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_MinMaxValues&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2Int(newMin,&#32;newMax);
<anchor xml:id="__counter_8cs_source_1l00064"/>00064 
<anchor xml:id="__counter_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__counter_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;}
<anchor xml:id="__counter_8cs_source_1l00067"/>00067 }
</programlisting></section>
