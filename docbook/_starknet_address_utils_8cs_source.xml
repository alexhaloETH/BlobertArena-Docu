<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__starknet_address_utils_8cs_source" xml:lang="en-US">
<title>StarknetAddressUtils.cs</title>
<indexterm><primary>Managers/Statics/StarknetAddressUtils.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__starknet_address_utils_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>Dojo.Starknet;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>Newtonsoft.Json.Linq;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>SimpleGraphQL;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>StarkSharp.StarkCurve.Extensions;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_system">System</link>;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis>System.Globalization;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00008"/>00008 <emphasis role="keyword">using&#32;</emphasis>System.Linq;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00009"/>00009 <emphasis role="keyword">using&#32;</emphasis>System.Numerics;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00010"/>00010 <emphasis role="keyword">using&#32;</emphasis>System.Security.Cryptography;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00011"/>00011 <emphasis role="keyword">using&#32;</emphasis>System.Text.RegularExpressions;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00012"/>00012 <emphasis role="keyword">using&#32;</emphasis>System.Threading.Tasks;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00013"/>00013 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_logic_layer">LogicLayer</link>;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00014"/>00014 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00015"/>00015 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.Networking;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00016"/>00016 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00017"/><link linkend="_namespace_starknet_utils">00017</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_starknet_utils">StarknetUtils</link>
<anchor xml:id="__starknet_address_utils_8cs_source_1l00018"/>00018 {
<anchor xml:id="__starknet_address_utils_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>StarknetAddressUtils
<anchor xml:id="__starknet_address_utils_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_address_utils_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;ShortenAddress(<emphasis role="keywordtype">string</emphasis>&#32;address)
<anchor xml:id="__starknet_address_utils_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_address_utils_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;address.Substring(0,&#32;6)&#32;+&#32;<emphasis role="stringliteral">&quot;...&quot;</emphasis>&#32;+&#32;address.Substring(address.Length&#32;-&#32;4);
<anchor xml:id="__starknet_address_utils_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_address_utils_8cs_source_1l00031"/>00031 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsValidTransactionHash(<emphasis role="keywordtype">string</emphasis>&#32;hash,&#32;List&lt;string&gt;&#32;hashesToAvoid)
<anchor xml:id="__starknet_address_utils_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_address_utils_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hashesToAvoid.Contains(hash))
<anchor xml:id="__starknet_address_utils_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_address_utils_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_address_utils_8cs_source_1l00044"/>00044 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;string&#32;length&#32;is&#32;exactly&#32;64&#32;characters</emphasis>
<anchor xml:id="__starknet_address_utils_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hash.Length&#32;!=&#32;66)
<anchor xml:id="__starknet_address_utils_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_address_utils_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_address_utils_8cs_source_1l00050"/>00050 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Regular&#32;expression&#32;to&#32;check&#32;if&#32;the&#32;string&#32;contains&#32;only&#32;hexadecimal&#32;characters&#32;(0-9,&#32;a-f,&#32;A-f)</emphasis>
<anchor xml:id="__starknet_address_utils_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Regex&#32;hexRegex&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Regex(<emphasis role="stringliteral">&quot;^[0-9a-fA-F]+$&quot;</emphasis>);
<anchor xml:id="__starknet_address_utils_8cs_source_1l00053"/>00053 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;true&#32;if&#32;the&#32;string&#32;matches&#32;the&#32;regex&#32;pattern,&#32;otherwise&#32;false</emphasis>
<anchor xml:id="__starknet_address_utils_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hexRegex.IsMatch(hash);
<anchor xml:id="__starknet_address_utils_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_address_utils_8cs_source_1l00057"/>00057 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;Address0sFix(<emphasis role="keywordtype">string</emphasis>&#32;inputHash)
<anchor xml:id="__starknet_address_utils_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_address_utils_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;requiredLength&#32;=&#32;66;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00066"/>00066 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!inputHash.StartsWith(<emphasis role="stringliteral">&quot;0x&quot;</emphasis>))
<anchor xml:id="__starknet_address_utils_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_address_utils_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inputHash&#32;=&#32;<emphasis role="stringliteral">&quot;0x&quot;</emphasis>&#32;+&#32;inputHash;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_address_utils_8cs_source_1l00071"/>00071 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;missingZeros&#32;=&#32;requiredLength&#32;-&#32;inputHash.Length;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00073"/>00073 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(missingZeros&#32;&gt;&#32;0)
<anchor xml:id="__starknet_address_utils_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_address_utils_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inputHash&#32;=&#32;<emphasis role="stringliteral">&quot;0x&quot;</emphasis>&#32;+&#32;<emphasis role="keyword">new</emphasis>&#32;string(<emphasis role="charliteral">&apos;0&apos;</emphasis>,&#32;missingZeros)&#32;+&#32;inputHash.Substring(2);
<anchor xml:id="__starknet_address_utils_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_address_utils_8cs_source_1l00078"/>00078 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;inputHash;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_address_utils_8cs_source_1l00081"/>00081 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;TakeOutUnderScore(<emphasis role="keywordtype">string</emphasis>&#32;input,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;capitalize)
<anchor xml:id="__starknet_address_utils_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_address_utils_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(input))
<anchor xml:id="__starknet_address_utils_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_address_utils_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>.Empty;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_address_utils_8cs_source_1l00094"/>00094 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;startsWithUnderscore&#32;=&#32;input.StartsWith(<emphasis role="stringliteral">&quot;_&quot;</emphasis>);
<anchor xml:id="__starknet_address_utils_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;words&#32;=&#32;input.Split(<emphasis role="charliteral">&apos;_&apos;</emphasis>);
<anchor xml:id="__starknet_address_utils_8cs_source_1l00097"/>00097 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;words.Length;&#32;i++)
<anchor xml:id="__starknet_address_utils_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_address_utils_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(capitalize)
<anchor xml:id="__starknet_address_utils_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_address_utils_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;words[i]&#32;=&#32;CultureInfo.CurrentCulture.TextInfo.ToTitleCase(words[i].ToLower());
<anchor xml:id="__starknet_address_utils_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_address_utils_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_address_utils_8cs_source_1l00105"/>00105 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;result&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Join(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;words);
<anchor xml:id="__starknet_address_utils_8cs_source_1l00107"/>00107 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(startsWithUnderscore)
<anchor xml:id="__starknet_address_utils_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_address_utils_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<emphasis role="stringliteral">&quot;_&quot;</emphasis>&#32;+&#32;result.TrimStart();
<anchor xml:id="__starknet_address_utils_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_address_utils_8cs_source_1l00112"/>00112 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_address_utils_8cs_source_1l00115"/>00115 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;FormatToStarkNetAddress(<emphasis role="keywordtype">string</emphasis>&#32;hex)
<anchor xml:id="__starknet_address_utils_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_address_utils_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hex.StartsWith(<emphasis role="stringliteral">&quot;0x&quot;</emphasis>))
<anchor xml:id="__starknet_address_utils_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_address_utils_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hex&#32;=&#32;hex.Substring(2);
<anchor xml:id="__starknet_address_utils_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_address_utils_8cs_source_1l00122"/>00122 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hex.Length&#32;&lt;&#32;64)
<anchor xml:id="__starknet_address_utils_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__starknet_address_utils_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hex&#32;=&#32;hex.PadLeft(64,&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>);
<anchor xml:id="__starknet_address_utils_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_address_utils_8cs_source_1l00127"/>00127 
<anchor xml:id="__starknet_address_utils_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;0x&quot;</emphasis>&#32;+&#32;hex;
<anchor xml:id="__starknet_address_utils_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_address_utils_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;}
<anchor xml:id="__starknet_address_utils_8cs_source_1l00131"/>00131 }
</programlisting></section>
