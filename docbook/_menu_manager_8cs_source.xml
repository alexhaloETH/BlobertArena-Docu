<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__menu_manager_8cs_source" xml:lang="en-US">
<title>MenuManager.cs</title>
<indexterm><primary>UI/MenuManager.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__menu_manager_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_system">System</link>;
<anchor xml:id="__menu_manager_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__menu_manager_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__menu_manager_8cs_source_1l00004"/>00004 
<anchor xml:id="__menu_manager_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;this&#32;script&#32;will&#32;be&#32;tied&#32;to&#32;the&#32;grug&#32;lair&#32;unity&#32;tool&#32;so&#32;preferebly&#32;should&#32;not&#32;be&#32;edited&#32;until&#32;then,&#32;this&#32;is&#32;an&#32;older&#32;version&#32;and&#32;the&#32;new&#32;version&#32;is&#32;on&#32;the&#32;grug&apos;s&#32;lair</emphasis>
<anchor xml:id="__menu_manager_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;but&#32;the&#32;premise&#32;is&#32;simple,&#32;we&#32;have&#32;a&#32;stack&#32;of&#32;pages&#32;(Menu,&#32;should&#32;probably&#32;change&#32;the&#32;name)&#32;and&#32;if&#32;we&#32;want&#32;to&#32;go&#32;backwards&#32;we&#32;disable&#32;and&#32;check&#32;if&#32;there&#32;is&#32;a&#32;menu&#32;saved&#32;in&#32;the&#32;stack&#32;we&#32;come&#32;back&#32;to</emphasis>
<anchor xml:id="__menu_manager_8cs_source_1l00007"/>00007 
<anchor xml:id="__menu_manager_8cs_source_1l00008"/><link linkend="_class_menu_manager">00008</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_menu_manager">MenuManager</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__menu_manager_8cs_source_1l00009"/>00009 {
<anchor xml:id="__menu_manager_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;Stack&lt;Menu&gt;&#32;_menuStack&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Stack&lt;Menu&gt;();
<anchor xml:id="__menu_manager_8cs_source_1l00011"/>00011 
<anchor xml:id="__menu_manager_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;This&#32;is&#32;the&#32;menu&#32;that&#32;starts&#32;as&#32;soon&#32;as&#32;the&#32;scene&#32;is&#32;loaded&quot;</emphasis>)]
<anchor xml:id="__menu_manager_8cs_source_1l00013"/><link linkend="_class_menu_manager_1a49f324784bf38fe3c9147067880c94e0">00013</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_menu">Menu</link>&#32;<link linkend="_class_menu_manager_1a49f324784bf38fe3c9147067880c94e0">InitialMenu</link>;
<anchor xml:id="__menu_manager_8cs_source_1l00014"/>00014 
<anchor xml:id="__menu_manager_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;This&#32;is&#32;the&#32;menu&#32;that&#32;if&#32;something&#32;goes&#32;wrong&#32;or&#32;the&#32;stack&#32;finishes&#32;it&#32;will&#32;return&#32;to&#32;this&quot;</emphasis>)]
<anchor xml:id="__menu_manager_8cs_source_1l00016"/><link linkend="_class_menu_manager_1aee0c5f47dfb4014243430eb18dd53c6b">00016</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_menu">Menu</link>&#32;<link linkend="_class_menu_manager_1aee0c5f47dfb4014243430eb18dd53c6b">StandardMenu</link>;
<anchor xml:id="__menu_manager_8cs_source_1l00017"/>00017 
<anchor xml:id="__menu_manager_8cs_source_1l00018"/><link linkend="_class_menu_manager_1a8d83470bc8c1298840b10ed958bd9dd1">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">event</emphasis>&#32;Action&lt;Menu&gt;&#32;<link linkend="_class_menu_manager_1a8d83470bc8c1298840b10ed958bd9dd1">OnMenuChanged</link>;
<anchor xml:id="__menu_manager_8cs_source_1l00019"/>00019 
<anchor xml:id="__menu_manager_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
<anchor xml:id="__menu_manager_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//on&#32;start&#32;what&#32;we&#32;can&#32;do&#32;is&#32;get&#32;all&#32;of&#32;the&#32;menus&#32;we&#32;find&#32;in&#32;the&#32;scene&#32;and&#32;close&#32;them&#32;apart&#32;from&#32;the&#32;start&#32;one&#32;whihc&#32;will&#32;be&#32;set&#32;as&#32;a&#32;var</emphasis>
<anchor xml:id="__menu_manager_8cs_source_1l00023"/>00023 
<anchor xml:id="__menu_manager_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_menu_manager_1a49f324784bf38fe3c9147067880c94e0">InitialMenu</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__menu_manager_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;menu&#32;<emphasis role="keywordflow">in</emphasis>&#32;FindObjectsByType&lt;Menu&gt;(FindObjectsSortMode.None))
<anchor xml:id="__menu_manager_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;menu.Close();
<anchor xml:id="__menu_manager_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00030"/>00030 
<anchor xml:id="__menu_manager_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_menu_manager_1a93307896152357fc2ea7c248e107aff2">OpenMenu</link>(<link linkend="_class_menu_manager_1a49f324784bf38fe3c9147067880c94e0">InitialMenu</link>);
<anchor xml:id="__menu_manager_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00034"/>00034 
<anchor xml:id="__menu_manager_8cs_source_1l00035"/><link linkend="_class_menu_manager_1a93307896152357fc2ea7c248e107aff2">00035</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_menu_manager_1a93307896152357fc2ea7c248e107aff2">OpenMenu</link>(<link linkend="_class_menu">Menu</link>&#32;menu)
<anchor xml:id="__menu_manager_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_menuStack.Count&#32;&gt;&#32;0&#32;&amp;&amp;&#32;_menuStack.Peek()&#32;==&#32;menu)
<anchor xml:id="__menu_manager_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_menuStack.Pop().Close();
<anchor xml:id="__menu_manager_8cs_source_1l00040"/>00040 
<anchor xml:id="__menu_manager_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_menuStack.Count&#32;&gt;&#32;0)
<anchor xml:id="__menu_manager_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_menuStack.Peek().Open();
<anchor xml:id="__menu_manager_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__menu_manager_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_menuStack.Count&#32;&gt;&#32;0)
<anchor xml:id="__menu_manager_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_menuStack.Peek().Close();
<anchor xml:id="__menu_manager_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00052"/>00052 
<anchor xml:id="__menu_manager_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_menuStack.Push(menu);
<anchor xml:id="__menu_manager_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;menu.<link linkend="_class_menu_1a70dee27069171493755a9a9a52fce15c">Open</link>();
<anchor xml:id="__menu_manager_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00056"/>00056 
<anchor xml:id="__menu_manager_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_menu_manager_1a8d83470bc8c1298840b10ed958bd9dd1">OnMenuChanged</link>?.Invoke(menu);
<anchor xml:id="__menu_manager_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00059"/>00059 
<anchor xml:id="__menu_manager_8cs_source_1l00060"/><link linkend="_class_menu_manager_1a79aa90cfbbb6561b37fe49e2c88c84b5">00060</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_menu_manager_1a79aa90cfbbb6561b37fe49e2c88c84b5">CloseLastPage</link>(<emphasis role="keywordtype">bool</emphasis>&#32;openLast&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__menu_manager_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_menuStack.Count&#32;==&#32;0)
<anchor xml:id="__menu_manager_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__menu_manager_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00066"/>00066 
<anchor xml:id="__menu_manager_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_menuStack.Pop().Close();
<anchor xml:id="__menu_manager_8cs_source_1l00068"/>00068 
<anchor xml:id="__menu_manager_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(openLast)
<anchor xml:id="__menu_manager_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(_menuStack.Count&#32;&gt;&#32;0)
<anchor xml:id="__menu_manager_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;topMenu&#32;=&#32;_menuStack.Peek();
<anchor xml:id="__menu_manager_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(topMenu.returnable)
<anchor xml:id="__menu_manager_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;topMenu.Open();
<anchor xml:id="__menu_manager_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_menu_manager_1a8d83470bc8c1298840b10ed958bd9dd1">OnMenuChanged</link>?.Invoke(topMenu);
<anchor xml:id="__menu_manager_8cs_source_1l00078"/>00078 
<anchor xml:id="__menu_manager_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__menu_manager_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__menu_manager_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_menuStack.Pop().Close();
<anchor xml:id="__menu_manager_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00086"/>00086 
<anchor xml:id="__menu_manager_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;stack&#32;is&#32;empty&#32;and&#32;openLast&#32;is&#32;true,&#32;open&#32;the&#32;StandardMenu</emphasis>
<anchor xml:id="__menu_manager_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_menu_manager_1aee0c5f47dfb4014243430eb18dd53c6b">StandardMenu</link>?.<link linkend="_class_menu_1a70dee27069171493755a9a9a52fce15c">Open</link>();
<anchor xml:id="__menu_manager_8cs_source_1l00089"/>00089 
<anchor xml:id="__menu_manager_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_menu_manager_1a8d83470bc8c1298840b10ed958bd9dd1">OnMenuChanged</link>?.Invoke(<link linkend="_class_menu_manager_1aee0c5f47dfb4014243430eb18dd53c6b">StandardMenu</link>);
<anchor xml:id="__menu_manager_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00093"/>00093 
<anchor xml:id="__menu_manager_8cs_source_1l00094"/><link linkend="_class_menu_manager_1a9adecab612d11d9bddc122bb98a4195a">00094</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_menu_manager_1a9adecab612d11d9bddc122bb98a4195a">ClearStack</link>(<emphasis role="keywordtype">bool</emphasis>&#32;closeAll)
<anchor xml:id="__menu_manager_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(closeAll)
<anchor xml:id="__menu_manager_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(_menuStack.Count&#32;&gt;&#32;0)
<anchor xml:id="__menu_manager_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_menuStack.Pop().Close();
<anchor xml:id="__menu_manager_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__menu_manager_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_menuStack.Clear();
<anchor xml:id="__menu_manager_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00108"/>00108 
<anchor xml:id="__menu_manager_8cs_source_1l00109"/><link linkend="_class_menu_manager_1adb507ae8d08bda9faf1ce05f7163d6ea">00109</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_menu">Menu</link>&#32;<link linkend="_class_menu_manager_1adb507ae8d08bda9faf1ce05f7163d6ea">GetCurrentMenu</link>()
<anchor xml:id="__menu_manager_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;{
<anchor xml:id="__menu_manager_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_menuStack.Count&#32;&gt;&#32;0&#32;?&#32;_menuStack.Peek()&#32;:&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__menu_manager_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;}
<anchor xml:id="__menu_manager_8cs_source_1l00113"/>00113 }
</programlisting></section>
