<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__slider_animator_component_8cs_source" xml:lang="en-US">
<title>SliderAnimatorComponent.cs</title>
<indexterm><primary>UI/Components/BattlePageComponents/SliderAnimatorComponent.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__slider_animator_component_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__slider_animator_component_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.UI;
<anchor xml:id="__slider_animator_component_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>System.Collections;
<anchor xml:id="__slider_animator_component_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>TMPro;
<anchor xml:id="__slider_animator_component_8cs_source_1l00005"/>00005 
<anchor xml:id="__slider_animator_component_8cs_source_1l00006"/><link linkend="_namespace_ui_components">00006</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_ui_components_1_1_slider">UiComponents.Slider</link>
<anchor xml:id="__slider_animator_component_8cs_source_1l00007"/>00007 {
<anchor xml:id="__slider_animator_component_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;[RequireComponent(typeof(UnityEngine.UI.Slider))]
<anchor xml:id="__slider_animator_component_8cs_source_1l00009"/><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component">00009</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component">SliderAnimatorComponent</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__slider_animator_component_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;UnityEngine.UI.Slider&#32;slider;
<anchor xml:id="__slider_animator_component_8cs_source_1l00012"/>00012 
<anchor xml:id="__slider_animator_component_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;Transform&#32;shakeTarget;&#32;<emphasis role="comment">//&#32;The&#32;transform&#32;to&#32;apply&#32;the&#32;shake&#32;animation&#32;to</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00014"/><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a0c93b51d89e6288e391c03787796f8b2">00014</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a0c93b51d89e6288e391c03787796f8b2">isAnimating</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__slider_animator_component_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;TMP_Text&#32;textComponent;&#32;<emphasis role="comment">//&#32;The&#32;TMP_Text&#32;component&#32;to&#32;update&#32;with&#32;the&#32;slider&apos;s&#32;value</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00016"/>00016 
<anchor xml:id="__slider_animator_component_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()
<anchor xml:id="__slider_animator_component_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slider&#32;=&#32;GetComponent&lt;UnityEngine.UI.Slider&gt;();
<anchor xml:id="__slider_animator_component_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00021"/>00021 
<anchor xml:id="__slider_animator_component_8cs_source_1l00027"/><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1ab9a88e0a7551e3d3aaba48d451241d10">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1ab9a88e0a7551e3d3aaba48d451241d10">SetValue</link>(<emphasis role="keywordtype">float</emphasis>&#32;value,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration&#32;=&#32;0f,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;changeBackgroundColour&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__slider_animator_component_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;==&#32;slider.value)
<anchor xml:id="__slider_animator_component_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__slider_animator_component_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00033"/>00033 
<anchor xml:id="__slider_animator_component_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(duration&#32;&gt;&#32;0)
<anchor xml:id="__slider_animator_component_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(AnimateSlider(value,&#32;duration,&#32;changeBackgroundColour));
<anchor xml:id="__slider_animator_component_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slider.value&#32;=&#32;Mathf.Clamp(value,&#32;slider.minValue,&#32;slider.maxValue);
<anchor xml:id="__slider_animator_component_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(changeBackgroundColour)
<anchor xml:id="__slider_animator_component_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdateHealthBarColor();
<anchor xml:id="__slider_animator_component_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00045"/>00045 
<anchor xml:id="__slider_animator_component_8cs_source_1l00051"/><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1acd0ce9c8b13a9b0aac8d4cf9251fb1eb">00051</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1acd0ce9c8b13a9b0aac8d4cf9251fb1eb">SetPercentage</link>(<emphasis role="keywordtype">float</emphasis>&#32;percentage,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration&#32;=&#32;0f)
<anchor xml:id="__slider_animator_component_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;value&#32;=&#32;Mathf.Lerp(slider.minValue,&#32;slider.maxValue,&#32;percentage);
<anchor xml:id="__slider_animator_component_8cs_source_1l00054"/>00054 
<anchor xml:id="__slider_animator_component_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(duration&#32;&gt;&#32;0)
<anchor xml:id="__slider_animator_component_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(AnimateSlider(value,&#32;duration));
<anchor xml:id="__slider_animator_component_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slider.value&#32;=&#32;value;
<anchor xml:id="__slider_animator_component_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00064"/>00064 
<anchor xml:id="__slider_animator_component_8cs_source_1l00070"/><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a62747398de5e5478fa4ec5b519767d21">00070</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a62747398de5e5478fa4ec5b519767d21">IncrementValue</link>(<emphasis role="keywordtype">float</emphasis>&#32;increment,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration&#32;=&#32;0f)
<anchor xml:id="__slider_animator_component_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(duration&#32;&gt;&#32;0)
<anchor xml:id="__slider_animator_component_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(AnimateSlider(slider.value&#32;+&#32;increment,&#32;duration));
<anchor xml:id="__slider_animator_component_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slider.value&#32;=&#32;Mathf.Clamp(slider.value&#32;+&#32;increment,&#32;slider.minValue,&#32;slider.maxValue);
<anchor xml:id="__slider_animator_component_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00081"/>00081 
<anchor xml:id="__slider_animator_component_8cs_source_1l00087"/><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1adcd4f52ebb9fd57992f71f66f93aca44">00087</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1adcd4f52ebb9fd57992f71f66f93aca44">DecrementValue</link>(<emphasis role="keywordtype">float</emphasis>&#32;decrement,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration&#32;=&#32;0f)
<anchor xml:id="__slider_animator_component_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(duration&#32;&gt;&#32;0)
<anchor xml:id="__slider_animator_component_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(AnimateSlider(slider.value&#32;-&#32;decrement,&#32;duration));
<anchor xml:id="__slider_animator_component_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slider.value&#32;=&#32;Mathf.Clamp(slider.value&#32;-&#32;decrement,&#32;slider.minValue,&#32;slider.maxValue);
<anchor xml:id="__slider_animator_component_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00098"/>00098 
<anchor xml:id="__slider_animator_component_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;funcito&#32;to&#32;get&#32;the&#32;the&#32;value&#32;back</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00100"/><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a273f84abe83f7f333dcc35f07dac17b9">00100</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a273f84abe83f7f333dcc35f07dac17b9">GetValue</link>()
<anchor xml:id="__slider_animator_component_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;slider.value;
<anchor xml:id="__slider_animator_component_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00104"/>00104 
<anchor xml:id="__slider_animator_component_8cs_source_1l00109"/><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1abde5db27f675761fdd4cc5ed7a5829ba">00109</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1abde5db27f675761fdd4cc5ed7a5829ba">MoveToMin</link>(<emphasis role="keywordtype">float</emphasis>&#32;duration&#32;=&#32;0f)
<anchor xml:id="__slider_animator_component_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(duration&#32;&gt;&#32;0)
<anchor xml:id="__slider_animator_component_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(AnimateSlider(slider.minValue,&#32;duration));
<anchor xml:id="__slider_animator_component_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slider.value&#32;=&#32;slider.minValue;
<anchor xml:id="__slider_animator_component_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00120"/>00120 
<anchor xml:id="__slider_animator_component_8cs_source_1l00125"/><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a5bff3eaa1f296d2693d57f2e1bdc2c34">00125</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a5bff3eaa1f296d2693d57f2e1bdc2c34">MoveToMax</link>(<emphasis role="keywordtype">float</emphasis>&#32;duration&#32;=&#32;0f)
<anchor xml:id="__slider_animator_component_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(duration&#32;&gt;&#32;0)
<anchor xml:id="__slider_animator_component_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(AnimateSlider(slider.maxValue,&#32;duration));
<anchor xml:id="__slider_animator_component_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slider.value&#32;=&#32;slider.maxValue;
<anchor xml:id="__slider_animator_component_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00136"/>00136 
<anchor xml:id="__slider_animator_component_8cs_source_1l00137"/><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a5e8fd0146ea6b5c855e0b5f7532b30dd">00137</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a5e8fd0146ea6b5c855e0b5f7532b30dd">SetMax</link>(<emphasis role="keywordtype">int</emphasis>&#32;max)
<anchor xml:id="__slider_animator_component_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slider.maxValue&#32;=&#32;max;
<anchor xml:id="__slider_animator_component_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00141"/>00141 
<anchor xml:id="__slider_animator_component_8cs_source_1l00142"/><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1ab5e400aedd6db9ec4986e75fbf815903">00142</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1ab5e400aedd6db9ec4986e75fbf815903">SetMin</link>(<emphasis role="keywordtype">int</emphasis>&#32;min)
<anchor xml:id="__slider_animator_component_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slider.minValue&#32;=&#32;min;
<anchor xml:id="__slider_animator_component_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00146"/>00146 
<anchor xml:id="__slider_animator_component_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//this&#32;is&#32;hardocded&#32;and&#32;should&#32;be&#32;renewed&#32;to&#32;a&#32;new&#32;system&#32;more&#32;friendly</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateHealthBarColor()
<anchor xml:id="__slider_animator_component_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;health&#32;=&#32;slider.value;
<anchor xml:id="__slider_animator_component_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxHealth&#32;=&#32;slider.maxValue;
<anchor xml:id="__slider_animator_component_8cs_source_1l00152"/>00152 
<anchor xml:id="__slider_animator_component_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;health&#32;percentage</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;healthPercentage&#32;=&#32;(health&#32;/&#32;maxHealth)&#32;*&#32;100f;
<anchor xml:id="__slider_animator_component_8cs_source_1l00155"/>00155 
<anchor xml:id="__slider_animator_component_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Determine&#32;color&#32;based&#32;on&#32;health&#32;percentage</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;color;
<anchor xml:id="__slider_animator_component_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(healthPercentage&#32;&lt;&#32;15)
<anchor xml:id="__slider_animator_component_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color&#32;=&#32;Color.red;
<anchor xml:id="__slider_animator_component_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(healthPercentage&#32;&lt;&#32;50)
<anchor xml:id="__slider_animator_component_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(1f,&#32;0.5f,&#32;0f);&#32;<emphasis role="comment">//&#32;Orange</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(healthPercentage&#32;&lt;&#32;70)
<anchor xml:id="__slider_animator_component_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color&#32;=&#32;Color.yellow;
<anchor xml:id="__slider_animator_component_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color&#32;=&#32;Color.green;
<anchor xml:id="__slider_animator_component_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00174"/>00174 
<anchor xml:id="__slider_animator_component_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1ad748c7be0f8a98c0ca52c08d61bf8f5a">ChangeFillColor</link>(color);
<anchor xml:id="__slider_animator_component_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00177"/>00177 
<anchor xml:id="__slider_animator_component_8cs_source_1l00184"/><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a42636e9826ac13f629812674e83c0062">00184</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a42636e9826ac13f629812674e83c0062">PingPong</link>(<emphasis role="keywordtype">float</emphasis>&#32;startValue,&#32;<emphasis role="keywordtype">float</emphasis>&#32;endValue,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration)
<anchor xml:id="__slider_animator_component_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(duration&#32;&gt;&#32;0)
<anchor xml:id="__slider_animator_component_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(PingPongSlider(startValue,&#32;endValue,&#32;duration));
<anchor xml:id="__slider_animator_component_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slider.value&#32;=&#32;startValue;&#32;<emphasis role="comment">//&#32;Start&#32;at&#32;the&#32;startValue&#32;if&#32;no&#32;animation&#32;is&#32;required</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00195"/>00195 
<anchor xml:id="__slider_animator_component_8cs_source_1l00201"/><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1ad748c7be0f8a98c0ca52c08d61bf8f5a">00201</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1ad748c7be0f8a98c0ca52c08d61bf8f5a">ChangeFillColor</link>(Color&#32;color,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration&#32;=&#32;0f)
<anchor xml:id="__slider_animator_component_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(slider.fillRect&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__slider_animator_component_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Image&#32;fillImage&#32;=&#32;slider.fillRect.GetComponent&lt;Image&gt;();
<anchor xml:id="__slider_animator_component_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fillImage&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__slider_animator_component_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(duration&#32;&gt;&#32;0)
<anchor xml:id="__slider_animator_component_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(AnimateColor(fillImage,&#32;fillImage.color,&#32;color,&#32;duration));
<anchor xml:id="__slider_animator_component_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fillImage.color&#32;=&#32;color;
<anchor xml:id="__slider_animator_component_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00219"/>00219 
<anchor xml:id="__slider_animator_component_8cs_source_1l00225"/><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a0bf8e24407c1f39cc6563fc566d6c279">00225</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a0bf8e24407c1f39cc6563fc566d6c279">ChangeHandleColor</link>(Color&#32;color,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration&#32;=&#32;0f)
<anchor xml:id="__slider_animator_component_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(slider.handleRect&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__slider_animator_component_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Image&#32;handleImage&#32;=&#32;slider.handleRect.GetComponent&lt;Image&gt;();
<anchor xml:id="__slider_animator_component_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(handleImage&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__slider_animator_component_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(duration&#32;&gt;&#32;0)
<anchor xml:id="__slider_animator_component_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(AnimateColor(handleImage,&#32;handleImage.color,&#32;color,&#32;duration));
<anchor xml:id="__slider_animator_component_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleImage.color&#32;=&#32;color;
<anchor xml:id="__slider_animator_component_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00243"/>00243 
<anchor xml:id="__slider_animator_component_8cs_source_1l00249"/><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a18d9876646cf92547957d13b346aceeb">00249</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a18d9876646cf92547957d13b346aceeb">ChangeBackgroundColor</link>(Color&#32;color,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration&#32;=&#32;0f)
<anchor xml:id="__slider_animator_component_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(slider.targetGraphic&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__slider_animator_component_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Graphic&#32;backgroundGraphic&#32;=&#32;slider.targetGraphic;
<anchor xml:id="__slider_animator_component_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(backgroundGraphic&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__slider_animator_component_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(duration&#32;&gt;&#32;0)
<anchor xml:id="__slider_animator_component_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(AnimateColor(backgroundGraphic,&#32;backgroundGraphic.color,&#32;color,&#32;duration));
<anchor xml:id="__slider_animator_component_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backgroundGraphic.color&#32;=&#32;color;
<anchor xml:id="__slider_animator_component_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00267"/>00267 
<anchor xml:id="__slider_animator_component_8cs_source_1l00273"/><link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a700f12046f89d6b85c9574707ee03fd5">00273</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a700f12046f89d6b85c9574707ee03fd5">Shake</link>(<emphasis role="keywordtype">float</emphasis>&#32;duration,&#32;<emphasis role="keywordtype">float</emphasis>&#32;magnitude)
<anchor xml:id="__slider_animator_component_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(duration&#32;&gt;&#32;0&#32;&amp;&amp;&#32;shakeTarget&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__slider_animator_component_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(ShakeTransform(shakeTarget,&#32;duration,&#32;magnitude));
<anchor xml:id="__slider_animator_component_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00280"/>00280 
<anchor xml:id="__slider_animator_component_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;AnimateSlider(<emphasis role="keywordtype">float</emphasis>&#32;targetValue,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;changeBackgroundColour&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keywordtype">string</emphasis>&#32;format&#32;=&#32;<emphasis role="stringliteral">&quot;{0}/{1}&quot;</emphasis>)
<anchor xml:id="__slider_animator_component_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;startValue&#32;=&#32;slider.value;
<anchor xml:id="__slider_animator_component_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;elapsedTime&#32;=&#32;0f;
<anchor xml:id="__slider_animator_component_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a0c93b51d89e6288e391c03787796f8b2">isAnimating</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__slider_animator_component_8cs_source_1l00286"/>00286 
<anchor xml:id="__slider_animator_component_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(elapsedTime&#32;&lt;&#32;duration)
<anchor xml:id="__slider_animator_component_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;elapsedTime&#32;+=&#32;Time.deltaTime;
<anchor xml:id="__slider_animator_component_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;currentValue&#32;=&#32;Mathf.Lerp(startValue,&#32;targetValue,&#32;elapsedTime&#32;/&#32;duration);
<anchor xml:id="__slider_animator_component_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slider.value&#32;=&#32;currentValue;
<anchor xml:id="__slider_animator_component_8cs_source_1l00292"/>00292 
<anchor xml:id="__slider_animator_component_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(changeBackgroundColour)
<anchor xml:id="__slider_animator_component_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdateHealthBarColor();
<anchor xml:id="__slider_animator_component_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;the&#32;TMP_Text&#32;component&#32;with&#32;the&#32;formatted&#32;string</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(textComponent&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__slider_animator_component_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textComponent.text&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Format(format,&#32;Mathf.RoundToInt(currentValue),&#32;Mathf.RoundToInt(slider.maxValue));
<anchor xml:id="__slider_animator_component_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00302"/>00302 
<anchor xml:id="__slider_animator_component_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__slider_animator_component_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00305"/>00305 
<anchor xml:id="__slider_animator_component_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_ui_components_1_1_slider_1_1_slider_animator_component_1a0c93b51d89e6288e391c03787796f8b2">isAnimating</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__slider_animator_component_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slider.value&#32;=&#32;targetValue;&#32;<emphasis role="comment">//&#32;Ensure&#32;it&#32;ends&#32;on&#32;the&#32;exact&#32;value</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00308"/>00308 
<anchor xml:id="__slider_animator_component_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Ensure&#32;the&#32;TMP_Text&#32;ends&#32;on&#32;the&#32;exact&#32;target&#32;value</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(textComponent&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__slider_animator_component_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textComponent.text&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Format(format,&#32;Mathf.RoundToInt(targetValue),&#32;Mathf.RoundToInt(slider.maxValue));
<anchor xml:id="__slider_animator_component_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00315"/>00315 
<anchor xml:id="__slider_animator_component_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;PingPongSlider(<emphasis role="keywordtype">float</emphasis>&#32;startValue,&#32;<emphasis role="keywordtype">float</emphasis>&#32;endValue,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration)
<anchor xml:id="__slider_animator_component_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__slider_animator_component_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;StartCoroutine(AnimateSlider(endValue,&#32;duration));
<anchor xml:id="__slider_animator_component_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;StartCoroutine(AnimateSlider(startValue,&#32;duration));
<anchor xml:id="__slider_animator_component_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00324"/>00324 
<anchor xml:id="__slider_animator_component_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;AnimateColor(Graphic&#32;graphic,&#32;Color&#32;startColor,&#32;Color&#32;targetColor,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration)
<anchor xml:id="__slider_animator_component_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;elapsedTime&#32;=&#32;0f;
<anchor xml:id="__slider_animator_component_8cs_source_1l00328"/>00328 
<anchor xml:id="__slider_animator_component_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(elapsedTime&#32;&lt;&#32;duration)
<anchor xml:id="__slider_animator_component_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;elapsedTime&#32;+=&#32;Time.deltaTime;
<anchor xml:id="__slider_animator_component_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;graphic.color&#32;=&#32;Color.Lerp(startColor,&#32;targetColor,&#32;elapsedTime&#32;/&#32;duration);
<anchor xml:id="__slider_animator_component_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__slider_animator_component_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00335"/>00335 
<anchor xml:id="__slider_animator_component_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;graphic.color&#32;=&#32;targetColor;&#32;<emphasis role="comment">//&#32;Ensure&#32;it&#32;ends&#32;on&#32;the&#32;exact&#32;color</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00338"/>00338 
<anchor xml:id="__slider_animator_component_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;ShakeTransform(Transform&#32;target,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration,&#32;<emphasis role="keywordtype">float</emphasis>&#32;magnitude)
<anchor xml:id="__slider_animator_component_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;originalPosition&#32;=&#32;target.localPosition;
<anchor xml:id="__slider_animator_component_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;elapsed&#32;=&#32;0f;
<anchor xml:id="__slider_animator_component_8cs_source_1l00343"/>00343 
<anchor xml:id="__slider_animator_component_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(elapsed&#32;&lt;&#32;duration)
<anchor xml:id="__slider_animator_component_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__slider_animator_component_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x&#32;=&#32;<link linkend="__blobert_animation_controller_8cs_1a24953b19d956caa76c403684c71b4e5b">Random</link>.Range(-1f,&#32;1f)&#32;*&#32;magnitude;
<anchor xml:id="__slider_animator_component_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;y&#32;=&#32;<link linkend="__blobert_animation_controller_8cs_1a24953b19d956caa76c403684c71b4e5b">Random</link>.Range(-1f,&#32;1f)&#32;*&#32;magnitude;
<anchor xml:id="__slider_animator_component_8cs_source_1l00348"/>00348 
<anchor xml:id="__slider_animator_component_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.localPosition&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(originalPosition.x&#32;+&#32;x,&#32;originalPosition.y&#32;+&#32;y,&#32;originalPosition.z);
<anchor xml:id="__slider_animator_component_8cs_source_1l00350"/>00350 
<anchor xml:id="__slider_animator_component_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;elapsed&#32;+=&#32;Time.deltaTime;
<anchor xml:id="__slider_animator_component_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__slider_animator_component_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00354"/>00354 
<anchor xml:id="__slider_animator_component_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.localPosition&#32;=&#32;originalPosition;&#32;<emphasis role="comment">//&#32;Ensure&#32;it&#32;returns&#32;to&#32;the&#32;original&#32;position</emphasis>
<anchor xml:id="__slider_animator_component_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;}
<anchor xml:id="__slider_animator_component_8cs_source_1l00358"/>00358 }
</programlisting></section>
