<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source" xml:lang="en-US">
<title>StandardViewNoAttacksBlobDexComponent.cs</title>
<indexterm><primary>UI/Components/BlobertData/BlobDexComponents/StandardViewNoAttacksBlobDexComponent.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_blobert_arena_1_1_animations">BlobertArena.Animations</link>;
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>Dojo.Starknet;
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00004"/>00004 
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00005"/>00005 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_blobert_arena_1_1_blob_dex">BlobertArena.BlobDex</link>
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00006"/>00006 {
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00007"/><link linkend="_class_blobert_arena_1_1_blob_dex_1_1_standard_view_no_attacks_blob_dex_component">00007</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_blobert_arena_1_1_blob_dex_1_1_standard_view_no_attacks_blob_dex_component">StandardViewNoAttacksBlobDexComponent</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;{
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_blobert_arena_1_1_animations_1_1_character_animation_manager">CharacterAnimationManager</link>&#32;_characterTraitVisualizerComponent;
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_click_on_specific_trait_component">ClickOnSpecificTraitComponent</link>&#32;_clickOnSpecificTraitComponent;
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00011"/>00011 
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00012"/><link linkend="_class_blobert_arena_1_1_blob_dex_1_1_standard_view_no_attacks_blob_dex_component_1a0d9abffa3c9f6b54878c2bc788d2790d">00012</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_standard_view_no_attacks_blob_dex_component_1a0d9abffa3c9f6b54878c2bc788d2790d">InitilizeComponentBlobert</link>(<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;blobId)
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;blob&#32;=&#32;<link linkend="_namespace_logic_layer">LogicLayer</link>.<link linkend="_class_logic_layer_1_1_world_data_model">WorldDataModel</link>.AllPlayableCharactersInTheGame[blobId.Hex()];
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00015"/>00015 
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_characterTraitVisualizerComponent.<link linkend="_class_blobert_arena_1_1_animations_1_1_character_animation_manager_1abcbfdc3f15525c5c63fe902fbd97565f">InitilizeComponentQuick</link>(blob,
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blob.GetNftType()&#32;==&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.AMMABlobs
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;<link linkend="_class_blobert_arena_1_1_animations_1_1_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_blobert_arena_1_1_animations_1_1_amma_animation_controller_1a159b1d579976d25c20ec3702a459a53e">QuickIdleNoMaskR</link>
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;BlobertAnimationController.IdleHappyFrontR);
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00021"/>00021 
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00022"/><link linkend="_class_blobert_arena_1_1_blob_dex_1_1_standard_view_no_attacks_blob_dex_component_1aa9371ab71e9a4caeb22f2f988165c5f6">00022</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;async&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_standard_view_no_attacks_blob_dex_component_1aa9371ab71e9a4caeb22f2f988165c5f6">InitilizeComponentForCombatant</link>(<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;combatantId)
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;tokenId&#32;=&#32;await&#32;<link linkend="_namespace_logic_layer">LogicLayer</link>.<link linkend="_class_logic_layer_1_1_combatant_data_model">CombatantDataModel</link>.GetTokenIdFromCombatant(combatantId);
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_blobert_arena_1_1_blob_dex_1_1_standard_view_no_attacks_blob_dex_component_1a0d9abffa3c9f6b54878c2bc788d2790d">InitilizeComponentBlobert</link>(tokenId);
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;}
<anchor xml:id="__standard_view_no_attacks_blob_dex_component_8cs_source_1l00028"/>00028 }
</programlisting></section>
