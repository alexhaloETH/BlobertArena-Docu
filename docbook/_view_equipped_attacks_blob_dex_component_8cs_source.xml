<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__view_equipped_attacks_blob_dex_component_8cs_source" xml:lang="en-US">
<title>ViewEquippedAttacksBlobDexComponent.cs</title>
<indexterm><primary>UI/Components/BlobertData/BlobDexComponents/ViewEquippedAttacksBlobDexComponent.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>Dojo.Starknet;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.UI;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis>static&#32;dojo_bindings.dojo;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00006"/><link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">00006</link> <emphasis role="keyword">using&#32;</emphasis><link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;=&#32;Dojo.Starknet.FieldElement;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00007"/>00007 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00008"/><link linkend="_class_view_equipped_attacks_blob_dex_component">00008</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_view_equipped_attacks_blob_dex_component">ViewEquippedAttacksBlobDexComponent</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00009"/>00009 {
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_character_animation_manager">CharacterAnimationManager</link>&#32;_characterTraitVisualizerComponent;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;Vector4&#32;positionNoAttacks;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;Vector4&#32;positionWithAttacks;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00013"/>00013 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;[Space(20)]
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;GameObject&#32;_attacksEquippedObject;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00016"/>00016 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;GameObject&#32;_noAttacksEquippedObject;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00018"/>00018 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;[Space(20)]
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Buttons&#32;references&quot;</emphasis>)]
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_base_button">BaseButton</link>[]&#32;_attacksObjects;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00022"/>00022 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;GameObject[]&#32;_addButtonObject;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00024"/>00024 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;GameObject&#32;_leftArrow;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;GameObject&#32;_rightArrow;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_blob_data_manager_blob_dex_component">BlobDataManagerBlobDexComponent</link>&#32;_parentPage;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_pageIndex&#32;=&#32;0;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00029"/>00029 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;_blobId;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;forCombatant&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_skipFirstTime&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Attack[]&#32;_attacksSaved&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Attack[0];
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00034"/>00034 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00035"/><link linkend="_class_view_equipped_attacks_blob_dex_component_1a5e3785d451ddf7e3de667616e1a21bf9">00035</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_view_equipped_attacks_blob_dex_component_1a5e3785d451ddf7e3de667616e1a21bf9">InitilizeComponentBlobert</link>(<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;blobId,&#32;<link linkend="_class_blob_data_manager_blob_dex_component">BlobDataManagerBlobDexComponent</link>&#32;parentObject)
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;forCombatant&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00038"/>00038 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;blob&#32;=&#32;<link linkend="_namespace_logic_layer">LogicLayer</link>.<link linkend="_class_logic_layer_1_1_world_data_model">WorldDataModel</link>.AllPlayableCharactersInTheGame[blobId.Hex()].GetInstance&lt;ArcadeBlobert&gt;();
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00040"/>00040 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(blob.GetNftType()&#32;==&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.AMMABlobs)
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_characterTraitVisualizerComponent.<link linkend="_class_character_animation_manager_1a2f29ca8a16c04ce2e5da159e4d9127c0">InitializeComponent</link>(<emphasis role="keyword">new</emphasis>&#32;List&lt;CharacterAnimationManager.TextureFunctionInput&gt;()&#32;{&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1ac46bf878ba0436c64bd96df5ccc14269">GetTextureFunctionInput</link>(<link linkend="_class_a_m_m_a_blobert">AMMABlobert</link>.<link linkend="_class_a_m_m_a_blobert_1a54ed22adbc91fed044712d858cd9c32a">GetFighterIdFromCustomValue</link>(blob.GetInstance&lt;ArcadeBlobert&gt;().custom_id),&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1a5d8419d845d6afd9e99849ddeef7c454">AMMAAnimationState</link>.IdleNFR)&#32;},&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.AMMABlobs);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_characterTraitVisualizerComponent.<link linkend="_class_character_animation_manager_1a2f29ca8a16c04ce2e5da159e4d9127c0">InitializeComponent</link>(BlobertAnimationController.GetTextureFunctionInput(blob.GetTokenTrait(),&#32;<emphasis role="keyword">new</emphasis>&#32;BlobertAnimationController.AnimationDataTraitBlobert(BlobertAnimationController.AnimationDirection.Front,&#32;BlobertAnimationController.AnimationFace.Right,&#32;BlobertAnimationController.AnimationState.Idle1,&#32;BlobertAnimationController.BehaviourState.Happy)),&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.ArcadeBlobs);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00049"/>00049 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_characterTraitVisualizerComponent.<link linkend="_class_character_animation_manager_1a0287f2fa1b12da154b7452ebf37d47a0">PauseAnimation</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00051"/>00051 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_blobId&#32;=&#32;blobId;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LoadLocalSavedAttacks();
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00055"/>00055 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable()
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(forCombatant)
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00060"/>00060 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_skipFirstTime)
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_skipFirstTime&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LoadLocalSavedAttacks();
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00068"/>00068 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;LoadLocalSavedAttacks()
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_attacksSaved&#32;=&#32;<link linkend="_namespace_logic_layer">LogicLayer</link>.<link linkend="_class_logic_layer_1_1_local_data_model">LocalDataModel</link>.FetchBlobertAttacks(_blobId,&#32;<link linkend="_namespace_logic_layer">LogicLayer</link>.<link linkend="_class_logic_layer_1_1_local_data_model">LocalDataModel</link>.CurrentAccount.Address);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00072"/>00072 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_attacksSaved.Length&#32;==&#32;0)
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_attacksEquippedObject.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_noAttacksEquippedObject.SetActive(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00077"/>00077 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_view_equipped_attacks_blob_dex_component_1ad14745506ec2d071602f09eb48eed0e1">SetCharacterTraitVisualizerPosition</link>(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00079"/>00079 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pageIndex&#32;=&#32;0;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetAttacksToShow();
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00085"/>00085 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00086"/><link linkend="_class_view_equipped_attacks_blob_dex_component_1a463663a73342a3c933447491e5ede2e5">00086</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;async&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_view_equipped_attacks_blob_dex_component_1a463663a73342a3c933447491e5ede2e5">InitilizeComponentForCombatant</link>(<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;combatantId)
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;forCombatant&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;tokenId&#32;=&#32;await&#32;<link linkend="_namespace_logic_layer">LogicLayer</link>.<link linkend="_class_logic_layer_1_1_combatant_data_model">CombatantDataModel</link>.GetTokenIdFromCombatant(combatantId);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00090"/>00090 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;blob&#32;=&#32;<link linkend="_namespace_logic_layer">LogicLayer</link>.<link linkend="_class_logic_layer_1_1_world_data_model">WorldDataModel</link>.AllPlayableCharactersInTheGame[tokenId.Hex()].GetInstance&lt;ArcadeBlobert&gt;();
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00092"/>00092 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(blob.GetNftType()&#32;==&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.AMMABlobs)
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_characterTraitVisualizerComponent.<link linkend="_class_character_animation_manager_1a2f29ca8a16c04ce2e5da159e4d9127c0">InitializeComponent</link>(<emphasis role="keyword">new</emphasis>&#32;List&lt;CharacterAnimationManager.TextureFunctionInput&gt;()&#32;{&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1ac46bf878ba0436c64bd96df5ccc14269">GetTextureFunctionInput</link>(<link linkend="_class_a_m_m_a_blobert">AMMABlobert</link>.<link linkend="_class_a_m_m_a_blobert_1a54ed22adbc91fed044712d858cd9c32a">GetFighterIdFromCustomValue</link>(blob.GetInstance&lt;ArcadeBlobert&gt;().custom_id),&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1a5d8419d845d6afd9e99849ddeef7c454">AMMAAnimationState</link>.IdleFR)&#32;},&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.AMMABlobs);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_characterTraitVisualizerComponent.<link linkend="_class_character_animation_manager_1a2f29ca8a16c04ce2e5da159e4d9127c0">InitializeComponent</link>(BlobertAnimationController.GetTextureFunctionInput(blob.GetTokenTrait(),&#32;<emphasis role="keyword">new</emphasis>&#32;BlobertAnimationController.AnimationDataTraitBlobert(BlobertAnimationController.AnimationDirection.Front,&#32;BlobertAnimationController.AnimationFace.Right,&#32;BlobertAnimationController.AnimationState.Idle1,&#32;BlobertAnimationController.BehaviourState.Happy)),&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.ArcadeBlobs);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00101"/>00101 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_characterTraitVisualizerComponent.<link linkend="_class_character_animation_manager_1a0287f2fa1b12da154b7452ebf37d47a0">PauseAnimation</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00103"/>00103 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetAttacksToShow();
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//here&#32;its&#32;broken</emphasis>
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//var&#32;attacksIds&#32;=&#32;await&#32;LogicLayer.CombatantDataModel.GetAvailableAttacksOfTheCombatant(combatantId);</emphasis>
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00107"/>00107 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attacks&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Attack&gt;();
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00109"/>00109 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//foreach&#32;(var&#32;attackId&#32;in&#32;attacksIds)</emphasis>
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;var&#32;attack&#32;=&#32;LogicLayer.WorldDataModel.allAttacksDict[attackId.attack_id.Hex()];</emphasis>
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;attacks.Add(attack);</emphasis>
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00116"/>00116 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetAttacksToShow()
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_attacksEquippedObject.SetActive(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_noAttacksEquippedObject.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_view_equipped_attacks_blob_dex_component_1ad14745506ec2d071602f09eb48eed0e1">SetCharacterTraitVisualizerPosition</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00122"/>00122 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_pageIndex&#32;&gt;&#32;0)
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_leftArrow.SetActive(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_leftArrow.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00127"/>00127 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_attacksSaved.Length&#32;&gt;&#32;4&#32;*&#32;(_pageIndex&#32;+&#32;1))
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_rightArrow.SetActive(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_rightArrow.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00132"/>00132 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;_attacksObjects.Length;&#32;i++)
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;+&#32;(4&#32;*&#32;_pageIndex)&#32;&lt;&#32;_attacksSaved.Length)
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_attacksObjects[i].gameObject.SetActive(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_addButtonObject[i].SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_attacksObjects[i].<link linkend="_class_base_button_1ae4a37b75f8b7a9656fb56ad2a32b0418">GetText</link>().text&#32;=&#32;_attacksSaved[i&#32;+&#32;(4&#32;*&#32;_pageIndex)].dojoName;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_attacksObjects[i].gameObject.SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_addButtonObject[i].SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00148"/>00148 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00149"/><link linkend="_class_view_equipped_attacks_blob_dex_component_1ad14745506ec2d071602f09eb48eed0e1">00149</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_view_equipped_attacks_blob_dex_component_1ad14745506ec2d071602f09eb48eed0e1">SetCharacterTraitVisualizerPosition</link>(<emphasis role="keywordtype">bool</emphasis>&#32;isNoAttacks)
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;rectTransform&#32;=&#32;_characterTraitVisualizerComponent.GetComponent&lt;RectTransform&gt;();
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00152"/>00152 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector4&#32;targetPosition&#32;=&#32;isNoAttacks&#32;?&#32;positionNoAttacks&#32;:&#32;positionWithAttacks;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00154"/>00154 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.anchoredPosition&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(targetPosition.x,&#32;targetPosition.y);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.sizeDelta&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(targetPosition.z,&#32;targetPosition.w);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00158"/>00158 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00159"/><link linkend="_class_view_equipped_attacks_blob_dex_component_1a0fe47545aeceb9bbc71fd99d45f90ce1">00159</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_view_equipped_attacks_blob_dex_component_1a0fe47545aeceb9bbc71fd99d45f90ce1">OnPaginationClick</link>(<emphasis role="keywordtype">int</emphasis>&#32;direction)
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//check&#32;if&#32;its&#32;going&#32;below&#32;0</emphasis>
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_pageIndex&#32;+&#32;direction&#32;&lt;&#32;0)
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00164"/>00164 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//check&#32;if&#32;its&#32;going&#32;above&#32;the&#32;max&#32;pagination&#32;whihc&#32;is&#32;the&#32;length&#32;of&#32;the&#32;attacks&#32;divided&#32;by&#32;4</emphasis>
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_attacksSaved.Length&#32;&lt;=&#32;4&#32;*&#32;(_pageIndex&#32;+&#32;direction))
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00168"/>00168 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pageIndex&#32;+=&#32;direction;
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetAttacksToShow();
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00172"/>00172 
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00173"/><link linkend="_class_view_equipped_attacks_blob_dex_component_1ae2d85127564c9c3acce3f5c73ef5774f">00173</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_view_equipped_attacks_blob_dex_component_1ae2d85127564c9c3acce3f5c73ef5774f">StartEquipButtonCall</link>()
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;{
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_parentPage.<link linkend="_class_blob_data_manager_blob_dex_component_1a090f0cf398f19efe218603a3965b75be">OnClickOfTraitToggle</link>(_characterTraitVisualizerComponent.<link linkend="_class_character_animation_manager_1af4a0dcc7a2386ab3c7ac2a3145349f5f">ImageObjects</link>[0].name);
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;}
<anchor xml:id="__view_equipped_attacks_blob_dex_component_8cs_source_1l00177"/>00177 }
</programlisting></section>
