<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__attack_result_8cs_source" xml:lang="en-US">
<title>AttackResult.cs</title>
<indexterm><primary>LogicLayer/Dojo/Models/AttackResult.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__attack_result_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;Generated&#32;by&#32;dojo-bindgen&#32;on&#32;Mon,&#32;28&#32;Oct&#32;2024&#32;10:22:41&#32;+0000.&#32;Do&#32;not&#32;modify&#32;this&#32;file&#32;manually.</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_system">System</link>;
<anchor xml:id="__attack_result_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>Dojo;
<anchor xml:id="__attack_result_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>Dojo.Starknet;
<anchor xml:id="__attack_result_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis>System.Reflection;
<anchor xml:id="__attack_result_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis>System.Linq;
<anchor xml:id="__attack_result_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__attack_result_8cs_source_1l00008"/>00008 <emphasis role="keyword">using&#32;</emphasis>System.Threading.Tasks;
<anchor xml:id="__attack_result_8cs_source_1l00009"/>00009 <emphasis role="keyword">using&#32;</emphasis>dojo_bindings;
<anchor xml:id="__attack_result_8cs_source_1l00010"/>00010 <emphasis role="keyword">using&#32;</emphasis>Newtonsoft.Json.Linq;
<anchor xml:id="__attack_result_8cs_source_1l00011"/>00011 <emphasis role="keyword">using&#32;</emphasis>SimpleGraphQL;
<anchor xml:id="__attack_result_8cs_source_1l00012"/>00012 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__attack_result_8cs_source_1l00013"/>00013 <emphasis role="keyword">using&#32;</emphasis><link linkend="__arcade_blobert_8gen_8cs_1a1ad026eae6158e05516a7fc458801fd6">Enum</link>&#32;=&#32;Dojo.Starknet.Enum;
<anchor xml:id="__attack_result_8cs_source_1l00014"/><link linkend="__attack_result_8cs_1a680846c413970a24b7783196259823ae">00014</link> <emphasis role="keyword">using&#32;</emphasis><link linkend="__attack_result_8cs_1a680846c413970a24b7783196259823ae">Query</link>&#32;=&#32;Dojo.Torii.Query;
<anchor xml:id="__attack_result_8cs_source_1l00015"/>00015 
<anchor xml:id="__attack_result_8cs_source_1l00016"/>00016 <emphasis role="comment">//&#32;Type&#32;definition&#32;for&#32;`blob_arena::models::combat::DamageResult`&#32;struct</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00017"/>00017 [Serializable]
<anchor xml:id="__attack_result_8cs_source_1l00018"/><link linkend="_struct_damage_result">00018</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_damage_result">DamageResult</link>
<anchor xml:id="__attack_result_8cs_source_1l00019"/>00019 {
<anchor xml:id="__attack_result_8cs_source_1l00020"/><link linkend="_struct_damage_result_1a25f5571488aac10e2fbf120241388594">00020</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_struct_damage_result_1a25f5571488aac10e2fbf120241388594">damage</link>;
<anchor xml:id="__attack_result_8cs_source_1l00021"/><link linkend="_struct_damage_result_1a369049469d19c20cbf02602bf7e1ab7b">00021</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_damage_result_1a369049469d19c20cbf02602bf7e1ab7b">critical</link>;
<anchor xml:id="__attack_result_8cs_source_1l00022"/>00022 }
<anchor xml:id="__attack_result_8cs_source_1l00023"/>00023 
<anchor xml:id="__attack_result_8cs_source_1l00024"/>00024 <emphasis role="comment">//&#32;Type&#32;definition&#32;for&#32;`blob_arena::models::combat::EffectResult`&#32;struct</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00025"/>00025 [Serializable]
<anchor xml:id="__attack_result_8cs_source_1l00026"/><link linkend="_struct_effect_result">00026</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_effect_result">EffectResult</link>
<anchor xml:id="__attack_result_8cs_source_1l00027"/>00027 {
<anchor xml:id="__attack_result_8cs_source_1l00028"/><link linkend="_struct_effect_result_1a9ac20cc424ff6c8f5d4a34865ee2995b">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Target&#32;<link linkend="_struct_effect_result_1a9ac20cc424ff6c8f5d4a34865ee2995b">target</link>;
<anchor xml:id="__attack_result_8cs_source_1l00029"/><link linkend="_struct_effect_result_1abd4f035d0371f7d1bd87ae392ba87c6d">00029</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;AffectResult&#32;<link linkend="_struct_effect_result_1abd4f035d0371f7d1bd87ae392ba87c6d">affect</link>;
<anchor xml:id="__attack_result_8cs_source_1l00030"/>00030 }
<anchor xml:id="__attack_result_8cs_source_1l00031"/>00031 
<anchor xml:id="__attack_result_8cs_source_1l00032"/>00032 <emphasis role="comment">//&#32;Type&#32;definition&#32;for&#32;`blob_arena::models::combat::AffectResult`&#32;enum</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00033"/>00033 <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;record&#32;AffectResult()&#32;:&#32;<link linkend="__arcade_blobert_8gen_8cs_1a1ad026eae6158e05516a7fc458801fd6">Enum</link>
<anchor xml:id="__attack_result_8cs_source_1l00034"/>00034 {
<anchor xml:id="__attack_result_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;record&#32;Success()&#32;:&#32;AffectResult;
<anchor xml:id="__attack_result_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;record&#32;Damage(<link linkend="_struct_damage_result">DamageResult</link>&#32;value)&#32;:&#32;AffectResult;
<anchor xml:id="__attack_result_8cs_source_1l00037"/>00037 }
<anchor xml:id="__attack_result_8cs_source_1l00038"/>00038 
<anchor xml:id="__attack_result_8cs_source_1l00039"/>00039 <emphasis role="comment">//&#32;Type&#32;definition&#32;for&#32;`blob_arena::models::combat::AttackOutcomes`&#32;enum</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00040"/>00040 <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;record&#32;AttackOutcomes()&#32;:&#32;<link linkend="__arcade_blobert_8gen_8cs_1a1ad026eae6158e05516a7fc458801fd6">Enum</link>
<anchor xml:id="__attack_result_8cs_source_1l00041"/>00041 {
<anchor xml:id="__attack_result_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;record&#32;Failed()&#32;:&#32;AttackOutcomes;
<anchor xml:id="__attack_result_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;record&#32;Stunned()&#32;:&#32;AttackOutcomes;
<anchor xml:id="__attack_result_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;record&#32;Miss(<link linkend="_struct_effect_result">EffectResult</link>[]&#32;value)&#32;:&#32;AttackOutcomes;
<anchor xml:id="__attack_result_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;record&#32;Hit(<link linkend="_struct_effect_result">EffectResult</link>[]&#32;value)&#32;:&#32;AttackOutcomes;
<anchor xml:id="__attack_result_8cs_source_1l00046"/>00046 }
<anchor xml:id="__attack_result_8cs_source_1l00047"/>00047 
<anchor xml:id="__attack_result_8cs_source_1l00048"/>00048 <emphasis role="comment">//&#32;Model&#32;definition&#32;for&#32;`blob_arena::models::attack::Attack`&#32;model</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00049"/>00049 <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>AttackResult&#32;:&#32;ModelInstance
<anchor xml:id="__attack_result_8cs_source_1l00050"/>00050 {
<anchor xml:id="__attack_result_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;[ModelField(<emphasis role="stringliteral">&quot;combatant_id&quot;</emphasis>)]
<anchor xml:id="__attack_result_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;combatant_id;&#32;&#32;&#32;<emphasis role="comment">//big&#32;int&#32;u128</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00053"/>00053 
<anchor xml:id="__attack_result_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;[ModelField(<emphasis role="stringliteral">&quot;round&quot;</emphasis>)]
<anchor xml:id="__attack_result_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;uint&#32;round;
<anchor xml:id="__attack_result_8cs_source_1l00056"/>00056 
<anchor xml:id="__attack_result_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;[ModelField(<emphasis role="stringliteral">&quot;target&quot;</emphasis>)]
<anchor xml:id="__attack_result_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;target;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//big&#32;int&#32;u128</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00059"/>00059 
<anchor xml:id="__attack_result_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;[ModelField(<emphasis role="stringliteral">&quot;result&quot;</emphasis>)]
<anchor xml:id="__attack_result_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;AttackOutcomes&#32;result;
<anchor xml:id="__attack_result_8cs_source_1l00062"/>00062 
<anchor xml:id="__attack_result_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
<anchor xml:id="__attack_result_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;{
<anchor xml:id="__attack_result_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Destroy(gameObject);
<anchor xml:id="__attack_result_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;}
<anchor xml:id="__attack_result_8cs_source_1l00067"/>00067 
<anchor xml:id="__attack_result_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;async&#32;Task&lt;AttackResult&gt;&#32;GetAttackResultSDKQuery(<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;combatantId,&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;roundNum)
<anchor xml:id="__attack_result_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;{
<anchor xml:id="__attack_result_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;queryForAttackResult&#32;=&#32;<link linkend="_class_query_helper">QueryHelper</link>.<link linkend="_class_query_helper_1af7ca5c42433dbc2e03ce22e0618a4d64">CreateKeysModelQuery</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>[]&#32;{&#32;combatantId,&#32;roundNum&#32;},&#32;dojo.PatternMatching.FixedLen,&#32;ModelAttackResult);
<anchor xml:id="__attack_result_8cs_source_1l00077"/>00077 
<anchor xml:id="__attack_result_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;outputQueryCombatantInfo&#32;=&#32;await&#32;DojoEntitiesStorage.worldManager.StandardEntityFetch(queryForAttackResult);
<anchor xml:id="__attack_result_8cs_source_1l00079"/>00079 
<anchor xml:id="__attack_result_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(outputQueryCombatantInfo.Count&#32;==&#32;0)
<anchor xml:id="__attack_result_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__attack_result_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__attack_result_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__attack_result_8cs_source_1l00084"/>00084 
<anchor xml:id="__attack_result_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;entity&#32;<emphasis role="keywordflow">in</emphasis>&#32;outputQueryCombatantInfo)
<anchor xml:id="__attack_result_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__attack_result_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;scriptOutputChallengeInvite&#32;=&#32;DojoEntitiesStorage.worldManager.synchronizationMaster.GetScriptsFromQueryResult(entity.Models.Values.ToArray());
<anchor xml:id="__attack_result_8cs_source_1l00088"/>00088 
<anchor xml:id="__attack_result_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;script&#32;<emphasis role="keywordflow">in</emphasis>&#32;scriptOutputChallengeInvite)
<anchor xml:id="__attack_result_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__attack_result_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(script&#32;is&#32;AttackResult&#32;attacks)
<anchor xml:id="__attack_result_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__attack_result_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;attacks;
<anchor xml:id="__attack_result_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__attack_result_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__attack_result_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__attack_result_8cs_source_1l00097"/>00097 
<anchor xml:id="__attack_result_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__attack_result_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;}
<anchor xml:id="__attack_result_8cs_source_1l00100"/>00100 
<anchor xml:id="__attack_result_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>AttackAndDamageResult
<anchor xml:id="__attack_result_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;{
<anchor xml:id="__attack_result_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;CombatantId;
<anchor xml:id="__attack_result_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;Round;
<anchor xml:id="__attack_result_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;Target;
<anchor xml:id="__attack_result_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;Result;
<anchor xml:id="__attack_result_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>?&#32;Damage;
<anchor xml:id="__attack_result_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>?&#32;Critical;
<anchor xml:id="__attack_result_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;ItemId;
<anchor xml:id="__attack_result_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;}
<anchor xml:id="__attack_result_8cs_source_1l00111"/>00111 
<anchor xml:id="__attack_result_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;async&#32;Task&lt;AttackAndDamageResult&gt;&#32;GetAttackAndDamageResults(<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;combatantId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;round)
<anchor xml:id="__attack_result_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;{
<anchor xml:id="__attack_result_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attackResult&#32;=&#32;await&#32;GetAttackResult(combatantId,&#32;round);
<anchor xml:id="__attack_result_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(attackResult&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__attack_result_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__attack_result_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError($<emphasis role="stringliteral">&quot;No&#32;attack&#32;result&#32;found&#32;for&#32;combatant&#32;ID&#32;{combatantId.Hex()}&#32;and&#32;round&#32;{round}&quot;</emphasis>);
<anchor xml:id="__attack_result_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;AttackAndDamageResult&#32;{&#32;CombatantId&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;Round&#32;=&#32;-1,&#32;Target&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;Result&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;Damage&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;Critical&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;ItemId&#32;=&#32;<emphasis role="keyword">null</emphasis>&#32;};
<anchor xml:id="__attack_result_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__attack_result_8cs_source_1l00120"/>00120 
<anchor xml:id="__attack_result_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;damageResult&#32;=&#32;await&#32;GetDamageResult(combatantId,&#32;round);
<anchor xml:id="__attack_result_8cs_source_1l00122"/>00122 
<anchor xml:id="__attack_result_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;AttackAndDamageResult
<anchor xml:id="__attack_result_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__attack_result_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CombatantId&#32;=&#32;attackResult.Value.CombatantId,
<anchor xml:id="__attack_result_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Round&#32;=&#32;attackResult.Value.Round,
<anchor xml:id="__attack_result_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Target&#32;=&#32;attackResult.Value.Target,
<anchor xml:id="__attack_result_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result&#32;=&#32;attackResult.Value.Result,
<anchor xml:id="__attack_result_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Damage&#32;=&#32;damageResult?.Damage,
<anchor xml:id="__attack_result_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Critical&#32;=&#32;damageResult?.Critical,
<anchor xml:id="__attack_result_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ItemId&#32;=&#32;attackResult.Value.ItemId
<anchor xml:id="__attack_result_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__attack_result_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;}
<anchor xml:id="__attack_result_8cs_source_1l00134"/>00134 
<anchor xml:id="__attack_result_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;async&#32;Task&lt;(<emphasis role="keywordtype">string</emphasis>&#32;CombatantId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;Round,&#32;<emphasis role="keywordtype">string</emphasis>&#32;Target,&#32;<emphasis role="keywordtype">string</emphasis>&#32;Result,&#32;<emphasis role="keywordtype">string</emphasis>&#32;ItemId)?&gt;&#32;GetAttackResult(<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;combatantId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;round)
<anchor xml:id="__attack_result_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;{
<anchor xml:id="__attack_result_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attackQueryString&#32;=&#32;<emphasis role="stringliteral">$@&quot;</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00138"/>00138 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;query&#32;{{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00139"/>00139 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blobArenaAttackResultModels(where:&#32;{{combatant_id:&#32;&quot;&quot;{combatantId.Hex()}&quot;&quot;,&#32;round:&#32;{round}}})&#32;{{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00140"/>00140 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;edges&#32;{{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00141"/>00141 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;node&#32;{{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00142"/>00142 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;combatant_id</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00143"/>00143 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;round</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00144"/>00144 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00145"/>00145 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00146"/>00146 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;attack_id</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00147"/>00147 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00148"/>00148 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00149"/>00149 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00150"/>00150 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}}&quot;</emphasis>;
<anchor xml:id="__attack_result_8cs_source_1l00151"/>00151 
<anchor xml:id="__attack_result_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;client&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GraphQLClient($<emphasis role="stringliteral">&quot;{DojoEntitiesStorage.worldManagerData.toriiUrl}/graphql&quot;</emphasis>);
<anchor xml:id="__attack_result_8cs_source_1l00153"/>00153 
<anchor xml:id="__attack_result_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attackRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Request
<anchor xml:id="__attack_result_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__attack_result_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__attack_result_8cs_1a680846c413970a24b7783196259823ae">Query</link>&#32;=&#32;attackQueryString,
<anchor xml:id="__attack_result_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__attack_result_8cs_source_1l00158"/>00158 
<anchor xml:id="__attack_result_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attackResponse&#32;=&#32;await&#32;client.Send&lt;dynamic&gt;(attackRequest);
<anchor xml:id="__attack_result_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attackJsonString&#32;=&#32;Newtonsoft.Json.JsonConvert.SerializeObject(attackResponse,&#32;Newtonsoft.Json.Formatting.Indented);
<anchor xml:id="__attack_result_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attackJsonObj&#32;=&#32;JObject.Parse(attackJsonString);
<anchor xml:id="__attack_result_8cs_source_1l00162"/>00162 
<anchor xml:id="__attack_result_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attackEdges&#32;=&#32;attackJsonObj[<emphasis role="stringliteral">&quot;Data&quot;</emphasis>][<emphasis role="stringliteral">&quot;blobArenaAttackResultModels&quot;</emphasis>][<emphasis role="stringliteral">&quot;edges&quot;</emphasis>];
<anchor xml:id="__attack_result_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(attackEdges.Any())
<anchor xml:id="__attack_result_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__attack_result_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attackNode&#32;=&#32;attackEdges.First[<emphasis role="stringliteral">&quot;node&quot;</emphasis>];
<anchor xml:id="__attack_result_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;combatantIdResult&#32;=&#32;(string)attackNode[<emphasis role="stringliteral">&quot;combatant_id&quot;</emphasis>];
<anchor xml:id="__attack_result_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;resultRound&#32;=&#32;(int)attackNode[<emphasis role="stringliteral">&quot;round&quot;</emphasis>];
<anchor xml:id="__attack_result_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;target&#32;=&#32;(string)attackNode[<emphasis role="stringliteral">&quot;target&quot;</emphasis>];
<anchor xml:id="__attack_result_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;result&#32;=&#32;(string)attackNode[<emphasis role="stringliteral">&quot;result&quot;</emphasis>];
<anchor xml:id="__attack_result_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemId&#32;=&#32;(string)attackNode[<emphasis role="stringliteral">&quot;attack_id&quot;</emphasis>];
<anchor xml:id="__attack_result_8cs_source_1l00172"/>00172 
<anchor xml:id="__attack_result_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(combatantIdResult,&#32;resultRound,&#32;target,&#32;result,&#32;itemId);
<anchor xml:id="__attack_result_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__attack_result_8cs_source_1l00175"/>00175 
<anchor xml:id="__attack_result_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__attack_result_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;}
<anchor xml:id="__attack_result_8cs_source_1l00178"/>00178 
<anchor xml:id="__attack_result_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;async&#32;Task&lt;(<emphasis role="keywordtype">int</emphasis>?&#32;Damage,&#32;<emphasis role="keywordtype">bool</emphasis>?&#32;Critical)?&gt;&#32;GetDamageResult(<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;combatantId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;round)
<anchor xml:id="__attack_result_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;{
<anchor xml:id="__attack_result_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;damageQueryString&#32;=&#32;<emphasis role="stringliteral">$@&quot;</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00182"/>00182 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;query&#32;{{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00183"/>00183 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blobArenaDamageResultModels(where:&#32;{{combatant_id:&#32;&quot;&quot;{combatantId.Hex()}&quot;&quot;,&#32;round:&#32;{round}}})&#32;{{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00184"/>00184 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;edges&#32;{{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00185"/>00185 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;node&#32;{{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00186"/>00186 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;combatant_id</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00187"/>00187 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;round</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00188"/>00188 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;move</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00189"/>00189 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00190"/>00190 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;damage</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00191"/>00191 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;critical</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00192"/>00192 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00193"/>00193 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00194"/>00194 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00195"/>00195 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}}&quot;</emphasis>;
<anchor xml:id="__attack_result_8cs_source_1l00196"/>00196 
<anchor xml:id="__attack_result_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;client&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GraphQLClient($<emphasis role="stringliteral">&quot;{DojoEntitiesStorage.worldManagerData.toriiUrl}/graphql&quot;</emphasis>);
<anchor xml:id="__attack_result_8cs_source_1l00198"/>00198 
<anchor xml:id="__attack_result_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;damageRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Request
<anchor xml:id="__attack_result_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__attack_result_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__attack_result_8cs_1a680846c413970a24b7783196259823ae">Query</link>&#32;=&#32;damageQueryString,
<anchor xml:id="__attack_result_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__attack_result_8cs_source_1l00203"/>00203 
<anchor xml:id="__attack_result_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;damageResponse&#32;=&#32;await&#32;client.Send&lt;dynamic&gt;(damageRequest);
<anchor xml:id="__attack_result_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;damageJsonString&#32;=&#32;Newtonsoft.Json.JsonConvert.SerializeObject(damageResponse,&#32;Newtonsoft.Json.Formatting.Indented);
<anchor xml:id="__attack_result_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;damageJsonObj&#32;=&#32;JObject.Parse(damageJsonString);
<anchor xml:id="__attack_result_8cs_source_1l00207"/>00207 
<anchor xml:id="__attack_result_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;damageEdges&#32;=&#32;damageJsonObj[<emphasis role="stringliteral">&quot;Data&quot;</emphasis>][<emphasis role="stringliteral">&quot;blobArenaDamageResultModels&quot;</emphasis>][<emphasis role="stringliteral">&quot;edges&quot;</emphasis>];
<anchor xml:id="__attack_result_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(damageEdges.Any())
<anchor xml:id="__attack_result_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__attack_result_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;damageNode&#32;=&#32;damageEdges.First[<emphasis role="stringliteral">&quot;node&quot;</emphasis>];
<anchor xml:id="__attack_result_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;damage&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>?)damageNode[<emphasis role="stringliteral">&quot;damage&quot;</emphasis>];
<anchor xml:id="__attack_result_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;critical&#32;=&#32;(<emphasis role="keywordtype">bool</emphasis>?)damageNode[<emphasis role="stringliteral">&quot;critical&quot;</emphasis>];
<anchor xml:id="__attack_result_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(damage,&#32;critical);
<anchor xml:id="__attack_result_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__attack_result_8cs_source_1l00216"/>00216 
<anchor xml:id="__attack_result_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__attack_result_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;}
<anchor xml:id="__attack_result_8cs_source_1l00219"/>00219 
<anchor xml:id="__attack_result_8cs_source_1l00220"/>00220 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Query&#32;Helper</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00221"/>00221 
<anchor xml:id="__attack_result_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">string</emphasis>&#32;ModelAttackResult&#32;=&#32;<emphasis role="stringliteral">&quot;blob_arena-AttackResult&quot;</emphasis>;
<anchor xml:id="__attack_result_8cs_source_1l00223"/>00223 
<anchor xml:id="__attack_result_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="__attack_result_8cs_1a680846c413970a24b7783196259823ae">Query</link>&#32;KeyQuery(<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>&#32;<emphasis role="keywordtype">id</emphasis>,&#32;uint&#32;round)&#32;=&gt;&#32;<link linkend="_class_query_helper">QueryHelper</link>.<link linkend="_class_query_helper_1af7ca5c42433dbc2e03ce22e0618a4d64">CreateKeysModelQuery</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>[]&#32;{&#32;id,&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__view_equipped_attacks_blob_dex_component_8cs_1a04fcbbbbb88c5b1e47388f419576f399">FieldElement</link>(round)&#32;},&#32;dojo_bindings.dojo.PatternMatching.FixedLen,&#32;<emphasis role="stringliteral">&quot;blob_arena-CombatantInfo&quot;</emphasis>);
<anchor xml:id="__attack_result_8cs_source_1l00225"/>00225 
<anchor xml:id="__attack_result_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">string</emphasis>&#32;GraphQlQueryFull&#32;=&#32;<emphasis role="stringliteral">@&quot;query&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00227"/>00227 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;blobArenaAttackResultModels&#32;arguments&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00228"/>00228 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;edges&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00229"/>00229 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;node&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00230"/>00230 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;entity&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00231"/>00231 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keys</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00232"/>00232 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;models&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00233"/>00233 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__typename</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00234"/>00234 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;...&#32;on&#32;blob_arena_AttackResult&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00235"/>00235 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;combatant_id</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00236"/>00236 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;round</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00237"/>00237 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00238"/>00238 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00239"/>00239 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Hit&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00240"/>00240 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00241"/>00241 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;affect&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00242"/>00242 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Damage&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00243"/>00243 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;critical</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00244"/>00244 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;damage</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00245"/>00245 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00246"/>00246 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;option</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00247"/>00247 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00248"/>00248 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00249"/>00249 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Miss&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00250"/>00250 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00251"/>00251 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;affect&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00252"/>00252 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Damage</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00253"/>00253 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00254"/>00254 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;damage</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00255"/>00255 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;critical</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00256"/>00256 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00257"/>00257 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;option</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00258"/>00258 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00259"/>00259 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00260"/>00260 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00261"/>00261 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00262"/>00262 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00263"/>00263 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00264"/>00264 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00265"/>00265 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00266"/>00266 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00267"/>00267 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;}&quot;</emphasis>;
<anchor xml:id="__attack_result_8cs_source_1l00268"/>00268 
<anchor xml:id="__attack_result_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">string</emphasis>&#32;GraphQlQueryOnSection&#32;=&#32;<emphasis role="stringliteral">@&quot;</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00270"/>00270 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;...&#32;on&#32;blob_arena_AttackResult&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00271"/>00271 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;combatant_id</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00272"/>00272 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;round</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00273"/>00273 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00274"/>00274 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00275"/>00275 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Hit&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00276"/>00276 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00277"/>00277 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;affect&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00278"/>00278 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Damage&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00279"/>00279 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;critical</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00280"/>00280 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;damage</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00281"/>00281 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00282"/>00282 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;option</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00283"/>00283 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00284"/>00284 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00285"/>00285 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Miss&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00286"/>00286 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00287"/>00287 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;affect&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00288"/>00288 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Damage</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00289"/>00289 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00290"/>00290 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;damage</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00291"/>00291 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;critical</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00292"/>00292 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00293"/>00293 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;option</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00294"/>00294 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00295"/>00295 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00296"/>00296 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00297"/>00297 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00298"/>00298 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;</emphasis>;
<anchor xml:id="__attack_result_8cs_source_1l00299"/>00299 
<anchor xml:id="__attack_result_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">string</emphasis>&#32;GraphQlHeader&#32;=&#32;<emphasis role="stringliteral">&quot;blobArenaAttackResultModels&quot;</emphasis>;
<anchor xml:id="__attack_result_8cs_source_1l00301"/>00301 
<anchor xml:id="__attack_result_8cs_source_1l00302"/>00302 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion&#32;Query&#32;Helper</emphasis>
<anchor xml:id="__attack_result_8cs_source_1l00303"/>00303 }
</programlisting></section>
