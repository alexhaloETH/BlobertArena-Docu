<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__effect_player_8cs_source" xml:lang="en-US">
<title>EffectPlayer.cs</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__effect_player_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;Created&#32;by&#32;Norbert</emphasis>
<anchor xml:id="__effect_player_8cs_source_1l00002"/>00002 
<anchor xml:id="__effect_player_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>System.Collections;
<anchor xml:id="__effect_player_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__effect_player_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__effect_player_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.Assertions;
<anchor xml:id="__effect_player_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.UI;
<anchor xml:id="__effect_player_8cs_source_1l00008"/>00008 
<anchor xml:id="__effect_player_8cs_source_1l00014"/><link linkend="_class_effect_player">00014</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_effect_player">EffectPlayer</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__effect_player_8cs_source_1l00015"/>00015 {
<anchor xml:id="__effect_player_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;Sprite&gt;&#32;m_EffectSprites;
<anchor xml:id="__effect_player_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;[SerializeField,&#32;Range(1,&#32;6)]&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;m_EffectSpeed;
<anchor xml:id="__effect_player_8cs_source_1l00018"/>00018 
<anchor xml:id="__effect_player_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Image&#32;m_Image;
<anchor xml:id="__effect_player_8cs_source_1l00020"/>00020 
<anchor xml:id="__effect_player_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()
<anchor xml:id="__effect_player_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;{
<anchor xml:id="__effect_player_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(m_EffectSprites.Count&#32;&lt;&#32;0,&#32;$<emphasis role="stringliteral">&quot;There&#32;are&#32;no&#32;sprites&#32;in&#32;the&#32;effect&#32;sprite&#32;list&#32;in&#32;{gameObject}&quot;</emphasis>);
<anchor xml:id="__effect_player_8cs_source_1l00024"/>00024 
<anchor xml:id="__effect_player_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Image&#32;=&#32;GetComponent&lt;Image&gt;();
<anchor xml:id="__effect_player_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Image.sprite&#32;=&#32;m_EffectSprites[0];
<anchor xml:id="__effect_player_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;}
<anchor xml:id="__effect_player_8cs_source_1l00028"/>00028 
<anchor xml:id="__effect_player_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
<anchor xml:id="__effect_player_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;{
<anchor xml:id="__effect_player_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(PlayAnimation());
<anchor xml:id="__effect_player_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;}
<anchor xml:id="__effect_player_8cs_source_1l00033"/>00033 
<anchor xml:id="__effect_player_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;PlayAnimation()
<anchor xml:id="__effect_player_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;{
<anchor xml:id="__effect_player_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WaitForSeconds&#32;waitTime&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(1.0f&#32;/&#32;Mathf.Pow(2,&#32;m_EffectSpeed&#32;-&#32;1));
<anchor xml:id="__effect_player_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;waitTime;
<anchor xml:id="__effect_player_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;m_EffectSprites.Count;&#32;i++)
<anchor xml:id="__effect_player_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__effect_player_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Image.sprite&#32;=&#32;m_EffectSprites[i];
<anchor xml:id="__effect_player_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;waitTime;
<anchor xml:id="__effect_player_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__effect_player_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Destroy(gameObject);
<anchor xml:id="__effect_player_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;}
<anchor xml:id="__effect_player_8cs_source_1l00045"/>00045 }
</programlisting></section>
