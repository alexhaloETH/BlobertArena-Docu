<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__blob_test_8cs_source" xml:lang="en-US">
<title>BlobTest.cs</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__blob_test_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__blob_test_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Linq;
<anchor xml:id="__blob_test_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_logic_layer">LogicLayer</link>;
<anchor xml:id="__blob_test_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__blob_test_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.UI;
<anchor xml:id="__blob_test_8cs_source_1l00006"/>00006 
<anchor xml:id="__blob_test_8cs_source_1l00007"/><link linkend="_class_blob_test">00007</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_blob_test">BlobTest</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__blob_test_8cs_source_1l00008"/>00008 {
<anchor xml:id="__blob_test_8cs_source_1l00009"/><link linkend="_class_blob_test_1ad47dc39c01f60b6321f41b55ed3d8722">00009</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_character_animation_manager">CharacterAnimationManager</link>&#32;<link linkend="_class_blob_test_1ad47dc39c01f60b6321f41b55ed3d8722">AnimationManagerLeft</link>;
<anchor xml:id="__blob_test_8cs_source_1l00010"/><link linkend="_class_blob_test_1a429d220e03f354e4b94fbfb446a1cff1">00010</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_character_animation_manager">CharacterAnimationManager</link>&#32;<link linkend="_class_blob_test_1a429d220e03f354e4b94fbfb446a1cff1">AnimationManagerRight</link>;
<anchor xml:id="__blob_test_8cs_source_1l00011"/>00011 
<anchor xml:id="__blob_test_8cs_source_1l00012"/><link linkend="_class_blob_test_1ab64128c1785db1b56f095df60bdc3dfc">00012</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blob_test_1ab64128c1785db1b56f095df60bdc3dfc">Start</link>()
<anchor xml:id="__blob_test_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;{
<anchor xml:id="__blob_test_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_blob_test_1ad47dc39c01f60b6321f41b55ed3d8722">AnimationManagerLeft</link>.<link linkend="_class_character_animation_manager_1a2f29ca8a16c04ce2e5da159e4d9127c0">InitializeComponent</link>(<emphasis role="keyword">new</emphasis>&#32;List&lt;CharacterAnimationManager.TextureFunctionInput&gt;()
<anchor xml:id="__blob_test_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1ac46bf878ba0436c64bd96df5ccc14269">GetTextureFunctionInput</link>(2,&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1a5d8419d845d6afd9e99849ddeef7c454">AMMAAnimationState</link>.IdleNFR)&#32;},
<anchor xml:id="__blob_test_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.AMMABlobs);
<anchor xml:id="__blob_test_8cs_source_1l00017"/>00017 
<anchor xml:id="__blob_test_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_blob_test_1a429d220e03f354e4b94fbfb446a1cff1">AnimationManagerRight</link>.<link linkend="_class_character_animation_manager_1a2f29ca8a16c04ce2e5da159e4d9127c0">InitializeComponent</link>(<emphasis role="keyword">new</emphasis>&#32;List&lt;CharacterAnimationManager.TextureFunctionInput&gt;()
<anchor xml:id="__blob_test_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1ac46bf878ba0436c64bd96df5ccc14269">GetTextureFunctionInput</link>(3,&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1a5d8419d845d6afd9e99849ddeef7c454">AMMAAnimationState</link>.IdleNFL)&#32;},
<anchor xml:id="__blob_test_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_blobert_types">BlobertTypes</link>.<link linkend="_class_blobert_types_1a6e7b71d682ed504f647e259090af2b94">NFTTypes</link>.AMMABlobs);
<anchor xml:id="__blob_test_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;}
<anchor xml:id="__blob_test_8cs_source_1l00022"/>00022 
<anchor xml:id="__blob_test_8cs_source_1l00023"/><link linkend="_class_blob_test_1af3d537d1e2226fd71d33f63be34c4595">00023</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blob_test_1af3d537d1e2226fd71d33f63be34c4595">Update</link>()
<anchor xml:id="__blob_test_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;{
<anchor xml:id="__blob_test_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.GetKeyDown(KeyCode.Space))
<anchor xml:id="__blob_test_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__blob_test_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;originalAttackName&#32;=&#32;<emphasis role="stringliteral">&quot;Sword&#32;Slash_2&quot;</emphasis>;
<anchor xml:id="__blob_test_8cs_source_1l00028"/>00028 
<anchor xml:id="__blob_test_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;impactFramge&#32;=&#32;WorldDataModel.AttackNameToAnimData[originalAttackName].impactFrame;
<anchor xml:id="__blob_test_8cs_source_1l00030"/>00030 
<anchor xml:id="__blob_test_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attackerAnimation&#32;=&#32;<emphasis role="stringliteral">&quot;Sword&#32;Slash&quot;</emphasis>&#32;+&#32;<emphasis role="stringliteral">&quot;B&quot;</emphasis>;
<anchor xml:id="__blob_test_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;receiverAnimation&#32;=&#32;<emphasis role="stringliteral">&quot;hitF&quot;</emphasis>;
<anchor xml:id="__blob_test_8cs_source_1l00033"/>00033 
<anchor xml:id="__blob_test_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;callback&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_character_animation_manager">CharacterAnimationManager</link>.<link linkend="_class_character_animation_manager_1_1_tween_callback_system">TweenCallbackSystem</link>(impactFramge,&#32;()&#32;=&gt;
<anchor xml:id="__blob_test_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__blob_test_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;animationEnemy&#32;=&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1a1cd803a62246bdf269f7df4cd7b3cb9a">Instance</link>[3].GetSpritesByAnimName(receiverAnimation);
<anchor xml:id="__blob_test_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_blob_test_1a429d220e03f354e4b94fbfb446a1cff1">AnimationManagerRight</link>.<link linkend="_class_character_animation_manager_1af40a8cfd9a41c11e9934e2b0bc9d5d9a">DrawAnimationOverlay</link>(<emphasis role="keyword">new</emphasis>&#32;List&lt;List&lt;Sprite&gt;&gt;&#32;{&#32;animationEnemy.ToList()&#32;},&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__blob_test_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__blob_test_8cs_source_1l00039"/>00039 
<anchor xml:id="__blob_test_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;animationSelf&#32;=&#32;<link linkend="_class_amma_animation_controller">AmmaAnimationController</link>.<link linkend="_class_amma_animation_controller_1a1cd803a62246bdf269f7df4cd7b3cb9a">Instance</link>[2].GetSpritesByAnimName(attackerAnimation);
<anchor xml:id="__blob_test_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_blob_test_1ad47dc39c01f60b6321f41b55ed3d8722">AnimationManagerLeft</link>.<link linkend="_class_character_animation_manager_1af40a8cfd9a41c11e9934e2b0bc9d5d9a">DrawAnimationOverlay</link>(<emphasis role="keyword">new</emphasis>&#32;List&lt;List&lt;Sprite&gt;&gt;&#32;{&#32;animationSelf.ToList()&#32;},&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;<link linkend="_class_character_animation_manager">CharacterAnimationManager</link>.<link linkend="_class_character_animation_manager_1_1_tween_callback_system">TweenCallbackSystem</link>&gt;()&#32;{&#32;callback&#32;});
<anchor xml:id="__blob_test_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__blob_test_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;}
<anchor xml:id="__blob_test_8cs_source_1l00044"/>00044 }
</programlisting></section>
