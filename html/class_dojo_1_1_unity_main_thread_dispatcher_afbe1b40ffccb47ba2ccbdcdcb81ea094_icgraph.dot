digraph "Dojo.UnityMainThreadDispatcher.Enqueue"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="Dojo.UnityMainThreadDispatcher.\lEnqueue",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Locks the queue and adds the IEnumerator to the queue."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Dojo.UnityMainThreadDispatcher.\lEnqueue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_dojo_1_1_unity_main_thread_dispatcher.html#ab21f4299523e573b1213584bd6538bfe",tooltip="Locks the queue and adds the Action to the queue."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Dojo.UnityMainThreadDispatcher.\lEnqueueAsync",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_dojo_1_1_unity_main_thread_dispatcher.html#a007e9853b89bef43f9f3726eb5ec27b1",tooltip="Locks the queue and adds the Action to the queue, returning a Task which is completed when the action..."];
}
