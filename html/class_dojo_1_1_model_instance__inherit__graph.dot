digraph "Dojo.ModelInstance"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="Dojo.ModelInstance",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="MonoBehaviour",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="LogicLayer.Models.amma\l_blobert_AttackSlot",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1amma__blobert___attack_slot.html",tooltip="Dojo model, The attack slot dictates the attacks available for each of the items the blobert."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="LogicLayer.Models.amma\l_blobert_BlobertItem",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1amma__blobert___blobert_item.html",tooltip="Dojo model, Item that contains the stats given to the blobert, this can also be used to fetch the att..."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="LogicLayer.Models.amma\l_blobert_BlobertToken",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1amma__blobert___blobert_token.html",tooltip="Dojo Model, the blobert is the main character of the game."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="LogicLayer.Models.arcade\l_blobert_BlobertToken",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1arcade__blobert___blobert_token.html",tooltip="Dojo Model, the blobert is the main character of the game."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="LogicLayer.Models.betsy_Bet",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1betsy___bet.html",tooltip="Part of the wagering contract, this is to yet fully implement."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="LogicLayer.Models.blob\l_arena_Attack",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blob__arena___attack.html",tooltip="Dojo model, definition of the attack available in the game."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="LogicLayer.Models.blob\l_arena_AttackName",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blob__arena___attack_name.html",tooltip="Dojo Event, Mappging of attack id to name given off chain. This model can be found in the staticDataM..."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="LogicLayer.Models.blob\l_arena_AvailableAttack",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blob__arena___available_attack.html",tooltip="Dojo model, this indicates given the combatantd id and the attack the last round this attack was used..."];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="LogicLayer.Models.blob\l_arena_CombatEnd",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blob__arena___combat_end.html",tooltip="Dojo Event (to double check), emitted at the end of the game to have a comprehensive leaderboard of t..."];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="LogicLayer.Models.blob\l_arena_CombatState",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blob__arena___combat_state.html",tooltip="Dojo model, Quick way to get state of the combat, this is spawned only the moment that a fight actual..."];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="LogicLayer.Models.blob\l_arena_CombatantInfo",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blob__arena___combatant_info.html",tooltip="Dojo model, Used mainly to get the player participation in the game."];
  Node1 -> Node14 [id="edge13_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="LogicLayer.Models.blob\l_arena_CombatantState",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blob__arena___combatant_state.html",tooltip="Dojo model, Current state of the combatant in the game."];
  Node1 -> Node15 [id="edge14_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="LogicLayer.Models.blob\l_arena_CombatantToken",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blob__arena___combatant_token.html",tooltip="Dojo Model, Used to go from combatant id to real token id, the combatant is a hash of the token that ..."];
  Node1 -> Node16 [id="edge15_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="LogicLayer.Models.blob\l_arena_Commitment",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blob__arena___commitment.html",tooltip="Dojo model, Commitment is a model that holds the hash the user has commited the moment the user choos..."];
  Node1 -> Node17 [id="edge16_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="LogicLayer.Models.blob\l_arena_GameInfo",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blob__arena___game_info.html",tooltip="Dojo model, Info about the game, used to dictate the state of the game, if only one fo the fiels in t..."];
  Node1 -> Node18 [id="edge17_Node000001_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="LogicLayer.Models.blob\l_arena_Initiator",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blob__arena___initiator.html",tooltip="Dojo model, TODO."];
  Node1 -> Node19 [id="edge18_Node000001_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="LogicLayer.Models.blob\l_arena_LastTimestamp",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blob__arena___last_timestamp.html",tooltip="Dojo Models, (to confirm) this mdoel should have the timestamp of when the last action was done,..."];
  Node1 -> Node20 [id="edge19_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="LogicLayer.Models.blob\l_arena_Lobby",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blob__arena___lobby.html",tooltip="DOjo model, main object that dictates the participants of the game, here we get the id that then brna..."];
  Node1 -> Node21 [id="edge20_Node000001_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="LogicLayer.Models.blob\l_arena_PlannedAttack",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blob__arena___planned_attack.html",tooltip="Dojo model created after the reveal call, this holds the non hashed components used before the run ro..."];
  Node1 -> Node22 [id="edge21_Node000001_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="LogicLayer.Models.blob\l_arena_RoundResult",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blob__arena___round_result.html",tooltip="Dojo event sent at the end of the run round method for PVP, Containse a sorted array of the attacks t..."];
  Node1 -> Node23 [id="edge22_Node000001_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="LogicLayer.Models.blobert\l_AttackSlot",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blobert___attack_slot.html",tooltip="Dojo model, The attack slot dictates the attacks available for each of the items the blobert."];
  Node1 -> Node24 [id="edge23_Node000001_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="LogicLayer.Models.blobert\l_BlobertItem",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blobert___blobert_item.html",tooltip="Dojo model, Item that contains the stats given to the blobert, this can also be used to fetch the att..."];
  Node1 -> Node25 [id="edge24_Node000001_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="LogicLayer.Models.blobert\l_BlobertItemName",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_logic_layer_1_1_models_1_1blobert___blobert_item_name.html",tooltip="Dojo event, mapping that goes from item id to its name that is saved on chain, this model is saved ha..."];
}
